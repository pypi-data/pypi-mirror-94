swagger: '2.0'
info:
  title: Annif REST API
  version: v1
basePath: /v1
parameters:
  project_id:
    name: project_id
    in: path
    description: project identifier
    required: true
    type: string
    x-example: dummy-fi
paths:
  /projects:
    get:
      summary: get a list of projects
      operationId: annif.rest.list_projects
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProjectList'
      tags:
        - Project administration
  '/projects/{project_id}':
    get:
      summary: show project information
      operationId: annif.rest.show_project
      produces:
        - application/json
        - application/problem+json
      parameters:
        - $ref: '#/parameters/project_id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Project'
        '404':
          description: Project not found
          schema:
            $ref: '#/definitions/Problem'
      tags:
        - Project administration
  '/projects/{project_id}/suggest':
    post:
      summary: suggest subjects for a given text
      operationId: annif.rest.suggest
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - application/problem+json
      parameters:
        - $ref: '#/parameters/project_id'
        - name: text
          in: formData
          description: input text
          required: true
          type: string
        - name: limit
          in: formData
          description: maximum number of results to return
          required: false
          type: integer
          default: 10
        - name: threshold
          in: formData
          description: 'minimum score threshold, below which results will not be returned'
          required: false
          type: number
          default: 0
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SuggestionResultList'
        '404':
          description: Project not found
          schema:
            $ref: '#/definitions/Problem'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Problem'
      tags:
        - Automatic subject indexing
  '/projects/{project_id}/learn':
    post:
      summary: learn from manually indexed documents
      operationId: annif.rest.learn
      consumes:
        - application/json
      produces:
        - application/json
        - application/problem+json
      parameters:
        - $ref: '#/parameters/project_id'
        - name: documents
          in: body
          description: documents to learn from
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/IndexedDocument'
      responses:
        '204':
          description: successful operation
        '404':
          description: Project not found
          schema:
            $ref: '#/definitions/Problem'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/Problem'
      tags:
        - Learning from feedback
definitions:
  ProjectBackend:
    description: A backend of a project
    properties:
      backend_id:
        type: string
        example: my-backend
    required:
      - backend_id
  Project:
    description: A project definition
    properties:
      project_id:
        type: string
        example: my-project
      name:
        type: string
        example: My Project
      language:
        type: string
        example: en
      backend:
        $ref: '#/definitions/ProjectBackend'
      is_trained:
        type: boolean
        example: true
      modification_time:
        type: string
        format: date-time
        example: '2020-05-19T16:42:42.000000Z'
    required:
      - project_id
      - name
      - language
      - backend
  ProjectList:
    description: A list of projects
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
  SuggestionResult:
    description: A single candidate subject for a document
    properties:
      uri:
        type: string
        example: 'http://example.org/subject1'
      label:
        type: string
        example: Archaeology
      notation:
        type: string
        example: '42.42'
      score:
        type: number
        example: 0.85
    required:
      - uri
      - label
      - score
  SuggestionResultList:
    description: A list of analysis results
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/SuggestionResult'
  IndexedDocument:
    description: A document with attached, known good subjects
    properties:
      text:
        type: string
        example: "A quick brown fox jumped over the lazy dog."
      subjects:
        type: array
        items:
          type: object
          properties:
            uri:
              type: string
              example: 'http://example.org/subject1'
            label:
              type: string
              example: 'Vulpes vulpes'
  Problem:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: 'about:blank'
        example: 'https://zalando.github.io/problem/constraint-violation'
      title:
        type: string
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: >
          The HTTP status code generated by the origin server for this
          occurrence

          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 503
      detail:
        type: string
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
      instance:
        type: string
        format: uri
        description: >
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
