OpenShadingLanguage 1.00
# Compiled by oslc 1.10.10
# options: -q -O2 -I/Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders -I/Users/tylergubala/Code/Python/blenderpy/Blender/lib/darwin/osl/shaders -o /Users/tylergubala/Code/Python/blenderpy/build/darwin/intern/cycles/kernel/shaders/node_attribute.oso
shader node_attribute
param	string	bump_offset	"center"		%read{8,18} %write{2147483647,-1}
param	string	name	""		%read{0,6} %write{2147483647,-1} %derivs
oparam	point	Vector	0 0 0		%read{12,23} %write{5,23} %derivs
oparam	color	Color	0 0 0		%read{5,21} %write{4,21} %derivs
oparam	float	Fac	0		%read{14,25} %write{6,25} %derivs
oparam	float	Alpha	0		%read{16,27} %write{7,27} %derivs
local	float[4]	data	%read{1,7} %write{0,0} %derivs
temp	int	$tmp1	%read{2147483647,-1} %write{0,0}
const	int	$const1	0		%read{1,1} %write{2147483647,-1}
temp	float	$tmp2	%read{4,4} %write{1,1} %derivs
const	int	$const2	1		%read{2,2} %write{2147483647,-1}
temp	float	$tmp3	%read{4,4} %write{2,2} %derivs
const	int	$const3	2		%read{3,3} %write{2147483647,-1}
temp	float	$tmp4	%read{4,4} %write{3,3} %derivs
temp	int	$tmp5	%read{2147483647,-1} %write{6,6}
const	int	$const4	3		%read{7,7} %write{2147483647,-1}
const	string	$const5	"dx"		%read{8,8} %write{2147483647,-1}
temp	int	$tmp6	%read{9,9} %write{8,8}
temp	color	$tmp7	%read{11,11} %write{10,10} %derivs
temp	vector	$tmp8	%read{13,13} %write{12,12} %derivs
temp	float	$tmp9	%read{15,15} %write{14,14} %derivs
temp	float	$tmp10	%read{17,17} %write{16,16} %derivs
const	string	$const6	"dy"		%read{18,18} %write{2147483647,-1}
temp	int	$tmp11	%read{19,19} %write{18,18}
temp	color	$tmp12	%read{21,21} %write{20,20} %derivs
temp	vector	$tmp13	%read{23,23} %write{22,22} %derivs
temp	float	$tmp14	%read{25,25} %write{24,24} %derivs
temp	float	$tmp15	%read{27,27} %write{26,26} %derivs
code ___main___
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:27
#   getattribute(name, data);
	getattribute	$tmp1 name data 	%filename{"/Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl"} %line{27} %argrw{"wrw"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:28
#   Color = color(data[0], data[1], data[2]);
	aref		$tmp2 data $const1 	%line{28} %argrw{"wrr"}
	aref		$tmp3 data $const2 	%argrw{"wrr"}
	aref		$tmp4 data $const3 	%argrw{"wrr"}
	color		Color $tmp2 $tmp3 $tmp4 	%argrw{"wrrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:29
#   Vector = point(Color);
	assign		Vector Color 	%line{29} %argrw{"wr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:30
#   getattribute(name, Fac);
	getattribute	$tmp5 name Fac 	%line{30} %argrw{"wrw"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:31
#   Alpha = data[3];
	aref		Alpha data $const4 	%line{31} %argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:33
#   if (bump_offset == "dx") {
	eq		$tmp6 bump_offset $const5 	%line{33} %argrw{"wrr"}
	if		$tmp6 18 28 	%argrw{"r"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:34
#     Color += Dx(Color);
	Dx		$tmp7 Color 	%line{34} %argrw{"wr"} %argderivs{1}
	add		Color Color $tmp7 	%argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:35
#     Vector += Dx(Vector);
	Dx		$tmp8 Vector 	%line{35} %argrw{"wr"} %argderivs{1}
	add		Vector Vector $tmp8 	%argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:36
#     Fac += Dx(Fac);
	Dx		$tmp9 Fac 	%line{36} %argrw{"wr"} %argderivs{1}
	add		Fac Fac $tmp9 	%argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:37
#     Alpha += Dx(Alpha);
	Dx		$tmp10 Alpha 	%line{37} %argrw{"wr"} %argderivs{1}
	add		Alpha Alpha $tmp10 	%argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:39
#   else if (bump_offset == "dy") {
	eq		$tmp11 bump_offset $const6 	%line{39} %argrw{"wrr"}
	if		$tmp11 28 28 	%argrw{"r"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:40
#     Color += Dy(Color);
	Dy		$tmp12 Color 	%line{40} %argrw{"wr"} %argderivs{1}
	add		Color Color $tmp12 	%argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:41
#     Vector += Dy(Vector);
	Dy		$tmp13 Vector 	%line{41} %argrw{"wr"} %argderivs{1}
	add		Vector Vector $tmp13 	%argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:42
#     Fac += Dy(Fac);
	Dy		$tmp14 Fac 	%line{42} %argrw{"wr"} %argderivs{1}
	add		Fac Fac $tmp14 	%argrw{"wrr"}
# /Users/tylergubala/Code/Python/blenderpy/Blender/blender/intern/cycles/kernel/shaders/node_attribute.osl:43
#     Alpha += Dy(Alpha);
	Dy		$tmp15 Alpha 	%line{43} %argrw{"wr"} %argderivs{1}
	add		Alpha Alpha $tmp15 	%argrw{"wrr"}
	end
