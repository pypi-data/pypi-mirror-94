Metadata-Version: 2.1
Name: kuti
Version: 0.9.7
Summary: Keras training management utilities.
Home-page: https://github.com/subpic/ku/tree/master
License: MIT
Keywords: Keras,Tensorflow,Training management,Deep learning
Author: Vlad Hosu
Author-email: subpic@gmail.com
Maintainer: Vlad Hosu
Maintainer-email: subpic@gmail.com
Requires-Python: >=3.6.1
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: Pillow (>=7,<8)
Requires-Dist: future
Requires-Dist: h5py (>=2.10.0,<3.0.0)
Requires-Dist: matplotlib
Requires-Dist: munch
Requires-Dist: numpy
Requires-Dist: opencv-python
Requires-Dist: pandas
Requires-Dist: scikit-image (>=0.16.2,<0.17.0)
Requires-Dist: scikit-learn (>=0.22.1,<0.23.0)
Requires-Dist: scipy
Project-URL: Repository, https://github.com/subpic/ku/tree/master
Description-Content-Type: text/markdown

# Keras utilities (Kuti)

The project contains utilities for image assessment development with Keras/Tensorflow, including utilities for model training, custom generators, image management and augmentation. This is a poetry package for [ku](https://github.com/subpic/ku).

The library requires tensorflow >= 1.14 or 2.x installed.

    $ pip install kuti

## Overview

Some of the key components of each file:

**`model_helper.py`**:

* `ModelHelper`: Wrapper class that simplifies default usage of Keras for regression models.

**`generators.py`**:

* `DataGeneratorDisk`, `DataGeneratorHDF5`: Keras generators for on-disk images, and HDF5 stored features/images

**`image_utils.py`**:

* various utility functions for manipulating images (read, write to HDF5, batch resize, view batch)

**`image_augmenter.py`**:

* `ImageAugmenter`: Create custom image augmentation functions for training Keras models.

**`generic.py`**:

* `H5Helper`: Manage named data sets in HDF5 files, for us in Keras generators.
* `ShortNameBuilder`: Utility for building short (file) names that contain multiple parameters.

**`applications.py`**:

* `model_inception_multigap`, `model_inceptionresnet_multigap`: Model definitions for extracting MLSP narrow features
* `model_inception_pooled`, `model_inceptionresnet_pooled`: Model definitions for extracting MLSP wide features

You can find more information in the docstrings.

