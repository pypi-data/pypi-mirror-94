Набрів тут на цікаву статтю про життя без дебагера. Тут {мається на увазі=>йдеться про:::error_type=Fluency}{,=>:::error_type=Punctuation} щось на кшталт gdb, що дозволяє покрокове відслідковування. В статті правильно {говориться=>сказано:::error_type=Fluency} про проектування, втім не {розкриваються деталі=>розкрито деталей:::error_type=Fluency}. Як правило, більшість функцій можна зробити короткими, десь до 20-ти рядків {з=>із:::error_type=Spelling} невеликою{,=>:::error_type=Punctuation} кількістю параметрів, {як правило=>зазвичай:::error_type=Fluency} не більше {=>аніж:::error_type=Grammar} {трьох=>три:::error_type=Grammar}. Мінімізувати кількість {галуджень=>галужень:::error_type=Spelling} максимум до трьох-чотирьох. До цього мене привчив Lisp, де ти матимеш проблеми, якщо не будеш дотримуватись цих правил. А також, де це можливо або не занадто дорого — юніт-тести. Вказана структура сильно полегшує {їх=>їхнє:::error_type=Grammar} написання.


