{=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} проти всіх


Нещодавно AlphaZero — {нейросітка=>нейромережа:::error_type=Fluency} від DeepMind {=>—:::error_type=Punctuation} виграла у трьох найкращих алгоритмів гри у шахи, го та сьоґі — StockFish, AlphaGoZero та Elmo відповідно.

Я спробую розповісти, яка загальна ідея{ =>:::error_type=Punctuation}, чому це круто, а також спростувати деякі хайпи навколо :) {В=>У:::error_type=Spelling} кінці {посту=>допису:::error_type=Fluency} я приблизно опишу{=>,:::error_type=Punctuation} як саме працює {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation}.

Результати гри{,=>:::error_type=Punctuation} {=>(:::error_type=Punctuation}з оригінальної статті https://arxiv.org/abs/1712.01815{=>):::error_type=Punctuation}

Ідея {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} дуже проста:
1. Ми жорстко описуємо лише правила відповідної гри.
2. Входом в алгоритм є поточна ситуація на дошці. Виходом є хід.
3. Поточна версія алгоритму грає сама із собою. Ваги {нейросітки=>нейромережі:::error_type=Fluency}, що призвели до виграшних ходів, підсилюються, інші — послаблюються.
4. Жодних евристик, ендшпільних чи дебютних таблиць. {Сітка=>Мережа:::error_type=Fluency} вчиться вигравати, всі проміжні ситуації на дошці не мають значення.
Один й той самий алгоритм, з одними й тими ж початковими параметрами далі вчиться грати у будь-яку задану гру і через деякий{,=>:::error_type=Punctuation} час перевершує все, що було придумано до цього часу :)

Чому це круто.
По-перше, тому що не потребує {щодних=>жодних:::error_type=Spelling} знань “що таке добре, що таке погане” від людини. Все{=>,:::error_type=Punctuation} що{,=>:::error_type=Punctuation} потрібно — лише задати правила гри {і=>й:::error_type=Spelling} умови виграшу.

По-друге, таким чином можна покращувати якість гри нескінченно, точніше, до теоретичного ліміту {даної=>цієї:::error_type=Fluency} гри.

По-третє, хоча це потребує досить немаленької обчислювальної потужності, {по сучасним міркам=>за сучасними мірками:::error_type=Fluency}, це не захмарні речі. Будь-яка середня компанія має такі ресурси, а через {пару=>кілька:::error_type=Fluency} років, скоріше за все, це можна буде реалізувати і {дома=>вдома:::error_type=Fluency}. І це я маю на увазі лише тренування.

Які в {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} обмеження{=>?:::error_type=Punctuation}

1. Чітка заданість правил гри {і=>й:::error_type=Spelling} умов перемоги. Життя — не гра, тому алгоритм {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} не підходить для чогось, де ми не можемо ввести хороший KPI чи чітко визначити ціль. Більш того, якщо ми визначимо ціль неправильно, {=>то:::error_type=Fluency} це як загадувати бажання у злого джина: вам дадуть саме те, що ви попросили, а не те, що {=>ви :::error_type=Fluency}мали на увазі.
2. Умовно велика кількість необхідних ігор для тренування. Для тренування {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} було проведено 20–40 млн ігор. Це {можлво=>можливо:::error_type=Spelling} лише для дешевих та швидких процесів {в=>у:::error_type=Spelling} {реальномі=>реальному:::error_type=Spelling} світі{,=>:::error_type=Punctuation} або для віртуальних симуляцій. Якщо ж вартість спроби велика в сенсі часу чи грошей, то….

Як працює {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} (спрощено)
Двома наріжними каменями алгоритму є {нейросітки=>нейромережі:::error_type=Fluency} та Монте-Карло пошук на дереві.

Гра.

Отримавши нову позицію на дошці, {=>":::error_type=Punctuation}АльфаЗеро{"=>:::error_type=Punctuation}{робить наступне=>:::error_type=Fluency}:
Image for post

Навчання

Після того, як {зіграна деяка=>зіграно якусь:::error_type=Grammar} {деяка=>якусь:::error_type=Fluency} кількість партій, ситуації на дошці {використовуються=>використовують:::error_type=Grammar} для навчання наступної ітерації алгоритму, а саме функцій оцінки {и=>і:::error_type=Spelling} пропонування ходів. Ті, що оцінили правильно{=>,:::error_type=Punctuation} — підсилюються, ті, що неправильно{=>,:::error_type=Punctuation} — послаблюються.

Відповіді на популярні питання

П: {У=>В:::error_type=Spelling} {AlphaZero=>"АльфаЗеро":::error_type=Fluency} більший бюджет обчислень.
В: Можливо, це важко порівнювати через занадто різні архітектури. 4 спеціалізованих TPU {чіпа=>чипи:::error_type=Grammar} для {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} проти 64 поточного CPU із 1Гб кешу для StochFish. Остання {дійно=>дійсно:::error_type=Spelling} {більш ефективна=>ефективніша:::error_type=Fluency} для менших бюджетів, {в=>у:::error_type=Spelling} статті {приведений=>наведено:::error_type=Fluency} графік:
Image for post
ЕЛО для різних обчислювальних бюджетів. {=>":::error_type=Punctuation}Стокфіш{=>":::error_type=Punctuation} {краще=>кращий:::error_type=Grammar} в малому бюджеті, але гірше скейлиться.

П: {=>":::error_type=Punctuation}Стокфіш{=>":::error_type=Punctuation} грав без дебютних та ендшпільних таблиць, а {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} напрацював свої.
В: Це лише {максимум=>щонайменше:::error_type=Fluency} наполовину {вірно=>правильно:::error_type=Fluency}. Я не знайшов в оригінальній статті чіткого визначення, {чи =>:::error_type=Fluency}використовував {СтокФіш=>Стокфіш:::error_type=Punctuation}{=>":::error_type=Punctuation} таблиці{,=>:::error_type=Punctuation} чи ні. А {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} не має жодних таблиць у тому сенсі, що будь-яку позицію він обробляє таким самим чином, як і іншу, жодних “підглядань як сходити”. ІМХО{=>,:::error_type=Punctuation} це і є, вміння гри, а не автоматичне запам’ятовування “якщо так, то так”.

П: Був використаний {=>":::error_type=Punctuation}Стокфіш{=>":::error_type=Punctuation} не останньої версії з {не оптимальними=>неоптимальними:::error_type=Spelling} налаштуваннями. Shannar de Kassal
В: Можливо. Самі {=>":::error_type=Punctuation}DeepMind{=>":::error_type=Punctuation} відмовляються від коментарів до публікації статті в рецензованому журналі, а там обіцяють навести все-все. Моя думка:
1) Якщо це так, то це, звісно, дуже некрасиво.
2)На результаті це {б=>би:::error_type=Spelling} відбилося {мінімально=>найменше:::error_type=Fluency}. Звичайно, можливо, що правильно налаштований {=>":::error_type=Punctuation}Стокфіш{=>":::error_type=Punctuation} грає дуже близько до оптимуму і велику перевагу отримати {не можливо=>неможливо:::error_type=Spelling} в принципі. Але мені здається, що таки ні і що лишивши {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} грати саму із собою ще {пару=>кілька:::error_type=Fluency} тижнів, можна показати той самий розгром, що і зараз.
3) А чому ніхто не порівнює кількість оцінених позицій для одного ходу — 70 млн{.=>:::error_type=Punctuation} у {=>":::error_type=Punctuation}Стокфіш{=>":::error_type=Punctuation} проти 40 тис. у {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation}. Чи це чесно — робити більший перебір?

P.S. Голова DeepMind у своїй доповіді навів {декілька=>кілька:::error_type=Fluency} прикладів “нетипової” для людини чи шахового алгоритму гри. Так, {=>":::error_type=Punctuation}АльфаЗеро{=>":::error_type=Punctuation} пожертвував слоном та не намагався його відіграти. Завів ферзя у кут(!) {,=>:::error_type=Punctuation}тощо. Але всі ці незрозумілі{=>,:::error_type=Punctuation} на {перших=>перший:::error_type=Grammar} погляд{=>,:::error_type=Punctuation} {ход=>ходи:::error_type=Grammar}{,=>:::error_type=Punctuation} {у решті решт=>врешті-решт:::error_type=Spelling} {призвели=>привели:::error_type=Fluency} до перемоги.


