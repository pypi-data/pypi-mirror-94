{"version":3,"sources":["listEditView.es6.js"],"names":[],"mappings":"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","file":"listEditView.js","sourcesContent":["(function() {\n\n\nconst entryTemplate = _.template(dedent`\n    <li class=\"list-edit-entry\" data-list-index=\"<%- index %>\">\n     <input type=\"text\"<%= inputAttrs %>>\n     <a href=\"#\" class=\"list-edit-remove-item\" role=\"button\"\n        title=<%- removeText %>\">\n       <img src=\"<%- deleteImgUrl %>\">\n     </a>\n    </li>\n`);\n\n/**\n * A view for editing a list of elements.\n *\n * This is the JavaScript view for\n * :py:class:`djblets.forms.widgets.ListEditWidget`.\n */\nDjblets.Forms.ListEditView = Backbone.View.extend({\n    events: {\n        'click .list-edit-add-item': '_addItem',\n        'click .list-edit-remove-item': '_removeItem',\n        'blur input': '_onBlur',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         The view options.\n     *\n     * Option Args:\n     *     inputAttrs (string):\n     *         The attributes that should be added to each ``<input>`` element.\n     *\n     *     deleteImgUrl (string):\n     *         The URL for the delete icon image.\n     *\n     *     removeText (string):\n     *         The localized text for removing an item.\n     *\n     *     sep (string):\n     *         The list separator. It will be used to join the list of values\n     *         into a string.\n     */\n    initialize(options) {\n        this._inputAttrs = options.inputAttrs;\n        this._deleteImgUrl = options.deleteImgUrl;\n        this._removeText = options.removeText;\n        this._sep = options.sep;\n        this._values = [];\n    },\n\n    /**\n     * Render the view.\n     *\n     * Since most of the view is rendered by Django, this just sets up some\n     * event listeners.\n     *\n     * Returns:\n     *     Djblets.Forms.ListEditView:\n     *     This view.\n     */\n    render() {\n        this._$list = this.$('ul');\n        this._$list.find('.list-edit-entry > input').each((idx, el) => {\n            this._values.push($(el).val());\n        });\n        this._$addBtn = this.$('.list-edit-add-item');\n        this._$hidden = this.$('input[type=\"hidden\"]');\n\n        return this;\n    },\n\n    /**\n     * Remove the view from the DOM.\n     *\n     * Returns:\n     *     Djblets.Forms.ListEditView:\n     *     This view.\n     */\n    remove() {\n        this.$el.closest('form').off('submit', this._onSubmit);\n        return this;\n    },\n\n    /**\n     * Add an item to the list.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event that triggered this event handler.\n     */\n    _addItem(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $entry = $(entryTemplate({\n                index: this._values.length,\n                deleteImgUrl: this._deleteImgUrl,\n                inputAttrs: this._inputAttrs,\n                removeText: this._removeText,\n            }))\n            .insertBefore(this._$addBtn);\n\n        $entry\n            .find('.list-edit-add-item')\n                .on('click', e => this._addItem(e))\n            .end()\n            .find('input')\n                .on('change', e => this._onBlur(e))\n            .end();\n\n        this._values.push('');\n    },\n\n    /**\n     * Remove an item.\n     *\n     * When there is only a single item in the list, we clear it instead of\n     * removing it so there is always at least one ``<input>`` element and\n     * value in the list.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event that triggered this event handler.\n     */\n    _removeItem(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $target = $(e.target);\n        const $entry = $target.closest('.list-edit-entry');\n        const index = $entry.attr('data-list-index');\n\n        if (this._values.length > 1) {\n            $entry.remove();\n            this._values.splice(index, 1);\n            this._$list.find('.list-edit-entry').each((idx, el) => {\n                $(el).attr('data-list-index', idx);\n            });\n        } else {\n            this._values[index] = '';\n            $target.siblings('input').val('');\n        }\n\n        this._$hidden\n            .val(this._values.filter(v => v.length > 0).join(this._sep));\n    },\n\n    /**\n     * Update the internal values when a field changes.\n     *\n     * Args:\n     *     e (Event):\n     *         The blur event.\n     */\n    _onBlur(e) {\n        const $target = $(e.target);\n        const index = $target\n            .closest('.list-edit-entry')\n            .attr('data-list-index');\n\n        this._values[index] = $target.val();\n        this._$hidden\n            .val(this._values.filter(v => v.length > 0).join(this._sep));\n    },\n});\n\n\n})();\n"]}