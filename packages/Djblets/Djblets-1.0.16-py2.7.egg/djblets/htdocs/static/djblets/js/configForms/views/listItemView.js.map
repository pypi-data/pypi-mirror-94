{"version":3,"sources":["listItemView.es6.js"],"names":[],"mappings":"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","file":"listItemView.js","sourcesContent":["/**\n * Display a list item for a config page.\n *\n * The list item will show information on the item and any actions that can\n * be invoked.\n *\n * By default, this will show the text from the ListItem model, linking it\n * if the model has an editURL attribute. This can be customized by subclasses\n * by overriding `template`.\n */\nDjblets.Config.ListItemView = Backbone.View.extend({\n    tagName: 'li',\n    className: 'config-forms-list-item',\n    iconBaseClassName: 'djblets-icon',\n\n    actionHandlers: {},\n\n    template: _.template(dedent`\n        <% if (editURL) { %>\n        <a href=\"<%- editURL %>\"><%- text %></a>\n        <% } else { %>\n        <%- text %>\n        <% } %>\n    `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'actionsChanged', this.render);\n        this.listenTo(this.model, 'request', this.showSpinner);\n        this.listenTo(this.model, 'sync', this.hideSpinner);\n        this.listenTo(this.model, 'destroy', this.remove);\n\n        this.$spinnerParent = null;\n        this.$spinner = null;\n    },\n\n    /**\n     *  Render the view.\n     *\n     * This will be called every time the list of actions change for\n     * the item.\n     *\n     * Returns:\n     *     Djblets.Config.ListItemView:\n     *     This view.\n     */\n    render() {\n        this.$el\n            .empty()\n            .append(this.template(_.defaults(\n                this.model.attributes,\n                this.getRenderContext()\n            )));\n        this.addActions(this.getActionsParent());\n\n        return this;\n    },\n\n    /**\n     * Return additional render context.\n     *\n     * By default this returns an empty object. Subclasses can use this to\n     * provide additional values to :js:attr:`template` when it is rendered.\n     *\n     * Returns:\n     *     object:\n     *     Additional rendering context for the template.\n     */\n    getRenderContext() {\n        return {};\n    },\n\n    /**\n     * Remove the item.\n     *\n     * This will fade out the item, and then remove it from view.\n     */\n    remove() {\n        this.$el.fadeOut('normal',\n                         () => Backbone.View.prototype.remove.call(this));\n    },\n\n    /**\n     * Return the container for the actions.\n     *\n     * This defaults to being this element, but it can be overridden to\n     * return a more specific element.\n     *\n     * Returns:\n     *     jQuery:\n     *     The container for the actions.\n     */\n    getActionsParent() {\n        return this.$el;\n    },\n\n    /**\n     * Display a spinner on the item.\n     *\n     * This can be used to show that the item is being loaded from the\n     * server.\n     */\n    showSpinner() {\n        if (this.$spinner) {\n            return;\n        }\n\n        this.$spinner = $('<span>')\n            .addClass('fa fa-spinner fa-pulse config-forms-list-item-spinner')\n            .prependTo(this.$spinnerParent)\n            .hide()\n            .css('visibility', 'visible')\n            .fadeIn();\n    },\n\n    /**\n     * Hide the currently visible spinner.\n     */\n    hideSpinner() {\n        if (!this.$spinner) {\n            return;\n        }\n\n        /*\n         * The slow fadeout does two things:\n         *\n         * 1) It prevents the spinner from disappearing too quickly\n         *    (in combination with the fadeIn above), in case the operation\n         *    is really fast, giving some feedback that something actually\n         *    happened.\n         *\n         * 2) By fading out, it doesn't look like it just simply stops.\n         *    Helps provide a sense of completion.\n         */\n        this.$spinner.fadeOut('slow', () => {\n            this.$spinner.remove();\n            this.$spinner = null;\n        });\n    },\n\n    /**\n     * Add all registered actions to the view.\n     *\n     * Args:\n     *     $parentEl (jQuery):\n     *         The parent element to add the actions to.\n     */\n    addActions($parentEl) {\n        const $actions = $('<span>')\n            .addClass('config-forms-list-item-actions');\n\n        this.model.actions.forEach(action => {\n            const $action = this._buildActionEl(action)\n                .appendTo($actions);\n\n            if (action.children) {\n                if (action.label) {\n                    $action.append(' &#9662;');\n                }\n\n                /*\n                 * Show the dropdown after we let this event propagate.\n                 */\n                $action.click(() => _.defer(\n                    () => this._showActionDropdown(action, $action)\n                ));\n            }\n        });\n\n        this.$spinnerParent = $actions;\n\n        $actions.prependTo($parentEl);\n    },\n\n    /**\n     * Show a dropdown for a menu action.\n     *\n     * Args:\n     *     action (object):\n     *         The action to show the dropdown for. See\n     *         :js:class:`Djblets.Config.ListItem`. for a list of attributes.\n     *\n     *     $action (jQuery):\n     *         The element that represents the action.\n     */\n    _showActionDropdown(action, $action) {\n        const actionPos = $action.position();\n        const $pane = $('<ul/>')\n                .css('position', 'absolute')\n                .addClass('action-menu')\n                .click(e => e.stopPropagation());\n        const actionLeft = actionPos.left + $action.getExtents('m', 'l');\n\n        action.children.forEach(\n            childAction => $('<li/>')\n                .addClass(`config-forms-list-action-row-${childAction.id}`)\n                .append(this._buildActionEl(childAction))\n                .appendTo($pane)\n        );\n\n        this.trigger('actionMenuPopUp', {\n            action: action,\n            $action: $action,\n            $menu: $pane\n        });\n\n        $pane.appendTo($action.parent());\n\n        const winWidth = $(window).width();\n        const paneWidth = $pane.width();\n\n        $pane.move(($action.offset().left + paneWidth > winWidth\n                    ? actionLeft + $action.innerWidth() - paneWidth\n                    : actionLeft),\n                   actionPos.top + $action.outerHeight(),\n                   'absolute');\n\n        /* Any click outside this dropdown should close it. */\n        $(document).one('click', () => {\n            this.trigger('actionMenuPopDown', {\n                action: action,\n                $action: $action,\n                $menu: $pane\n            });\n\n            $pane.remove();\n        });\n    },\n\n    /**\n     * Build the element for an action.\n     *\n     * If the action's type is ``'checkbox'``, a checkbox will be shown.\n     * Otherwise, the action will be shown as a button.\n     *\n     * Args:\n     *     action (object):\n     *         The action to show the dropdown for. See\n     *         :js:class:`Djblets.Config.ListItem`. for a list of attributes.\n     */\n    _buildActionEl(action) {\n        const actionHandlerName = (action.enabled !== false\n                                   ? this.actionHandlers[action.id]\n                                   : null);\n        const isCheckbox = (action.type === 'checkbox');\n        const isRadio = (action.type === 'radio');\n\n        let $action;\n        let $result;\n\n        if (isCheckbox || isRadio) {\n            const inputID = _.uniqueId('action_' + action.type);\n            $action = $('<input/>')\n                .attr({\n                    name: action.name,\n                    type: action.type,\n                    id: inputID\n                });\n            const $label = $('<label>')\n                .attr('for', inputID)\n                .text(action.label);\n\n            if (action.id) {\n                $label.addClass(`config-forms-list-action-label-${action.id}`);\n            }\n\n            $result = $('<span/>')\n                .append($action)\n                .append($label);\n\n            if (action.propName) {\n                if (isCheckbox) {\n                    $action.bindProperty('checked', this.model,\n                                         action.propName);\n                } else if (isRadio) {\n                    $action.bindProperty(\n                        'checked', this.model, action.propName, {\n                            radioValue: action.radioValue\n                        }\n                    );\n                }\n            }\n\n            if (action.enabledPropName) {\n                $action.bindProperty(\n                    'disabled', this.model, action.enabledPropName,\n                    {\n                        inverse: (action.enabledPropInverse !== true)\n                    });\n            }\n\n            if (actionHandlerName) {\n                const actionHandler = _.debounce(\n                    _.bind(this[actionHandlerName], this),\n                    50,\n                    true\n                );\n\n                $action.change(actionHandler);\n\n                if (isRadio && action.dispatchOnClick) {\n                    $action.click(actionHandler);\n                }\n            }\n        } else {\n            $action = $result = $('<a class=\"btn\">')\n                .text(action.label || '');\n\n            if (action.iconName) {\n                $action.append($('<span>')\n                    .addClass(this.iconBaseClassName)\n                    .addClass(`${this.iconBaseClassName}-${action.iconName}`));\n            }\n\n            if (actionHandlerName) {\n                $action.click(_.bind(this[actionHandlerName], this));\n            }\n        }\n\n        if (action.id) {\n            $action.addClass(`config-forms-list-action-${action.id}`);\n        }\n\n        if (action.danger) {\n            $action.addClass('danger');\n        }\n\n        if (action.enabled === false) {\n            $action.prop('disabled', true);\n            $result.addClass('disabled');\n        }\n\n        return $result;\n    },\n});\n"]}