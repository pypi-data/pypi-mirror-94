on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'  # accept all tags of the format vX.X.X

name: Publish Docs

jobs:
  build:
    name: Build & Publish Docs
    runs-on: ubuntu-latest
    if: github.repository == 'napari/napari'
    steps:
      - name: Clone main repo
        uses: actions/checkout@master
        with:
          fetch-depth: 0  # keep all commit history
          path: main      # place in a named directory
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install Drivers
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx libqt5x11extras5
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[all]"
          python -m pip install -r docs/requirements.txt
        working-directory: main
      - name: Build Docs
        run: make docs
        working-directory: main
      - name: Clone docs repo
        uses: actions/checkout@master
        with:
          repository: 'napari/docs'
          ref: master
          path: docs
          token: ${{ secrets.DOCS_GITHUB_TOKEN }}
      - name: Get tag if is a release
        uses: olegtarasov/get-tag@v2.1
        with:
          tagRegex: "v(.*)"  # remove the leading v
        continue-on-error: true  # sets $GIT_TAG_NAME when successful
      - name: Copy docs to docs repo
        id: cp
        run: |
          VER=${GIT_TAG_NAME:-dev}
          DIR=./docs/$VER
          rm -rf $DIR
          cp -r ./main/docs/_build/html $DIR
          echo "::set-output name=directory::$VER"
      - name: Add & commit changes
        uses: EndBug/add-and-commit@v4
        with:
          message: |
            update ${{ steps.cp.outputs.directory }} docs
            autogenerated from ${{ github.repository }}@${{ github.sha }}
          ref: master
          add: ${{ steps.cp.outputs.directory }}
          cwd: ./docs
        env:
          GITHUB_TOKEN: ${{ secrets.DOCS_GITHUB_TOKEN }}
          
