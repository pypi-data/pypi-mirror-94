from ..argument import Argument as Argument
from ..field import Field as Field
from ..scalars import String as String
from ..structures import NonNull as NonNull
from .utils import MyLazyType as MyLazyType
from typing import Any

class MyInstance:
    value: str = ...
    value_func: Any = ...
    def value_method(self) -> Any: ...

def test_field_basic() -> None: ...
def test_field_required() -> None: ...
def test_field_default_value_not_callable() -> Any: ...
def test_field_source() -> None: ...
def test_field_with_lazy_type() -> Any: ...
def test_field_with_lazy_partial_type() -> Any: ...
def test_field_with_string_type() -> None: ...
def test_field_not_source_and_resolver() -> None: ...
def test_field_source_func() -> None: ...
def test_field_source_method() -> None: ...
def test_field_source_as_argument() -> None: ...
def test_field_name_as_argument() -> None: ...
def test_field_source_argument_as_kw() -> None: ...
