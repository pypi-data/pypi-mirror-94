openapi: 3.0.3
info:
  title: Imbi
  description: Imbi is an operational management platform for medium to large environments.
  license:
    name: BSD 3-Clause
    url: 'https://opensource.org/licenses/BSD-3-Clause'
  version: '{{ settings["version"] }}'
  contact:
    name: AWeber
    url: 'https://github.com/aweber/imbi'
  x-logo:
    url: /static/images/logo.png
components:
  securitySchemes:
    session:
      type: apiKey
      description: Uses the session cookie of an authenticated user to authenticate each API request
      in: cookie
      name: session
    token:
      type: apiKey
      description: Uses an API key generated for a user to authenticate each API request
      in: header
      name: Private-Token
security:
  - session: []
  - token: []
paths:
  /authentication-tokens:
    post:
      summary: Create Token
      description: Create a new authentication token for the API
      tags:
        - User
      requestBody:
        description: The configuration system record to create
        content:
          application/json:
            schema:
              schema:
                title: Authentication Token
                description: Configuration Management or Storage System
                type: object
                properties:
                  name:
                    description: The name of the token provided by the user
                    type: string
                required:
                  - name
                additionalProperties: false
            examples:
              record:
                name: Test Integration
          application/msgpack:
            schema:
              schema:
                title: Authentication Token
                description: Configuration Management or Storage System
                type: object
                properties:
                  name:
                    description: The name of the token provided by the user
                    type: string
                required:
                  - name
                additionalProperties: false
            examples:
              record:
                name: Test Integration
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Authentication Token
                description: Configuration Management or Storage System
                type: object
                properties:
                  name:
                    description: The name of the token provided by the user
                    type: string
                  username:
                    description: The username that owns the token
                    type: string
                  token:
                    description: The authentication token value
                    type: string
                    format: uuid
                  created_at:
                    description: The timestamp indicating when the token was created
                    type: string
                    format: iso8601-timestamp
                  expires_at:
                    description: The timestamp indicating when the token expires
                    type: string
                    format: iso8601-timestamp
                  last_used_at:
                    description: The timestamp indicating when the token was last used
                    type: string
                    format: iso8601-timestamp
                    nullable: true
                additionalProperties: false
              examples:
                records:
                  summary: The newly created authentication token
                  value:
                    name: Test Integration
                    username: ffink
                    token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                    created_at: 1964-01-01T19:11:11.000Z
                    expires_at: 1965-01-01T19:11:11.000Z
                    last_used_at: null
            application/msgpack:
              schema:
                $ref: '#/paths/~1authentication-tokens/post/responses/200/content/application~1json/schema'
              examples:
                records:
                  summary: The newly created authentication token
                  value:
                    name: Test Integration
                    username: ffink
                    token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                    created_at: 1964-01-01T19:11:11.000Z
                    expires_at: 1965-01-01T19:11:11.000Z
                    last_used_at: null
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    get:
      description: Retrieve the list of tokens for the current authenticated user
      summary: Get Tokens
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1authentication-tokens/post/responses/200/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple authentication tokens
                  value:
                    - name: Test Integration
                      username: ffink
                      token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                      created_at: 1964-01-01T19:11:11.000Z
                      expires_at: 1965-01-01T19:11:11.000Z
                      last_used_at: 2021-02-06T20:34:00.000Z
                    - name: Test Integration
                      username: ffink
                      token: 017778b6-94d3-ab49-f9c8-ae5d7fd999bf
                      created_at: 1964-02-28T19:11:11.000Z
                      expires_at: 1965-02-28T19:11:11.000Z
                      last_used_at: null
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1authentication-tokens/post/responses/200/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple authentication tokens
                  value:
                    - name: Test Integration
                      username: ffink
                      token: 017778b5-188e-c3ac-7aa6-76e41e116a95
                      created_at: 1964-01-01T19:11:11.000Z
                      expires_at: 1965-01-01T19:11:11.000Z
                      last_used_at: 2021-02-06T20:34:00.000Z
                    - name: Test Integration
                      username: ffink
                      token: 017778b6-94d3-ab49-f9c8-ae5d7fd999bf
                      created_at: 1964-02-28T19:11:11.000Z
                      expires_at: 1965-02-28T19:11:11.000Z
                      last_used_at: null
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  '/authentication-tokens/{token}':
    delete:
      summary: Delete Token
      description: Remove an authentication token
      tags:
        - User
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
      parameters:
        - name: token
          in: path
          description: Authentication Token
          required: true
          schema:
            type: string
            format: uuid
  /configuration-systems:
    get:
      description: Retrieve the collection of configuration systems
      summary: Get Configuration Systems
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1configuration-systems/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple configuration system records
                  value:
                    - name: Ansible
                      description: Ansible is powerful IT automation that you can learn quickly
                      icon_class: fas fa-microscope
                    - name: Consul
                      description: Feature rich key/value store to easily configure projects
                      icon_class: fas fa-blind
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1configuration-systems/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple configuration system records
                  value:
                    - name: Ansible
                      description: Ansible is powerful IT automation that you can learn quickly
                      icon_class: fas fa-microscope
                    - name: Consul
                      description: Feature rich key/value store to easily configure projects
                      icon_class: fas fa-blind
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new configuration system record
      requestBody:
        description: The configuration system record to create
        content:
          application/json:
            schema:
              title: Configuration System
              description: Configuration Management or Storage System
              type: object
              properties:
                name:
                  description: The display name for a configuration system
                  type: string
                description:
                  description: A description of the configuration system
                  type: string
                  nullable: true
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
              required:
                - name
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full configuration system record
                value:
                  name: Consul
                  description: Feature rich key/value store to easily configure projects
                  icon_class: fas fa-blind
          application/msgpack:
            schema:
              $ref: '#/paths/~1configuration-systems/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full configuration system record
                value:
                  name: Consul
                  description: Feature rich key/value store to easily configure projects
                  icon_class: fas fa-blind
      tags:
        - Configuration Systems
      responses:
        '200':
          description: 'The request to create, update, or retrieve the configuration system was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1configuration-systems/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1configuration-systems/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1configuration-systems/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1configuration-systems/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/configuration-systems/{name}':
    get:
      summary: Get Record
      description: Retrieve a configuration system record
      tags:
        - Configuration Systems
      responses:
        '200':
          $ref: '#/paths/~1configuration-systems/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a configuration system, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Configuration Systems
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1configuration-systems/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a configuration system record
      tags:
        - Configuration Systems
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Configuration System Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /cookie-cutters:
    get:
      description: Retrieve the collection of cookie cutters
      summary: Get Cookie Cutters
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple cookie cutter records
                  value:
                    - cookiecutter: buzzops-project
                      project_type_id: 1
                      type: project
                      description: A HTTP API that runs in Kubernetes
                      url: 'https://github.com/aweber/k8s-api-cookiecutter.git'
                    - cookiecutter: buzzops-consumer
                      project_type_id: 2
                      type: project
                      description: A rejected consumer application
                      url: 'https://github.com/aweber/k8s-consumer-cookiecutter.git'
                    - cookiecutter: buzzops-consumer-dashboard
                      project_type_id: 1
                      type: dashboard
                      description: A Grafana dashboard for a rejected consumer application
                      url: 'https://github.com/aweber/grafana-consumer-cookiecutter.git'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple cookie cutter records
                  value:
                    - cookiecutter: buzzops-project
                      project_type_id: 1
                      type: project
                      description: A HTTP API that runs in Kubernetes
                      url: 'https://github.com/aweber/k8s-api-cookiecutter.git'
                    - cookiecutter: buzzops-consumer
                      project_type_id: 2
                      type: project
                      description: A rejected consumer application
                      url: 'https://github.com/aweber/k8s-consumer-cookiecutter.git'
                    - cookiecutter: buzzops-consumer-dashboard
                      project_type_id: 1
                      type: dashboard
                      description: A Grafana dashboard for a rejected consumer application
                      url: 'https://github.com/aweber/grafana-consumer-cookiecutter.git'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new cookie cutter record
      requestBody:
        description: The cookie cutter record to create
        content:
          application/json:
            schema:
              title: Cookie Cutter
              description: Used to describe the cookie cutters available when creating a project
              type: object
              properties:
                name:
                  description: The display name for a cookiecutter
                  type: string
                type:
                  description: The type of cookie cutter
                  type: string
                  enum:
                    - project
                    - dashboard
                project_type_id:
                  description: The project type associated with the cookie cutter
                  type: number
                description:
                  description: A description of the cookie cutter
                  type: string
                  nullable: true
                url:
                  description: The git URL to the cookie cutter
                  type: string
              required:
                - name
                - type
                - project_type_id
                - url
              additionalProperties: false
            examples:
              record:
                summary: A full cookie cutter record
                value:
                  name: k8s-rejected-consumer
                  type: project
                  project_type_id: 1
                  description: A rejected consumer that runs in Kubernetes
                  url: 'https://gitlab.com/aweber/cookiecutters/k8s-rejected-consumer.git'
          application/msgpack:
            schema:
              $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full cookie cutter record
                value:
                  name: k8s-rejected-consumer
                  type: project
                  project_type_id: 1
                  description: A rejected consumer that runs in Kubernetes
                  url: 'https://gitlab.com/aweber/cookiecutters/k8s-rejected-consumer.git'
      tags:
        - Cookie Cutters
      responses:
        '200':
          description: 'The request to create, update, or retrieve the cookie cutter was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1cookie-cutters/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/cookie-cutters/{name}':
    get:
      summary: Get Record
      description: Retrieve a cookie cutter record
      tags:
        - Cookie Cutters
      responses:
        '200':
          $ref: '#/paths/~1cookie-cutters/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: |-
        Update a cookie cutter, providing a JSON Patch (RFC-6209) payload of update
        operations to apply.
      tags:
        - Cookie Cutters
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1cookie-cutters/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a cookie cutter record
      tags:
        - Cookie Cutters
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Cookie Cutter Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /data-centers:
    get:
      description: Retrieve the collection of data centers
      summary: Get Data Centers
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1data-centers/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple data center records
                  value:
                    - name: us-east-1
                      description: US East (N. Virginia)
                      icon_class: fab fa-aws
                    - name: us-east-2
                      description: US East (Ohio)
                      icon_class: fab fa-aws
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1data-centers/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple data center records
                  value:
                    - name: us-east-1
                      description: US East (N. Virginia)
                      icon_class: fab fa-aws
                    - name: us-east-2
                      description: US East (Ohio)
                      icon_class: fab fa-aws
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new data center record
      requestBody:
        description: The data center record to create
        content:
          application/json:
            schema:
              title: Data Center
              description: |-
                A large group of networked computer servers typically used by
                organizations for the remote storage, processing, or distribution of
                large amounts of data.
              type: object
              properties:
                name:
                  description: The display name for a data center
                  type: string
                description:
                  description: A description of the data center
                  type: string
                  nullable: true
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
              required:
                - name
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full data center record
                value:
                  name: us-east-1
                  description: US East (N. Virginia)
                  icon_class: fab fa-aws
          application/msgpack:
            schema:
              $ref: '#/paths/~1data-centers/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full data center record
                value:
                  name: us-east-1
                  description: US East (N. Virginia)
                  icon_class: fab fa-aws
      tags:
        - Data Centers
      responses:
        '200':
          description: 'The request to create, update, or retrieve the data center was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1data-centers/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1data-centers/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1data-centers/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1data-centers/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/data-centers/{name}':
    get:
      summary: Get Record
      description: Retrieve a data center record
      tags:
        - Data Centers
      responses:
        '200':
          $ref: '#/paths/~1data-centers/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a data center, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Data Centers
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1data-centers/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a data center record
      tags:
        - Data Centers
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Data Center Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /deployment-types:
    get:
      description: Retrieve the collection of deployment types
      summary: Get Deployment Types
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1deployment-types/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple deployment type records
                  value:
                    - name: Helm
                      description: The package manager for Kubernetes
                      icon_class: icon helm
                    - name: Artifcatory
                      description: Package artifact uploaded to artifactory
                      icon_class: fab fa-aws
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1deployment-types/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple deployment type records
                  value:
                    - name: Helm
                      description: The package manager for Kubernetes
                      icon_class: icon helm
                    - name: Artifcatory
                      description: Package artifact uploaded to artifactory
                      icon_class: fab fa-aws
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new deployment type record
      requestBody:
        description: The deployment type record to create
        content:
          application/json:
            schema:
              title: Deployment Type
              description: Used to describe the types of project deployment systems
              type: object
              properties:
                name:
                  description: The display name for a deployment type
                  type: string
                description:
                  description: A description of the deployment type
                  type: string
                  nullable: true
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
              required:
                - name
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full deployment type record
                value:
                  name: gitlab-ci
                  description: Helm
                  icon_class: fab fa-aws
          application/msgpack:
            schema:
              $ref: '#/paths/~1deployment-types/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full deployment type record
                value:
                  name: gitlab-ci
                  description: Helm
                  icon_class: fab fa-aws
      tags:
        - Deployment Types
      responses:
        '200':
          description: 'The request to create, update, or retrieve the deployment type was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1deployment-types/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1deployment-types/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1deployment-types/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1deployment-types/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/deployment-types/{name}':
    get:
      summary: Get Record
      description: Retrieve a deployment type record
      tags:
        - Deployment Types
      responses:
        '200':
          $ref: '#/paths/~1deployment-types/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a deployment type, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Deployment Types
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1deployment-types/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a deployment type record
      tags:
        - Deployment Types
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Deployment Type Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /environments:
    get:
      description: Retrieve the collection of environments
      summary: Get Environments
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple environment records
                  value:
                    - name: testing
                      description: |
                        The testing environment reflects the state of HEAD state of the
                        master branch in our Git Repositories for all projects
                      icon_class: fab fa-aws
                    - name: staging
                      description: |
                        The staging environment reflects tagged project releases that are
                        intended to be to deployed to production
                      icon_class: fab fa-aws
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple environment records
                  value:
                    - name: testing
                      description: |
                        The testing environment reflects the state of HEAD state of the
                        master branch in our Git Repositories for all projects
                      icon_class: fab fa-aws
                    - name: staging
                      description: |
                        The staging environment reflects tagged project releases that are
                        intended to be to deployed to production
                      icon_class: fab fa-aws
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new environment record
      requestBody:
        description: The environment record to create
        content:
          application/json:
            schema:
              title: Environment
              description: Used to describe the types of project deployment systems
              type: object
              properties:
                name:
                  description: The display name for a environment
                  type: string
                description:
                  description: A description of the environment
                  type: string
                  nullable: true
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
              required:
                - name
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full environment record
                value:
                  name: testing
                  description: |
                    The testing environment reflects the state of HEAD state of the
                    master branch in our Git Repositories for all projects
                  icon_class: fab fa-aws
          application/msgpack:
            schema:
              $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full environment record
                value:
                  name: testing
                  description: |
                    The testing environment reflects the state of HEAD state of the
                    master branch in our Git Repositories for all projects
                  icon_class: fab fa-aws
      tags:
        - Environments
      responses:
        '200':
          description: 'The request to create, update, or retrieve the environment was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1environments/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1environments/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/environments/{name}':
    get:
      summary: Get Record
      description: Retrieve an environment record
      tags:
        - Environments
      responses:
        '200':
          $ref: '#/paths/~1environments/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update an environment, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Environments
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1environments/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove an environment record
      tags:
        - Environments
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Environment Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /groups:
    get:
      description: Retrieve the collection of groups
      summary: Get Groups
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              description: Provides guidance indicating how the group record should be cached for
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - name: Administrators
                      group_type: external
                      external_id: 'cn=admins,ou=users,dc=example,dc=org'
                      permissions:
                        - admin
                        - user
                    - group: Quality Assurance
                      group_type: external
                      external_id: 'cn=qa,ou=users,dc=example,dc=org'
                      permissions:
                        - user
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - name: Administrators
                      group_type: external
                      external_id: 'cn=admins,ou=users,dc=example,dc=org'
                      permissions:
                        - admin
                        - user
                    - group: Quality Assurance
                      group_type: external
                      external_id: 'cn=qa,ou=users,dc=example,dc=org'
                      permissions:
                        - user
        '401':
          description: The request could not be authorized using the session cookie or provided API token
          content:
            application/json:
              schema:
                title: Problem Detail
                description: A problem detail document as defined by RFC 7807
                externalDocs:
                  url: 'https://tools.ietf.org/html/rfc7807'
                type: object
                properties:
                  type:
                    description: Machine-readable error type
                    type: string
                    format: url
                  title:
                    description: 'A short, human-readable summary of the problem type.'
                    type: string
                  status:
                    description: |-
                      The HTTP status code generated by the origin server for this
                      occurrence of the problem.
                    type: integer
                  detail:
                    description: |-
                      A human-readable explanation specific to this occurrence of the
                      problem.
                  instance:
                    description: URI that identifies this specific problem occurrence
                    type: string
                    format: url
                additionalProperties: false
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 401 Unauthorized
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 401 Unauthorized
    post:
      summary: Create Record
      description: Create a new group record
      requestBody:
        description: The group record to create
        content:
          application/json:
            schema:
              title: Group
              description: A organizational group of users in Imbi
              type: object
              properties:
                name:
                  description: The name of a group
                  type: string
                group_type:
                  description: Group type (internal/ldap)
                  type: string
                  enum:
                    - internal
                    - ldap
                external_id:
                  description: The DN for an external ID
                  type: string
                  nullable: true
                permissions:
                  description: Array of permissions to grant members of the group
                  type: array
                  items:
                    type: string
              required:
                - name
                - group_type
              additionalProperties: false
            examples:
              record:
                summary: A full group record
                value:
                  name: Administrators
                  group_type: ldap
                  external_id: 'cn=admins,ou=users,dc=example,dc=org'
                  roles:
                    - admin
                    - user
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full group record
                value:
                  name: Administrators
                  group_type: ldap
                  external_id: 'cn=admins,ou=users,dc=example,dc=org'
                  roles:
                    - admin
                    - user
      tags:
        - Groups
      responses:
        '200':
          description: 'The request to create, update, or retrieve the group was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              description: Indicates when the last modification of the data occurred
              schema:
                type: string
            Link:
              description: |
                Links to related resources, in the format defined by
                [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5).
                This will include a link with relation type `canonical` with the
                canonical link to the item.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1groups/post/requestBody/content/application~1json/examples/record'
        '400':
          description: The request data could not be validated or contained an error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 400 Request Error
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: HTTP 400 Request Error
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          description: The request could not be completed due to a race condition
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: 'HTTP 409: Conflict'
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: 'HTTP 409: Conflict'
  '/groups/{name}':
    get:
      summary: Get Record
      description: Retrieve a group record
      tags:
        - Groups
      responses:
        '200':
          $ref: '#/paths/~1groups/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          description: The requested resource was not found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: 'HTTP 404: Resource not found'
            application/msgpack:
              schema:
                $ref: '#/paths/~1groups/get/responses/401/content/application~1json/schema'
              examples:
                problemDetail:
                  description: An example of the response body
                  value:
                    type: HTTPError
                    traceback: []
                    message: 'HTTP 404: Resource not found'
    patch:
      summary: Update Record
      description: 'Update a group, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Groups
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              title: JSON Patch
              description: A JSONPatch document as defined by RFC 6902
              type: array
              items:
                anyOf:
                  - title: Add / Replace / Test
                    type: object
                    properties:
                      path:
                        description: A JSON Pointer path to apply the operation to
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                      op:
                        description: The operation to perform
                        type: string
                        enum:
                          - add
                          - replace
                          - test
                      value:
                        description: 'The value to add, replace or test'
                        oneOf:
                          - type: array
                          - type: boolean
                          - type: number
                          - type: object
                          - type: string
                        nullable: true
                    required:
                      - path
                      - op
                      - value
                  - title: Copy / Move
                    type: object
                    properties:
                      path:
                        description: A JSON Pointer path to apply the operation to
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                      op:
                        description: The operation to perform
                        type: string
                        enum:
                          - copy
                          - move
                      from:
                        description: A JSON Pointer path to the referenced value
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                    required:
                      - path
                      - op
                      - from
                  - title: Remove
                    type: object
                    properties:
                      path:
                        description: A JSON Pointer path to apply the operation to
                        type: string
                        pattern: '^(/[^/~]*(~[01][^/~]*)*)*$'
                      op:
                        description: The operation to perform
                        type: string
                        enum:
                          - remove
                    required:
                      - path
                      - op
              example:
                - op: replace
                  path: icon_class
                  value: fas fa-microscope
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1groups/post/responses/200'
        '304':
          description: No changes were found in the requested update
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a group record
      tags:
        - Groups
      responses:
        '204':
          description: The record was removed as requested
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
      security:
        - apiKey: []
        - session: []
    parameters:
      - name: name
        in: path
        description: Group Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /namespaces:
    get:
      description: Retrieve the collection of namespaces
      summary: Get Namespaces
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  read:
                    title: Namespace
                    description: Used to create namespaces for project organization
                    type: object
                    properties:
                      id:
                        description: The surrogate key for URLs and table linking
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      name:
                        description: The namespace name
                        type: string
                      slug:
                        description: Team path slug / abbreviation
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                      maintained_by:
                        description: Association of the namespace to one or more internal or external Imbi groups
                        type: array
                        items:
                          type: string
                        nullable: true
                    required:
                      - name
                      - slug
                      - icon_class
                    additionalProperties: false
                  write:
                    title: Namespace
                    description: Used to create namespaces for project organization
                    type: object
                    properties:
                      name:
                        description: The namespace name
                        type: string
                      slug:
                        description: Team path slug / abbreviation
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                      maintained_by:
                        description: Association of the namespace to one or more internal or external Imbi groups
                        type: array
                        items:
                          type: string
                        nullable: true
                    required:
                      - name
                      - slug
                      - icon_class
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple namespace records
                  value:
                    - id: 1
                      name: Platform Support Engineering
                      slug: PSE
                      icon_class: fas fa-blind
                      maintained_by:
                        - Developers
                        - Operations
                    - id: 2
                      name: Quality Assurance
                      slug: QA
                      icon_class: fas fa-microscope
                      maintained_by:
                        - Developers
                        - QA
            application/msgpack:
              schema:
                type: array
                items:
                  read:
                    title: Namespace
                    description: Used to create namespaces for project organization
                    type: object
                    properties:
                      id:
                        description: The surrogate key for URLs and table linking
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      name:
                        description: The namespace name
                        type: string
                      slug:
                        description: Team path slug / abbreviation
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                      maintained_by:
                        description: Association of the namespace to one or more internal or external Imbi groups
                        type: array
                        items:
                          type: string
                        nullable: true
                    required:
                      - name
                      - slug
                      - icon_class
                    additionalProperties: false
                  write:
                    title: Namespace
                    description: Used to create namespaces for project organization
                    type: object
                    properties:
                      name:
                        description: The namespace name
                        type: string
                      slug:
                        description: Team path slug / abbreviation
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                      maintained_by:
                        description: Association of the namespace to one or more internal or external Imbi groups
                        type: array
                        items:
                          type: string
                        nullable: true
                    required:
                      - name
                      - slug
                      - icon_class
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple namespace records
                  value:
                    - id: 1
                      name: Platform Support Engineering
                      slug: PSE
                      icon_class: fas fa-blind
                      maintained_by:
                        - Developers
                        - Operations
                    - id: 2
                      name: Quality Assurance
                      slug: QA
                      icon_class: fas fa-microscope
                      maintained_by:
                        - Developers
                        - QA
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new namespace record
      requestBody:
        description: The namespace record to create
        content:
          application/json:
            schema:
              $ref: '#/paths/~1namespaces/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full namespace record
                value:
                  name: Platform Support Engineering
                  slug: PSE
                  icon_class: fas fa-blind
                  maintainted_by:
                    - Developers
                    - Operations
          application/msgpack:
            schema:
              $ref: '#/paths/~1namespaces/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full namespace record
                value:
                  name: Platform Support Engineering
                  slug: PSE
                  icon_class: fas fa-blind
                  maintainted_by:
                    - Developers
                    - Operations
      tags:
        - Namespaces
      responses:
        '200':
          description: 'The request to create, update, or retrieve the namespace was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1namespaces/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full namespace record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: Platform Support Engineering
                    slug: PSE
                    icon_class: fas fa-blind
                    maintainted_by:
                      - Developers
                      - Operations
            application/msgpack:
              schema:
                $ref: '#/paths/~1namespaces/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full namespace record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: Platform Support Engineering
                    slug: PSE
                    icon_class: fas fa-blind
                    maintainted_by:
                      - Developers
                      - Operations
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/namespaces/{id}':
    get:
      summary: Get Record
      description: Retrieve a namespace record
      tags:
        - Namespaces
      responses:
        '200':
          $ref: '#/paths/~1namespaces/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a namespace, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Namespaces
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1namespaces/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a namespace record
      tags:
        - Namespaces
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Namespace ID
        required: true
        schema:
          type: number
  /orchestration-systems:
    get:
      description: Retrieve the collection of orchestration systems
      summary: Get Orchestration Systems
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1orchestration-systems/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple orchestration system records
                  value:
                    - orchestration_system: Kubernetes
                      description: Production-Grade Container Orchestration
                      icon_class: fas fa-blind
                    - orchestration_system: Nomad
                      description: HashiCorp Nomad
                      icon_class: fas fa-blind
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1orchestration-systems/post/requestBody/content/application~1json/schema'
              examples:
                records:
                  summary: Multiple orchestration system records
                  value:
                    - orchestration_system: Kubernetes
                      description: Production-Grade Container Orchestration
                      icon_class: fas fa-blind
                    - orchestration_system: Nomad
                      description: HashiCorp Nomad
                      icon_class: fas fa-blind
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new orchestration system record
      requestBody:
        description: The orchestration system record to create
        content:
          application/json:
            schema:
              title: Orchestration System
              description: |-
                Orchestration systems provide automated configuration, coordination and
                management of complex computing networks, systems and services.
              type: object
              properties:
                name:
                  description: The display name for a orchestration system
                  type: string
                description:
                  description: A description of the orchestration system
                  type: string
                  nullable: true
                icon_class:
                  description: Font Awesome UI icon class
                  type: string
              required:
                - name
                - icon_class
              additionalProperties: false
            examples:
              record:
                summary: A full orchestration system record
                value:
                  name: Kubernetes
                  description: Production-Grade Container Orchestration
                  icon_class: fas fa-blind
          application/msgpack:
            schema:
              $ref: '#/paths/~1orchestration-systems/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A full orchestration system record
                value:
                  name: Kubernetes
                  description: Production-Grade Container Orchestration
                  icon_class: fas fa-blind
      tags:
        - Orchestration Systems
      responses:
        '200':
          description: 'The request to create, update, or retrieve the orchestration system was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1orchestration-systems/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1orchestration-systems/post/requestBody/content/application~1json/examples/record'
            application/msgpack:
              schema:
                $ref: '#/paths/~1orchestration-systems/post/requestBody/content/application~1json/schema'
              examples:
                record:
                  $ref: '#/paths/~1orchestration-systems/post/requestBody/content/application~1json/examples/record'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/orchestration-systems/{name}':
    get:
      summary: Get Record
      description: Retrieve an orchestration system record
      tags:
        - Orchestration Systems
      responses:
        '200':
          $ref: '#/paths/~1orchestration-systems/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update an orchestration system, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Orchestration Systems
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1orchestration-systems/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove an orchestration system record
      tags:
        - Orchestration Systems
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: name
        in: path
        description: Orchestration System Name
        required: true
        schema:
          type: string
          pattern: '[\w_]+'
  /permissions:
    get:
      description: Retrieve the collection of available permissions
      summary: Get Permissions
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                records:
                  summary: Multiple permissions
                  value:
                    - admin
                    - user
            application/msgpack:
              schema:
                type: array
                items:
                  type: string
              examples:
                records:
                  summary: Multiple permissions
                  value:
                    - admin
                    - user
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
  /project-fact-types:
    get:
      description: Retrieve the collection of project fact types
      summary: Get Project Fact Types
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  read:
                    title: Project Fact Type
                    description: |
                      Defines types of facts that can be recorded about a project
                    type: object
                    properties:
                      id:
                        description: The surrogate ID
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      project_type_id:
                        description: The ID for the project type
                        type: number
                      fact_type:
                        description: The project fact type name
                        type: string
                      weight:
                        description: The weight of the fact type when computing a project score
                        type: number
                        default: 0
                    additionalProperties: false
                  write:
                    title: Project Fact Type
                    description: |
                      Defines types of facts that can be recorded about a project
                    type: object
                    properties:
                      project_type_id:
                        description: The ID for the project type
                        type: number
                      fact_type:
                        description: The project fact type name
                        type: string
                      weight:
                        description: The weight of the fact type when computing a project score
                        type: number
                        default: 0
                    required:
                      - project_type_id
                      - fact_type
                      - weight
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type records
                  value:
                    - project_type: Consumer
                      fact_type: Programming Language
                      weight: 25
                    - project_type: Consumer
                      fact_type: Test Coverage
                      weight: 25
                    - project_type: Consumer
                      fact_type: Deployed to all Environments
                      weight: 20
                    - project_type: Consumer
                      fact_type: Has Acceptance Tests
                      weight: 10
                    - project_type: Consumer
                      fact_type: Meets Current Standards
                      weight: 10
                    - project_type: Consumer
                      fact_type: Has working CI pipeline
                      weight: 10
            application/msgpack:
              schema:
                type: array
                items:
                  read:
                    title: Project Fact Type
                    description: |
                      Defines types of facts that can be recorded about a project
                    type: object
                    properties:
                      id:
                        description: The surrogate ID
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      project_type_id:
                        description: The ID for the project type
                        type: number
                      fact_type:
                        description: The project fact type name
                        type: string
                      weight:
                        description: The weight of the fact type when computing a project score
                        type: number
                        default: 0
                    additionalProperties: false
                  write:
                    title: Project Fact Type
                    description: |
                      Defines types of facts that can be recorded about a project
                    type: object
                    properties:
                      project_type_id:
                        description: The ID for the project type
                        type: number
                      fact_type:
                        description: The project fact type name
                        type: string
                      weight:
                        description: The weight of the fact type when computing a project score
                        type: number
                        default: 0
                    required:
                      - project_type_id
                      - fact_type
                      - weight
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type records
                  value:
                    - project_type: Consumer
                      fact_type: Programming Language
                      weight: 25
                    - project_type: Consumer
                      fact_type: Test Coverage
                      weight: 25
                    - project_type: Consumer
                      fact_type: Deployed to all Environments
                      weight: 20
                    - project_type: Consumer
                      fact_type: Has Acceptance Tests
                      weight: 10
                    - project_type: Consumer
                      fact_type: Meets Current Standards
                      weight: 10
                    - project_type: Consumer
                      fact_type: Has working CI pipeline
                      weight: 10
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project fact type record
      requestBody:
        description: The project fact type record to create
        content:
          application/json:
            schema:
              $ref: '#/paths/~1project-fact-types/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full project fact type record
                value:
                  project_type_id: 1
                  fact_type: Programming Language
                  weight: 25
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-fact-types/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full project fact type record
                value:
                  project_type_id: 1
                  fact_type: Programming Language
                  weight: 25
      tags:
        - Project Fact Types
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project fact type was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-fact-types/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full project fact type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    project_type_id: 1
                    fact_type: Programming Language
                    weight: 25
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-fact-types/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full project fact type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    project_type_id: 1
                    fact_type: Programming Language
                    weight: 25
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-fact-types/{fact_type_id}':
    get:
      summary: Get Record
      description: Retrieve a project fact type record
      tags:
        - Project Fact Types
      responses:
        '200':
          $ref: '#/paths/~1project-fact-types/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project fact type, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project Fact Types
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1project-fact-types/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project fact type record
      tags:
        - Project Fact Types
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: fact_type_id
        in: path
        description: Fact Type ID
        required: true
        schema:
          type: number
  /project-fact-type-options:
    get:
      description: Retrieve the collection of project fact type options
      summary: Get Project Fact Type Options
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  read:
                    title: Project Fact Type Option
                    description: |
                      Defines options that are available for a project fact type
                    type: object
                    properties:
                      id:
                        description: The surrogate key for the fact type option
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      fact_type_id:
                        description: The ID of the fact type the option is for
                        type: string
                      value:
                        description: The option value
                        type: string
                      score:
                        description: The score value for the option
                        type: number
                        default: 0
                    additionalProperties: false
                  write:
                    title: Project Fact Type Option
                    description: |
                      Defines options that are available for a project fact type
                    type: object
                    properties:
                      fact_type_id:
                        description: The ID of the fact type the option is for
                        type: number
                      value:
                        description: The option value
                        type: string
                      score:
                        description: The score value for the option
                        type: number
                        default: 0
                    required:
                      - fact_type_id
                      - value
                      - score
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type option records
                  value:
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.9
                      score: 100
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.7
                      score: 75
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.6
                      score: 50
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.5
                      score: 50
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 2.7
                      score: 0
            application/msgpack:
              schema:
                type: array
                items:
                  read:
                    title: Project Fact Type Option
                    description: |
                      Defines options that are available for a project fact type
                    type: object
                    properties:
                      id:
                        description: The surrogate key for the fact type option
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      fact_type_id:
                        description: The ID of the fact type the option is for
                        type: string
                      value:
                        description: The option value
                        type: string
                      score:
                        description: The score value for the option
                        type: number
                        default: 0
                    additionalProperties: false
                  write:
                    title: Project Fact Type Option
                    description: |
                      Defines options that are available for a project fact type
                    type: object
                    properties:
                      fact_type_id:
                        description: The ID of the fact type the option is for
                        type: number
                      value:
                        description: The option value
                        type: string
                      score:
                        description: The score value for the option
                        type: number
                        default: 0
                    required:
                      - fact_type_id
                      - value
                      - score
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project fact type option records
                  value:
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.9
                      score: 100
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.7
                      score: 75
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.6
                      score: 50
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 3.5
                      score: 50
                    - project_type: HTTP API
                      fact_type: Programming Language
                      value: Python 2.7
                      score: 0
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project fact type option record
      requestBody:
        description: The project fact type option record to create
        content:
          application/json:
            schema:
              $ref: '#/paths/~1project-fact-type-options/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full project fact type option record
                value:
                  fact_type_id: 1
                  value: Python 3.5
                  weight: 50
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-fact-type-options/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full project fact type option record
                value:
                  fact_type_id: 1
                  value: Python 3.5
                  weight: 50
      tags:
        - Project Fact Type Options
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project fact type option was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-fact-type-options/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full project fact type option record
                  value:
                    id: 1
                    fact_type_id: 1
                    created_by: test
                    last_modified_by: null
                    value: Python 3.5
                    weight: 50
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-fact-type-options/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full project fact type option record
                  value:
                    id: 1
                    fact_type_id: 1
                    created_by: test
                    last_modified_by: null
                    value: Python 3.5
                    weight: 50
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-fact-type-options/{id}':
    get:
      summary: Get Record
      description: Retrieve a project fact type option record
      tags:
        - Project Fact Type Options
      responses:
        '200':
          $ref: '#/paths/~1project-fact-type-options/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project fact type option, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project Fact Type Options
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1project-fact-type-options/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project fact type option record
      tags:
        - Project Fact Type Options
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Fact Type Option ID
        required: true
        schema:
          type: number
  /project-link-types:
    get:
      description: Retrieve the collection of project link types
      summary: Get Project Link Types
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  read:
                    title: Link Type
                    description: Used to describe the types of project deployment systems
                    type: object
                    properties:
                      id:
                        description: The surrogate key for URLs and table linking
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      link_type:
                        description: The display name for a link type
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    additionalProperties: false
                  write:
                    title: Link Type
                    description: Used to describe the types of project deployment systems
                    type: object
                    properties:
                      link_type:
                        description: The display name for a link type
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    required:
                      - link_type
                      - icon_class
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project link type records
                  value:
                    - project_link_type: documentation
                      icon_class: fab fa-bool
                    - project_link_type: grafana
                      icon_class: fab fa-graph
            application/msgpack:
              schema:
                type: array
                items:
                  read:
                    title: Link Type
                    description: Used to describe the types of project deployment systems
                    type: object
                    properties:
                      id:
                        description: The surrogate key for URLs and table linking
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      link_type:
                        description: The display name for a link type
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    additionalProperties: false
                  write:
                    title: Link Type
                    description: Used to describe the types of project deployment systems
                    type: object
                    properties:
                      link_type:
                        description: The display name for a link type
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    required:
                      - link_type
                      - icon_class
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project link type records
                  value:
                    - project_link_type: documentation
                      icon_class: fab fa-bool
                    - project_link_type: grafana
                      icon_class: fab fa-graph
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new link type record
      requestBody:
        description: The link type record to create
        content:
          application/json:
            schema:
              $ref: '#/paths/~1project-link-types/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full link type record
                value:
                  link_type: documentation
                  icon_class: fab fa-bool
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-link-types/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full link type record
                value:
                  link_type: documentation
                  icon_class: fab fa-bool
      tags:
        - Project Link Types
      responses:
        '200':
          description: 'The request to create, update, or retrieve the link type was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-link-types/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: The record when returned from the API
                  value:
                    id: 1
                    created_by: test
                    last_modified_by: null
                    link_type: documentation
                    icon_class: fab fa-bool
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-link-types/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: The record when returned from the API
                  value:
                    id: 1
                    created_by: test
                    last_modified_by: null
                    link_type: documentation
                    icon_class: fab fa-bool
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-link-types/{id}':
    get:
      summary: Get Record
      description: Retrieve an link type record
      tags:
        - Project Link Types
      responses:
        '200':
          $ref: '#/paths/~1project-link-types/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update an link type, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project Link Types
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1project-link-types/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove an link type record
      tags:
        - Project Link Types
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Link Type Surrogate ID
        required: true
        schema:
          type: number
  /project-types:
    get:
      description: Retrieve the collection of project types
      summary: Get Project Types
      tags:
        - Settings
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  read:
                    title: Project Type
                    description: |
                      Used to describe the types of operational project_types for projects
                    type: object
                    properties:
                      id:
                        description: The surrogate key for URLs and table linking
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      name:
                        description: The display name for a project type
                        type: string
                      plural_name:
                        description: The display name for a project type when there is more than 1 item
                        type: string
                      description:
                        description: A description of the project type
                        type: string
                        nullable: true
                      slug:
                        description: 'The slug for project types, used in filtering'
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    additionalProperties: false
                  write:
                    title: Project Type
                    description: |
                      Used to describe the types of operational project_types for projects
                    type: object
                    properties:
                      name:
                        description: The display name for a project type
                        type: string
                      plural_name:
                        description: The display name for a project type when there is more than 1 item
                        type: string
                      description:
                        description: A description of the project type
                        type: string
                        nullable: true
                      slug:
                        description: 'The slug for project types, used in filtering'
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    required:
                      - name
                      - plural_name
                      - slug
                      - icon_class
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project type records
                  value:
                    - name: HTTP API
                      plural_name: HTTP APIs
                      description: RESTful HTTP 1.1 API
                      icon_class: fab fa-aws
                      slug: http-api
                    - name: Postgres
                      plural_name: Postgres Databases
                      description: A PostgreSQL database
                      icon_class: imbi postgres
                      slug: postgres
            application/msgpack:
              schema:
                type: array
                items:
                  read:
                    title: Project Type
                    description: |
                      Used to describe the types of operational project_types for projects
                    type: object
                    properties:
                      id:
                        description: The surrogate key for URLs and table linking
                        type: number
                      created_by:
                        description: The user that created the record
                        type: string
                      last_modified_by:
                        description: The user that last modified the record
                        type: string
                      name:
                        description: The display name for a project type
                        type: string
                      plural_name:
                        description: The display name for a project type when there is more than 1 item
                        type: string
                      description:
                        description: A description of the project type
                        type: string
                        nullable: true
                      slug:
                        description: 'The slug for project types, used in filtering'
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    additionalProperties: false
                  write:
                    title: Project Type
                    description: |
                      Used to describe the types of operational project_types for projects
                    type: object
                    properties:
                      name:
                        description: The display name for a project type
                        type: string
                      plural_name:
                        description: The display name for a project type when there is more than 1 item
                        type: string
                      description:
                        description: A description of the project type
                        type: string
                        nullable: true
                      slug:
                        description: 'The slug for project types, used in filtering'
                        type: string
                      icon_class:
                        description: Font Awesome UI icon class
                        type: string
                    required:
                      - name
                      - plural_name
                      - slug
                      - icon_class
                    additionalProperties: false
              examples:
                records:
                  summary: Multiple project type records
                  value:
                    - name: HTTP API
                      plural_name: HTTP APIs
                      description: RESTful HTTP 1.1 API
                      icon_class: fab fa-aws
                      slug: http-api
                    - name: Postgres
                      plural_name: Postgres Databases
                      description: A PostgreSQL database
                      icon_class: imbi postgres
                      slug: postgres
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Record
      description: Create a new project type record
      requestBody:
        description: The project type record to create
        content:
          application/json:
            schema:
              $ref: '#/paths/~1project-types/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full project type record
                value:
                  name: HTTP API
                  plural_name: HTTP APIs
                  description: RESTful HTTP 1.1 API
                  slug: http-api
                  icon_class: fab fa-aws
          application/msgpack:
            schema:
              $ref: '#/paths/~1project-types/get/responses/200/content/application~1json/schema/items/write'
            examples:
              record:
                summary: A full project type record
                value:
                  name: HTTP API
                  plural_name: HTTP APIs
                  description: RESTful HTTP 1.1 API
                  slug: http-api
                  icon_class: fab fa-aws
      tags:
        - Project Types
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project type was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1project-types/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full project type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: HTTP API
                    plural_name: HTTP APIs
                    description: RESTful HTTP 1.1 API
                    slug: http-api
                    icon_class: fab fa-aws
            application/msgpack:
              schema:
                $ref: '#/paths/~1project-types/get/responses/200/content/application~1json/schema/items/read'
              examples:
                record:
                  summary: A full project type record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    name: HTTP API
                    plural_name: HTTP APIs
                    description: RESTful HTTP 1.1 API
                    slug: http-api
                    icon_class: fab fa-aws
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/project-types/{id}':
    get:
      summary: Get Record
      description: Retrieve a project type record
      tags:
        - Project Types
      responses:
        '200':
          $ref: '#/paths/~1project-types/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Record
      description: 'Update a project type, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Project Types
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1project-types/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Record
      description: Remove a project type record
      tags:
        - Project Types
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Project Type ID
        required: true
        schema:
          type: number
  /projects:
    get:
      description: Retrieve the collection of projects
      summary: Get Projects
      tags:
        - Projects
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project
                  description: Describes a project managed by Imbi
                  type: object
                  properties:
                    id:
                      description: The project ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    namespace_id:
                      description: The project namespace ID
                      type: number
                    namespace:
                      description: The namespace name
                    project_type_id:
                      description: The project type ID
                      type: number
                    project_type:
                      description: The project type name
                      type: string
                    name:
                      description: The project name
                      type: string
                    slug:
                      description: The project URL slug (In GitLab and other projects)
                      type: string
                    description:
                      description: Long for description of the project
                      type: string
                      nullable: true
                    environments:
                      description: The operational environments the project is available in
                      type: array
                      items:
                        type: string
                      minLength: 1
                      nullable: true
                    data_center:
                      description: The data center the project runs in
                      type: string
                      nullable: true
                    configuration_system:
                      description: 'The system used to configure the project (Ansible, Consul, etc)'
                      type: string
                      nullable: true
                    deployment_type:
                      description: 'How the project is deployed (Jenkins, GitLab-CI, etc)'
                      type: string
                      nullable: true
                    orchestration_system:
                      description: 'TThe system used to manage the runtime state of the project (Kubernetes, Nomad, etc)'
                      type: string
                      nullable: true
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project records
                  value:
                    - id: 1
                      created_by: test_user
                      last_modified_by: null
                      namespace_id: 1
                      namespace: Applications
                      project_type_id: 1
                      project_type: HTTP API
                      name: User Service
                      slug: user
                      description: 'The user service is used to manage user specific data, including profiles and content.'
                      data_center: us-east-1
                      configuration_system: SSM Parameter Store
                      deployment_type: ecs-pipeline-deploy
                      orchestration_system: ECS
                      environments:
                        - Testing
                        - Staging
                        - Production
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project
                  description: Describes a project managed by Imbi
                  type: object
                  properties:
                    id:
                      description: The project ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    namespace_id:
                      description: The project namespace ID
                      type: number
                    namespace:
                      description: The namespace name
                    project_type_id:
                      description: The project type ID
                      type: number
                    project_type:
                      description: The project type name
                      type: string
                    name:
                      description: The project name
                      type: string
                    slug:
                      description: The project URL slug (In GitLab and other projects)
                      type: string
                    description:
                      description: Long for description of the project
                      type: string
                      nullable: true
                    environments:
                      description: The operational environments the project is available in
                      type: array
                      items:
                        type: string
                      minLength: 1
                      nullable: true
                    data_center:
                      description: The data center the project runs in
                      type: string
                      nullable: true
                    configuration_system:
                      description: 'The system used to configure the project (Ansible, Consul, etc)'
                      type: string
                      nullable: true
                    deployment_type:
                      description: 'How the project is deployed (Jenkins, GitLab-CI, etc)'
                      type: string
                      nullable: true
                    orchestration_system:
                      description: 'TThe system used to manage the runtime state of the project (Kubernetes, Nomad, etc)'
                      type: string
                      nullable: true
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple project records
                  value:
                    - id: 1
                      created_by: test_user
                      last_modified_by: null
                      namespace_id: 1
                      namespace: Applications
                      project_type_id: 1
                      project_type: HTTP API
                      name: User Service
                      slug: user
                      description: 'The user service is used to manage user specific data, including profiles and content.'
                      data_center: us-east-1
                      configuration_system: SSM Parameter Store
                      deployment_type: ecs-pipeline-deploy
                      orchestration_system: ECS
                      environments:
                        - Testing
                        - Staging
                        - Production
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Project
      description: Create a new project record
      requestBody:
        description: The project record to create
        content:
          application/json:
            schema:
              title: Project
              description: Describes a project managed by Imbi
              type: object
              properties:
                namespace_id:
                  description: The project namespace ID
                  type: number
                project_type_id:
                  description: The project type ID
                  type: number
                name:
                  description: The project name
                  type: string
                slug:
                  description: The project URL slug (In GitLab and other projects)
                  type: string
                description:
                  description: Long for description of the project
                  type: string
                  nullable: true
                environments:
                  description: The operational environments the project is available in
                  type: array
                  items:
                    type: string
                  minLength: 1
                  nullable: true
                data_center:
                  description: The data center the project runs in
                  type: string
                  nullable: true
                configuration_system:
                  description: 'The system used to configure the project (Ansible, Consul, etc)'
                  type: string
                  nullable: true
                deployment_type:
                  description: 'How the project is deployed (Jenkins, GitLab-CI, etc)'
                  type: string
                  nullable: true
                orchestration_system:
                  description: 'TThe system used to manage the runtime state of the project (Kubernetes, Nomad, etc)'
                  type: string
                  nullable: true
              required:
                - namespace_id
                - project_type_id
                - name
                - slug
              additionalProperties: false
            examples:
              record:
                summary: An example of the payload for creating a record
                value:
                  namespace_id: 1
                  name: User Service
                  slug: user
                  description: 'The user service is used to manage user specific data, including profiles and content.'
                  project_type_id: 1
                  data_center: us-east-1
                  configuration_system: SSM Parameter Store
                  deployment_type: ecs-pipeline-deploy
                  orchestration_system: ECS
                  environments:
                    - Testing
                    - Staging
                    - Production
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: An example of the payload for creating a record
                value:
                  namespace_id: 1
                  name: User Service
                  slug: user
                  description: 'The user service is used to manage user specific data, including profiles and content.'
                  project_type_id: 1
                  data_center: us-east-1
                  configuration_system: SSM Parameter Store
                  deployment_type: ecs-pipeline-deploy
                  orchestration_system: ECS
                  environments:
                    - Testing
                    - Staging
                    - Production
      tags:
        - Projects
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: An example of a project record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    namespace_id: 1
                    namespace: User Experience
                    project_type_id: 1
                    project_type: HTTP API
                    name: User Service
                    slug: user
                    description: 'The user service is used to manage user specific data, including profiles and content.'
                    data_center: us-east-1
                    configuration_system: SSM Parameter Store
                    deployment_type: ecs-pipeline-deploy
                    orchestration_system: ECS
                    environments:
                      - Testing
                      - Staging
                      - Production
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: An example of a project record
                  value:
                    id: 1
                    created_by: test_user
                    last_modified_by: null
                    namespace_id: 1
                    namespace: User Experience
                    project_type_id: 1
                    project_type: HTTP API
                    name: User Service
                    slug: user
                    description: 'The user service is used to manage user specific data, including profiles and content.'
                    data_center: us-east-1
                    configuration_system: SSM Parameter Store
                    deployment_type: ecs-pipeline-deploy
                    orchestration_system: ECS
                    environments:
                      - Testing
                      - Staging
                      - Production
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
  '/projects/{id}':
    get:
      summary: Get Project
      description: Retrieve a project record
      tags:
        - Projects
      responses:
        '200':
          $ref: '#/paths/~1projects/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Project
      description: 'Update a project, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Projects
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1projects/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Project
      description: Remove a project record
      tags:
        - Projects
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Project ID
        required: true
        schema:
          type: number
  '/projects/{id}/links':
    get:
      description: Retrieve the collection of links for a project
      summary: Get Links
      tags:
        - Projects
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project Link
                  description: Links related to the project
                  type: object
                  properties:
                    project_id:
                      description: The project ID
                      type: number
                    link_type_id:
                      description: The link type ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    link_type:
                      description: The link type
                      type: string
                    icon_class:
                      description: The Font Awesome icon class for the link
                      type: string
                    url:
                      description: The link URL
                      type: string
                      format: uri
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - project_id: 1
                      link_type_id: 1
                      created_by: test_user
                      last_modified_by: null
                      link_type: Documentation
                      icon_class: fas book
                      url: 'https://imbi.readthedocs.io'
                    - project_id: 1
                      link_type_id: 2
                      created_by: test_user
                      last_modified_by: null
                      link_type: Repository
                      icon_class: fab gitlab
                      url: 'https://gitlab.com/AWeber/Imbi'
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project Link
                  description: Links related to the project
                  type: object
                  properties:
                    project_id:
                      description: The project ID
                      type: number
                    link_type_id:
                      description: The link type ID
                      type: number
                    created_by:
                      description: The user that created the record
                      type: string
                    last_modified_by:
                      description: The user that last modified the record
                      type: string
                    link_type:
                      description: The link type
                      type: string
                    icon_class:
                      description: The Font Awesome icon class for the link
                      type: string
                    url:
                      description: The link URL
                      type: string
                      format: uri
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple group records
                  value:
                    - project_id: 1
                      link_type_id: 1
                      created_by: test_user
                      last_modified_by: null
                      link_type: Documentation
                      icon_class: fas book
                      url: 'https://imbi.readthedocs.io'
                    - project_id: 1
                      link_type_id: 2
                      created_by: test_user
                      last_modified_by: null
                      link_type: Repository
                      icon_class: fab gitlab
                      url: 'https://gitlab.com/AWeber/Imbi'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Link
      description: Create a new project link record
      requestBody:
        description: The project link record to create
        content:
          application/json:
            schema:
              title: Project Link
              description: Links related to the project
              type: object
              properties:
                project_id:
                  description: The project surrogate ID
                  type: number
                link_type_id:
                  description: The link type ID
                  type: number
                url:
                  description: The link URL
                  type: string
                  format: uri
              required:
                - project_id
                - link_type_id
                - url
              additionalProperties: false
            examples:
              record:
                summary: A project link record
                value:
                  project_id: 1
                  link_type_id: 1
                  url: 'https://imbi.readthedocs.io'
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1links/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A project link record
                value:
                  project_id: 1
                  link_type_id: 1
                  url: 'https://imbi.readthedocs.io'
      tags:
        - Projects
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1links/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project link record
                  value:
                    link_type_id: 1
                    created_by: test_user
                    last_modified_by: null
                    link_type: Documentation
                    icon_class: fas book
                    url: 'https://imbi.readthedocs.io'
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1links/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project link record
                  value:
                    link_type_id: 1
                    created_by: test_user
                    last_modified_by: null
                    link_type: Documentation
                    icon_class: fas book
                    url: 'https://imbi.readthedocs.io'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    parameters:
      - name: id
        in: path
        description: The Project ID
        required: true
        schema:
          type: number
  '/projects/{id}/links/{link_type_id}':
    get:
      summary: Get Link
      description: Retrieve a project link record
      tags:
        - Projects
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1links/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    patch:
      summary: Update Link
      description: 'Update a project link, providing a JSON Patch (RFC-6209) payload of update operations to apply.'
      tags:
        - Projects
      requestBody:
        description: JSON Patch Payload
        content:
          application/json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+json:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
          application/json-patch+msgpack:
            schema:
              $ref: '#/paths/~1groups~1%7Bname%7D/patch/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1links/post/responses/200'
        '304':
          $ref: '#/paths/~1groups~1%7Bname%7D/patch/responses/304'
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    delete:
      summary: Delete Link
      description: Remove a project link record
      tags:
        - Projects
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: id
        in: path
        description: Project ID for the link
        required: true
        schema:
          type: number
      - name: link_type_id
        in: path
        description: The link type
        required: true
        schema:
          type: number
  '/projects/{id}/dependencies':
    get:
      description: Retrieve the collection of dependencies for a project
      summary: Get Dependencies
      tags:
        - Projects
      responses:
        '200':
          description: Success
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Project
                  description: A record that indicates one project is dependent upon another
                  type: object
                  properties:
                    project_id:
                      description: The ID of the project that has the dependency
                      type: number
                    created_by:
                      description: The username indicating who created the record
                      type: string
                    dependency_id:
                      description: The ID of the project that is depended upon
                      type: number
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple records
                  value:
                    - project_id: 2
                      created_by: test_user
                      dependency_id: 1
                    - project_id: 3
                      created_by: test_user
                      dependency_id: 1
            application/msgpack:
              schema:
                type: array
                items:
                  title: Project
                  description: A record that indicates one project is dependent upon another
                  type: object
                  properties:
                    project_id:
                      description: The ID of the project that has the dependency
                      type: number
                    created_by:
                      description: The username indicating who created the record
                      type: string
                    dependency_id:
                      description: The ID of the project that is depended upon
                      type: number
                  additionalProperties: false
              examples:
                records:
                  summary: Multiple records
                  value:
                    - project_id: 2
                      created_by: test_user
                      dependency_id: 1
                    - project_id: 3
                      created_by: test_user
                      dependency_id: 1
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
    post:
      summary: Create Dependency
      description: Create a new project dependency record
      requestBody:
        description: The project dependency record to create
        content:
          application/json:
            schema:
              title: Project
              description: A record that indicates one project is dependent upon another
              type: object
              properties:
                dependency_id:
                  description: The ID of the project that is depended upon
                  type: number
              required:
                - dependency_id
              additionalProperties: false
            examples:
              record:
                summary: A project dependency record
                value:
                  dependency_id: 1
          application/msgpack:
            schema:
              $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/post/requestBody/content/application~1json/schema'
            examples:
              record:
                summary: A project dependency record
                value:
                  dependency_id: 1
      tags:
        - Projects
      responses:
        '200':
          description: 'The request to create, update, or retrieve the project was successful'
          headers:
            Cache-Control:
              $ref: '#/paths/~1groups/get/responses/200/headers/Cache-Control'
            Last-Modified:
              $ref: '#/paths/~1groups/post/responses/200/headers/Last-Modified'
            Link:
              $ref: '#/paths/~1groups/post/responses/200/headers/Link'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project dependency record
                  value:
                    project_id: 2
                    created_by: test_user
                    dependency_id: 1
            application/msgpack:
              schema:
                $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/get/responses/200/content/application~1json/schema/items'
              examples:
                record:
                  summary: A project dependency record
                  value:
                    project_id: 2
                    created_by: test_user
                    dependency_id: 1
        '400':
          $ref: '#/paths/~1groups/post/responses/400'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '409':
          $ref: '#/paths/~1groups/post/responses/409'
    parameters:
      - name: id
        in: path
        description: The ID of the project for the dependencies
        required: true
        schema:
          type: number
  '/projects/{id}/dependencies/{dependency_id}':
    get:
      summary: Get Dependency
      description: Retrieve a project dependency record
      tags:
        - Projects
      responses:
        '200':
          $ref: '#/paths/~1projects~1%7Bid%7D~1dependencies/post/responses/200'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    delete:
      summary: Delete Dependency
      description: Remove a project dependency record
      tags:
        - Projects
      responses:
        '204':
          $ref: '#/paths/~1groups~1%7Bname%7D/delete/responses/204'
        '401':
          $ref: '#/paths/~1groups/get/responses/401'
        '404':
          $ref: '#/paths/~1groups~1%7Bname%7D/get/responses/404'
    parameters:
      - name: id
        in: path
        description: The ID of the project with the dependency
        required: true
        schema:
          type: number
      - name: dependency_id
        in: path
        description: The ID of the project that is dependend upon
        required: true
        schema:
          type: number
  /status:
    get:
      security: []
      description: |-
        Returns information about the running service, including runtime metrics
        including counters and durations.
      summary: Service Status
      operationId: status
      parameters:
        - in: query
          name: flush
          description: Flush the stats / metrics database of recorded values
          schema:
            type: string
            default: 'false'
            enum:
              - 'true'
              - 'false'
      tags:
        - Health Check
      responses:
        '200':
          description: Service Available
          content:
            application/json:
              schema:
                type: object
                properties:
                  counters:
                    type: object
                    additionalProperties:
                      type: number
                    description: A key-value pair of internal counters
                  durations:
                    type: object
                    description: |-
                      A key-value pair of recorded durations where the value is an array
                      of timestamp and duration in seconds
                    additionalProperties:
                      type: array
                      items:
                        type: array
                        items:
                          oneOf:
                            - type: string
                              format: iso8601-timestamp
                            - type: number
                              format: float
                        minItems: 2
                        maxItems: 2
                  postgres:
                    type: object
                    description: PostgreSQL pool information
                    properties:
                      pool_free:
                        type: number
                        description: |-
                          Indicates the current number of idle connections available to
                          process queries
                      pool_size:
                        type: number
                        description: Indicates the current quantity of open connections to Postgres
                  started_at:
                    type: string
                    format: iso8601-timestamp
                    description: The ISO-8601 formatted timestamp of when the service started
                  status:
                    type: string
                    description: The current application status
                    enum:
                      - ok
                      - maintenance
                  uptime:
                    type: string
                    description: ISO-8601 formatted duration indicating how long the service has been running
                  version:
                    type: string
                    description: The version
              example:
                counters:
                  response.Base.GET.200: 10
                durations:
                  request.Base.GET.200:
                    - - '2018-12-03 23:46:54+00:00'
                      - 0.2566049098968506
                    - - '2018-12-03 23:31:50+00:00'
                      - 0.33482813835144043
                    - - '2018-12-03 23:00:39+00:00'
                      - 0.25607776641845703
                postgres:
                  available: true
                  pool_size: 10
                  pool_free: 9
                started_at: 2020-01-01T00:00:00.000Z
                status: ok
                system:
                  language:
                    name: python
                    implementation: CPython
                    version: 3.7.6
                  os:
                    name: Alpine Linux
                    version: 3.11.6
                uptime: PT6M9.053148S
                version: '{{ settings["version"] }}'
            application/msgpack:
              schema:
                $ref: '#/paths/~1status/get/responses/200/content/application~1json/schema'
              example:
                $ref: '#/paths/~1status/get/responses/200/content/application~1json/example'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1status/get/responses/200/content/application~1json/schema'
              example:
                counters:
                  response.Base.GET.200: 10
                durations:
                  request.Base.GET.200:
                    - - '2018-12-03 23:46:54+00:00'
                      - 0.2566049098968506
                    - - '2018-12-03 23:31:50+00:00'
                      - 0.33482813835144043
                    - - '2018-12-03 23:00:39+00:00'
                      - 0.25607776641845703
                postgres:
                  available: true
                  pool_size: 10
                  pool_free: 9
                started_at: 2020-01-01T00:00:00.000Z
                status: unavailable
                system:
                  language:
                    name: python
                    implementation: CPython
                    version: 3.7.6
                  os:
                    name: Alpine Linux
                    version: 3.11.6
                uptime: PT6M9.053148S
                version: '{{ settings["version"] }}'
            application/msgpack:
              schema:
                $ref: '#/paths/~1status/get/responses/200/content/application~1json/schema'
              example:
                $ref: '#/paths/~1status/get/responses/503/content/application~1json/example'
tags:
  - name: Configuration Systems
    description: Endpoints used for the management of configuration systems
  - name: Cookie Cutters
    description: Endpoints used for the management of project creation cookie cutters
  - name: Data Centers
    description: |-
      Endpoints used for the management of data centers

      A data center is a large group of networked computer servers typically used
      by organizations for the remote storage, processing, or distribution of
      large amounts of data.
  - name: Deployment Types
    description: Endpoints used for the management different types of deployment systems.
  - name: Environments
    description: Endpoints used for the management different target environments for projects to run in.
  - name: Groups
    description: |
      Endpoints used to manage the groups that Imbi users are able to be members of.
  - name: Namespaces
    description: Endpoints used for the management of organizational namespaces
  - name: Orchestration Systems
    description: |-
      Endpoints for managing the systems used for orchestration systems.

      Orchestration systems provide automated configuration, coordination and
      management of complex computing networks, systems and services.
  - name: Project Fact Types
    description: |-
      Management of records that define types facts that may be collected for a project.

      Project facts may be used to calculate a current project health score. For more
      information on project health score, see the compliance documentation.
  - name: Project Fact Type Options
    description: |-
      Management of records that define types facts that may be collected for a project.

      Project facts options provide the possible values for project facts, and are
      used to compute the score of that project fact. For more information on
      project health score, see the compliance documentation.
  - name: Project Link Types
    description: Management of records that define types of links or URLs to associate with a project
  - name: Project Types
    description: 'Endpoints used for the management different types of projects managed in Imbi (APIs, Databases, etc)'
  - name: Projects
    description: Endpoints used for the management of projects
  - name: Settings
    description: Endpoints used for retrieving settings for the Imbi UI
  - name: Health Check
    description: |-
      The health check endpoint can be used by a load balancer to indicate
      service health.
x-tagGroups:
  - name: Administration
    tags:
      - Groups
      - Users
  - name: Metadata
    tags:
      - Configuration Systems
      - Cookie Cutters
      - Data Centers
      - Deployment Types
      - Environments
      - Namespaces
      - Orchestration Systems
      - Project Fact Types
      - Project Fact Type Options
      - Project Link Types
      - Project Types
  - name: Project Management
    tags:
      - Projects
  - name: Settings
    tags:
      - Settings
  - name: User Specific
    tags:
      - User
  - name: Other
    tags:
      - Health Check
