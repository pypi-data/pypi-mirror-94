# To be found be the caosdb package, the INI file must be located either in
# - $CWD/pycaosdb.ini
# - $HOME/.pycaosdb.ini
# - the location given in the env variable PYCAOSDBINI

[Connection]
# URL of the CaosDB server
# url=https://demo.indiscale.com/
# For local installations this typically is
# url=https://localhost:10443/

# User name used for authentication with the server
# username=admin

# The password input method defines how the password is supplied that is used
# for authentication with the server.
#
# DEFAULT: `input`
# The username is optional in this case.  The password is entered directly by the user.
# password_method=input
#
# OR: `plain`
# This implies that the password must # be saved as plain text in a
# configuration under the 'password' key.
# password_method=plain
# password=caosdb
#
# OR `pass`
# The password is retrieved from the "pass" password manager
# This password manager uses identifiers to distinguish passwords. Supply this
# identifier under the key 'password_identifier'.
# password_method=pass
# password_identifier=caosdb_password
#
# OR: `keyring`
# Using the system keyring/wallet (macOS, GNOME, KDE, Windows)
# requires installation of the keyring python package (pip install keyring).
# password_method=keyring

# Using an authentication token to connect with the server. This setting is
# not recommended for users.
# auth_token=TOKEN

# If the server's SSL certificate cannot be validated by your installed
# certificates (default or installed by your admins), you may also need to
# supply the matching key (pem file):
# cacert=/path/to/caosdb.ca.pem

# If this option is set, the SSL certificate of the server will not be
# validated. This has the potential of a man-in-the-middle attack. Use with care!
# ssl_insecure=True

# You may define the ssl version to be used. It has to be the name of the
# corresponding attribute in the Python ssl module.
# ssl_version=PROTOCOL_TLS

# The debug key allows control the verbosity. Set it to 1 or 2 in case you 
# want to see debugging output or if you want to learn more about
# the internals of the protocol.  0 disables debugging output.
# debug=0

# You can define a socket proxy to be used.
# This is for the case that the server sits behind a firewall which is being
# tunnelled with a socket proxy (SOCKS4 or SOCKS5) (e.g. via ssh's -D option or
# a dedicated proxy server).
# socket_proxy=localhost:12345

# This option is used internally and for testing. Do not override.
# implementation=_DefaultCaosDBServerConnection
