(()=>{"use strict";window.telepath=new class{constructor(){this.constructors={}}register(t,i){this.constructors[t]=i}unpack(t){const i={};return this.scanForIds(t,i),this.unpackWithRefs(t,i,{})}scanForIds(t,i){if(null===t||"object"!=typeof t)return;if(Array.isArray(t))return void t.forEach((t=>this.scanForIds(t,i)));let s=!1;if("_id"in t&&(s=!0,i[t._id]=t),("_type"in t||"_val"in t||"_ref"in t)&&(s=!0),"_list"in t&&(s=!0,t._list.forEach((t=>this.scanForIds(t,i)))),"_args"in t&&(s=!0,t._args.forEach((t=>this.scanForIds(t,i)))),"_dict"in t){s=!0;for(const[s,e]of Object.entries(t._dict))this.scanForIds(e,i)}if(!s)for(const[s,e]of Object.entries(t))this.scanForIds(e,i)}unpackWithRefs(t,i,s){if(null===t||"object"!=typeof t)return t;if(Array.isArray(t))return t.map((t=>this.unpackWithRefs(t,i,s)));let e;if("_ref"in t)e=t._ref in s?s[t._ref]:this.unpackWithRefs(i[t._ref],i,s);else if("_val"in t)e=t._val;else if("_list"in t)e=t._list.map((t=>this.unpackWithRefs(t,i,s)));else if("_dict"in t){e={};for(const[r,n]of Object.entries(t._dict))e[r]=this.unpackWithRefs(n,i,s)}else{if(!("_type"in t)){if("_id"in t)throw new Error("telepath encountered object with _id but no type specified");e={};for(const[r,n]of Object.entries(t))e[r]=this.unpackWithRefs(n,i,s);return e}{const r=t._type;e=new(0,this.constructors[r])(...t._args.map((t=>this.unpackWithRefs(t,i,s))))}}return"_id"in t&&(s[t._id]=e),e}}})();