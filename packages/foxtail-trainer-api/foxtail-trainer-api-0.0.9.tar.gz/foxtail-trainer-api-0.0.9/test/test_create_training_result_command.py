# coding: utf-8

"""
    Foxtail Trainer

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import foxtail_trainer_api
from foxtail_trainer_api.models.create_training_result_command import CreateTrainingResultCommand  # noqa: E501
from foxtail_trainer_api.rest import ApiException

class TestCreateTrainingResultCommand(unittest.TestCase):
    """CreateTrainingResultCommand unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateTrainingResultCommand
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = foxtail_trainer_api.models.create_training_result_command.CreateTrainingResultCommand()  # noqa: E501
        if include_optional :
            return CreateTrainingResultCommand(
                job_id = '0', 
                ml_model_id = '0', 
                training_result = foxtail_trainer_api.models.create_training_result_dto.CreateTrainingResultDto(
                    training_time_seconds = 1.337, 
                    training_metrics = [
                        foxtail_trainer_api.models.create_metric_dto.CreateMetricDto(
                            metric_type = 'MAE', 
                            value = 1.337, )
                        ], 
                    validation_metrics = [
                        foxtail_trainer_api.models.create_metric_dto.CreateMetricDto(
                            value = 1.337, )
                        ], 
                    test_metrics = [
                        foxtail_trainer_api.models.create_metric_dto.CreateMetricDto(
                            value = 1.337, )
                        ], 
                    training_history = foxtail_trainer_api.models.create_training_history_dto.CreateTrainingHistoryDto(
                        metric_name = '0', ), 
                    model_as_string = '0', )
            )
        else :
            return CreateTrainingResultCommand(
        )

    def testCreateTrainingResultCommand(self):
        """Test CreateTrainingResultCommand"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
