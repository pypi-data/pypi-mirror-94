# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: udpa/annotations/migrate.proto, udpa/annotations/status.proto, udpa/annotations/sensitive.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto


class PackageVersionStatus(betterproto.Enum):
    UNKNOWN = 0
    FROZEN = 1
    ACTIVE = 2
    NEXT_MAJOR_VERSION_CANDIDATE = 3


@dataclass(eq=False, repr=False)
class MigrateAnnotation(betterproto.Message):
    # Rename the message/enum/enum value in next version.
    rename: str = betterproto.string_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class FieldMigrateAnnotation(betterproto.Message):
    # Rename the field in next version.
    rename: str = betterproto.string_field(1)
    # Add the field to a named oneof in next version. If this already exists, the
    # field will join its siblings under the oneof, otherwise a new oneof will be
    # created with the given name.
    oneof_promotion: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class FileMigrateAnnotation(betterproto.Message):
    # Move all types in the file to another package, this implies changing proto
    # file path.
    move_to_package: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class StatusAnnotation(betterproto.Message):
    # Rename the message/enum/enum value in next version.
    work_in_progress: bool = betterproto.bool_field(1)
    package_version_status: "PackageVersionStatus" = betterproto.enum_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()
