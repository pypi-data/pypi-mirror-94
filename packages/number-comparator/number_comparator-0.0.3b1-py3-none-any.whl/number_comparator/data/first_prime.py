# Hi there!
# You might be scared by this large list of numbers. It includes the first 168
# prime numbers for 'number_comparator.comparations.isPrime()' operation. If you are
# handling a number bigger than 991 (largest number included), the function isPrime()
# will see if your number finishes with 1, 3, 7 or 9.

__all__ = ["first_168", "PRIME_TERMINATIONS"]

first_168 = [2, # Shortest prime number, 1 doesn't count
             3,
             5,
             7,
             # The 9 is NOT prime, because it can be divided by 3
             11,
             13,
             17,
             19,
             23,
             29,
             31,
             37,
             41,
             43,
             47,
             53,
             59,
             61,
             67,
             71,
             73,
             79,
             83,
             89,
             97,
             # Commonly, you don't have to use prime numbers larger than 91.
             #  But if you do, we included numbers up to 991:
             101,
             103,
             107,
             109,
             113,
             127,
             131,
             137,
             139,
             149,
             151,
             157,
             163,
             167,
             173,
             179,
             181,
             191,
             193,
             197,
             199,
             211,
             223,
             227,
             229,
             233,
             239,
             241,
             251,
             257,
             263,
             269,
             271,
             277,
             281,
             283,
             293,
             307,
             311,
             313,
             317,
             331,
             337,
             347,
             349,
             353,
             359,
             367,
             373,
             379,
             383,
             389,
             397,
             401,
             409,
             419,
             421,
             431,
             433,
             439,
             443,
             449,
             457,
             461,
             463,
             467,
             479,
             487,
             491,
             499,
             503,
             509,
             521,
             523,
             541,
             547,
             557,
             563,
             569,
             571,
             577,
             587,
             593,
             599,
             601,
             607,
             613,
             617,
             619,
             631,
             641,
             643,
             647,
             653,
             659,
             661,
             673,
             677,
             683,
             691,
             701,
             709,
             719,
             727,
             733,
             739,
             743,
             751,
             757,
             761,
             769,
             773,
             787,
             797,
             809,
             811,
             821,
             823,
             827,
             829,
             839,
             853,
             857,
             859,
             863,
             877,
             881,
             883,
             887,
             907,
             911,
             919,
             929,
             937,
             941,
             947,
             953,
             967,
             971,
             977,
             983,
             991] # Largest number registred

# Now, let's talk about PRIME_TERMINATIONS.
# This list will contain the current terminations on prime numbers larger than 9
# and smaller than 1001 (because 9 and 1001 doesn't count as a prime). We are giving
# strings instead of integers for the isPrime() conversion.

PRIME_TERMINATIONS = ["1"
                      "3",
                      "7",
                      "9"]

# By the way, we added an alias to call variables first_168 and PRIME_TERMINATIONS
_168 = first_168
_pt = PRIME_TERMINATIONS
