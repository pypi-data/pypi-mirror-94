[{"/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/index.js":"1","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/App.js":"2","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/reportWebVitals.js":"3","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Breadcrumbs/index.js":"4","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/index.js":"5","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/CertInput.js":"6","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/ProjectInput.js":"7","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/DataInput.js":"8","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/CodebaseInput.js":"9","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/SandboxInput.js":"10","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/AlgorithmInput.js":"11","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Breadcrumbs/RBreadcrumb.js":"12"},{"size":287,"mtime":1610025190986,"results":"13","hashOfConfig":"14"},{"size":4497,"mtime":1610025190986,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610025190986,"results":"16","hashOfConfig":"14"},{"size":65,"mtime":1610025190986,"results":"17","hashOfConfig":"14"},{"size":349,"mtime":1610025190986,"results":"18","hashOfConfig":"14"},{"size":1742,"mtime":1610025190986,"results":"19","hashOfConfig":"14"},{"size":2745,"mtime":1610025190986,"results":"20","hashOfConfig":"14"},{"size":2749,"mtime":1610025190986,"results":"21","hashOfConfig":"14"},{"size":2682,"mtime":1610025190986,"results":"22","hashOfConfig":"14"},{"size":2240,"mtime":1610025190986,"results":"23","hashOfConfig":"14"},{"size":1087,"mtime":1610025190986,"results":"24","hashOfConfig":"14"},{"size":567,"mtime":1610025190986,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1eq1azw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/index.js",[],["59","60"],"/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/App.js",["61","62","63","64"],"import { RBreadcrumb } from './utilities/Breadcrumbs';\nimport { ProjectInput, CertInput, AlgorithmInput, CodebaseInput, DataInput, SandboxInput } from './utilities/Forms';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport React, { Component } from 'react';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport {Row, Col} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport './App.css';\n\nconst renderTooltip = (props) => (\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Simple tooltip\n  </Tooltip>\n);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {showModal: false};\n    this.formAndDisplayYAML = this.formAndDisplayYAML.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose() {\n    this.setState({showModal: false});\n  };\n\n  formAndDisplayYAML() {\n    this.setState({showModal: true});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = {};\n    for (let i=0; i < event.target.elements.length; i++) {\n        const elem = event.target.elements[i];\n        if (elem.hasOwnProperty('checked')) {\n            if (elem['checked']) { data[elem.name] = elem.value }\n        }\n        else { data[elem.name] = elem.value }\n    }\n    console.log(data);\n    fetch('http://localhost:5112/setup_project/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin':'*'\n      },\n      body: JSON.stringify(data)\n    })\n    this.setState({showModal: true});\n  }\n\n  render() {\n  return (\n    <>\n        <Card className=\"text-center\">\n          <Card.Header>Project Essentials</Card.Header>\n          <Card.Body>\n            <Card.Title>Filling in details for Tasks defining the Project end-to-end</Card.Title>\n            <Card.Text>\n              Sections for the application(code+dependencies), certificates, pipeline identifiers etc. need to be defined below.\n              <b> For more information</b>, visit the Documentation link given below.\n            </Card.Text>\n            <Button href=\"https://www.google.com/\" variant=\"primary\">Nfer-Sandbox-Cli Tutorials</Button>\n          </Card.Body>\n        </Card>\n        <Form onSubmit={this.handleSubmit}>\n        <Container style={{ marginTop: \"10px\" }} fluid>\n            <Row>\n                <Col>\n                    <RBreadcrumb data={{'section':\"Project\"}}/>\n                    <ProjectInput />\n                </Col>\n                <Col>\n                    <RBreadcrumb data={{'section':\"Codebase\"}}/>\n                    <CodebaseInput />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <RBreadcrumb data={{'section':\"Certificates\"}}/>\n                    <CertInput />\n                </Col>\n                <Col>\n                    <RBreadcrumb data={{'section':\"Sandbox\"}}/>\n                    <SandboxInput />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <RBreadcrumb data={{'section':\"Data I/O\"}}/>\n                    <DataInput />\n                </Col>\n                <Col>\n                    <RBreadcrumb data={{'section':\"Algorithm\"}}/>\n                    <AlgorithmInput />\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n            <Col></Col>\n            <Col>\n            <Button type=\"submit\" style={{ marginTop: \"10px\", marginBottom: \"10px\" }} variant=\"success\" block>Setup Project</Button>\n            </Col>\n            <Col></Col>\n            </Row>\n            <Row>\n            <Modal centered size=\"lg\" style={{width: \"100%\"}} show={this.state.showModal} onHide={this.handleClose}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Project Config (as following `main.yml` file)</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <iframe style={{width: \"100%\" }} id=\"frame\" src=\"/projects/genentech/main.yml\" height=\"300px\" frameBorder=\"0\">\n                </iframe>\n                </Modal.Body>\n              </Modal>\n            </Row>\n        </Container>\n        </Form>\n    </>\n  );\n  }\n}\n\nexport default App;\n","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/reportWebVitals.js",[],"/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Breadcrumbs/index.js",[],"/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/index.js",[],"/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/CertInput.js",["65"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from 'react-bootstrap/Form';\nimport {Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass CertInput extends Component {\n    render() {\n\treturn (\n\t    <>\n\t      <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Mode of Certificates\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"From CA\"\n                  name=\"source\"\n                  id=\"formHorizontalRadios1\"\n                  value=\"CA\"\n                />\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Self Signed\"\n                  name=\"source\"\n                  id=\"formHorizontalRadios1\"\n                  value=\"self-signed\"\n                />\n              </Col>\n            </Form.Group>\n          <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Retrieval of Certs\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Fetch Existing\"\n                  name=\"mode\"\n                  id=\"formHorizontalRadios2\"\n                  value=\"fetch\"\n                />\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Create New Self-Signed\"\n                  name=\"mode\"\n                  value=\"create\"\n                  id=\"formHorizontalRadios2\"\n                />\n              </Col>\n            </Form.Group>\n            <Form.File id=\"exampleFormControlFile1\" label=\"Upload CA Certificates\" />\n\t    </>\n\t);\n    }\n};\n\nexport default CertInput;\n","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/ProjectInput.js",["66","67","68"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from 'react-bootstrap/Form';\nimport {Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass ProjectInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {name: \"\", desc: \"\", verbosity: \"INFO\"};\n        //this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n//    handleSubmit(event) {\n//        this.setState({name: document.getElementById('project_name').value});\n//        this.setState({desc: document.getElementById('project_desc').value});\n//        this.setState({verbosity: document.getElementById('project_verbosity').value});\n//        console.log(this.state)\n//    }\n\n    render() {\n\treturn (\n\t    <>\n        <Form.Group>\n            <Form.Label>Project Name</Form.Label>\n            <Form.Control name=\"project_name\" id=\"project_name\" type=\"text\" placeholder=\"Enter Project Name ...\" />\n            <Form.Text className=\"text-muted\">\n              A Name for your Project - you can identify this pipeline with (Algorithm+Dataset+Sandbox purpose)\n            </Form.Text>\n            <Form.Label style={{ marginTop: \"5px\" }}>Project Description</Form.Label>\n            <Form.Control name=\"project_desc\" id=\"project_desc\" type=\"text\" placeholder=\"Enter (Optional) Project Description ...\" />\n            <Form.Text className=\"text-muted\">\n              A Short Description for your Project. Optional.\n            </Form.Text>\n            <Form.Label style={{ marginTop: \"5px\" }}>Verbosity Level</Form.Label>\n            <Form.Control name=\"project_verbosity\" id=\"project_verbosity\" as=\"select\">\n              <option>INFO</option>\n              <option>WARN</option>\n              <option>DEBUG</option>\n            </Form.Control>\n            <Form.Text className=\"text-muted\">\n              The inputs for various tasks as are sought, those shall be run and logged w.r.t set verbosity. More in the README/Documentation.\n            </Form.Text>\n            <Form.Label style={{ marginTop: \"5px\" }}>Pipeline Template ID</Form.Label>\n            <Form.Control name=\"pipeline_template_id\" id=\"pipeline_template_id\" as=\"select\">\n              <option>d290f1ee-6c54-4b01-90e6-d701748f0851</option>\n              <option disabled>d290f1ee-6c54-4b01-90e6-d701748f0811</option>\n              <option disabled>d290f1ee-6c54-4b01-90e6-d701748f0821</option>\n            </Form.Control>\n            <Form.Text className=\"text-muted\">\n              The inputs for various tasks as are sought, those shall be run and logged w.r.t set verbosity. More in the README/Documentation.\n            </Form.Text>\n          </Form.Group>\n\t    </>\n\t);\n    }\n};\n\nexport default ProjectInput;\n","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/DataInput.js",["69"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from 'react-bootstrap/Form';\nimport {Row, Col} from 'react-bootstrap';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction renderTooltip(props) {\n  let message = \"\"\n  if (props.popper.state) {\n        message = props.popper.state.options.testObj\n    }\n  return (\n        <Tooltip id=\"button-tooltip\" {...props}>\n            {message}\n        </Tooltip>\n    );\n}\n\nclass DataInput extends Component {\n    render() {\n\treturn (\n\t    <>\n\t      <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                Projection ID for Input Dataset\n              </Form.Label>\n              <Col sm={9}>\n                <OverlayTrigger placement=\"right\" delay={{ show: 25, hide: 40 }} overlay={renderTooltip} popperConfig={{testObj:\"genentech severe headache women data\"}}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"genentech-headache-data\"\n                  name=\"input-dataprojection\"\n                  value=\"genentech-headache-data\"\n                  id=\"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n                />\n                </OverlayTrigger>\n                <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip} popperConfig={{testObj:\"genentech's ankle sprain patient's data\"}}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"genentech-sprain-data\"\n                  name=\"input-dataprojection\"\n                  value=\"genentech-sprain-data\"\n                  id=\"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n                />\n                </OverlayTrigger>\n                <OverlayTrigger placement=\"right\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip} popperConfig={{testObj:\"jansonn's rootcanal patients data\"}}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"jansonn-rootcanal-data\"\n                  name=\"input-dataprojection\"\n                  value=\"jansonn-rootcanal-data\"\n                  id=\"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n                />\n                </OverlayTrigger>\n                </Col>\n                </Form.Group>\n              <Form.Label style={{ marginTop: \"5px\" }}>Dataset Projection Name</Form.Label>\n            <Form.Control name=\"projection_name\" type=\"text\" placeholder=\"Enter a name for the projection dataset ...\" />\n            <Form.Text className=\"text-muted\">\n              Optional. By default - the pipeline name accompanied by the data projection ID\n            </Form.Text>\n\t    </>\n\t);\n    }\n};\n\nexport default DataInput;\n","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/CodebaseInput.js",["70","71"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from 'react-bootstrap/Form';\nimport {Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass CodebaseInput extends Component {\n    render() {\n\treturn (\n\t    <>\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Git Repo URL</Form.Label>\n            <Form.Control type=\"text\" name=\"git_url\" placeholder=\"Enter Git URL e.g https://github.com/<user>/<repo> ...\" />\n            <Form.Text className=\"text-muted\">\n              Github Repository URL. This repo contains the code and dependencies specifications.\n            </Form.Text>\n            <Form.Label style={{ marginTop: \"5px\" }}>Github Credentials</Form.Label>\n              <Form.Row>\n                <Col>\n                  <Form.Control name=\"creds_user\" placeholder=\"Username\" />\n                </Col>\n                <Col>\n                  <Form.Control name=\"creds_pass\" type=\"password\" placeholder=\"Password\" />\n                </Col>\n              </Form.Row>\n            <Form.Text className=\"text-muted\">\n              For 2FA Enabled, enter the API TOKEN, else, enter the Password\n            </Form.Text>\n            <Form.Label style={{ marginTop: \"5px\" }}>Stack</Form.Label>\n            <Form.Control name=\"stack\" id=\"stack\" as=\"select\">\n              <option name=\"stack\" value=\"Python3\">Python3</option>\n              <option name=\"stack\" value=\"GO\" disabled>GO</option>\n              <option name=\"stack\" value=\"R\" disabled>R</option>\n            </Form.Control>\n            <Form.Text className=\"text-muted\">\n              The template, language of the developer's code. Python3 by default. Only Python3 supported. More on README.\n            </Form.Text>\n            <Form.Label style={{ marginTop: \"5px\" }}>Main Code File</Form.Label>\n            <Form.Control name=\"code_file\" type=\"text\" placeholder=\"Enter the relative location of the main Algorithm file ...\" />\n            <Form.Text className=\"text-muted\">\n              e.g for entry point in src/ folder, specify : src/algo.py, should algo.py be the name of the entry/driver file\n            </Form.Text>\n            <Form.Label style={{ marginTop: \"5px\" }}>Dependency File</Form.Label>\n            <Form.Control name=\"deps_file\" type=\"text\" placeholder=\"Enter the relative location of the requirements(.txt) file ...\" />\n            <Form.Text className=\"text-muted\">\n              e.g for deps file in deps/ folder, specify : deps/requirements.txt. Prefer filename requirements.txt for Python3 stack.\n            </Form.Text>\n          </Form.Group>\n\t    </>\n\t);\n    }\n};\n\nexport default CodebaseInput;\n","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/SandboxInput.js",["72"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from 'react-bootstrap/Form';\nimport {Row, Col} from 'react-bootstrap';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction renderTooltip(props) {\n  let message = \"\"\n  if (props.popper.state) {\n        message = props.popper.state.options.testObj\n    }\n  return (\n        <Tooltip id=\"button-tooltip\" {...props}>\n            {message}\n        </Tooltip>\n    );\n}\n\nclass SandboxInput extends Component {\n    render() {\n\treturn (\n\t    <>\n\t      <Form.Group as={Row}>\n              <Form.Label column sm={3}>\n                Template for Sandbox VM\n              </Form.Label>\n              <Col sm={9}>\n                <OverlayTrigger placement=\"left\" delay={{ show: 25, hide: 40 }} overlay={renderTooltip} popperConfig={{testObj:\"AzureB1MS-4CPU16GB\"}}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"AzureB1MS-4CPU16GB\"\n                  name=\"sandboxVM\"\n                  value=\"AzureB1MS-4CPU16GB\"\n                  id=\"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n                />\n                </OverlayTrigger>\n                <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip} popperConfig={{testObj:\"AzureB1MS-4CPU8GB\"}}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"AzureB1MS-4CPU8GB\"\n                  name=\"sandboxVM\"\n                  value=\"AzureB1MS-4CPU8GB\"\n                  id=\"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n                />\n                </OverlayTrigger>\n                <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip} popperConfig={{testObj:\"AzureB2MS-4CPU8GB\"}}>\n                <Form.Check\n                  type=\"radio\"\n                  label=\"AzureB2MS-4CPU8GB\"\n                  name=\"sandboxVM\"\n                  value=\"AzureB2MS-4CPU8GB\"\n                  id=\"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n                />\n                </OverlayTrigger>\n              </Col>\n          </Form.Group>\n\t    </>\n\t);\n    }\n};\n\nexport default SandboxInput;\n","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Forms/AlgorithmInput.js",["73","74"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from 'react-bootstrap/Form';\nimport {Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass AlgorithmInput extends Component {\n    render() {\n\treturn (\n\t    <>\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label style={{ marginTop: \"5px\" }}>Algorithm Docker Image Details</Form.Label>\n              <Form.Row>\n                <Col>\n                  <Form.Control name=\"image_name\" placeholder=\"Image Name\" />\n                </Col>\n                <Col>\n                  <Form.Control name=\"image_repo\"  placeholder=\"Image Repository\" />\n                </Col>\n                <Col>\n                  <Form.Control name=\"image_tag\" placeholder=\"Image Tag\" />\n                </Col>\n              </Form.Row>\n            <Form.Text className=\"text-muted\">\n              Identifiers for the Docker Image of the Algorithm that shall be formed.\n            </Form.Text>\n          </Form.Group>\n\t    </>\n\t);\n    }\n};\n\nexport default AlgorithmInput;\n","/home/sumitkhanna/nfer-secure-sandbox-cli/nfer_secure_sandbox_cli/webapp/src/utilities/Breadcrumbs/RBreadcrumb.js",["75"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Breadcrumb } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass RBreadcrumb extends Component {\n    render() {\n\treturn (\n\t    <>\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"#\">Configuration</Breadcrumb.Item>\n          <Breadcrumb.Item href=\"#\">\n            Details\n          </Breadcrumb.Item>\n          <Breadcrumb.Item active>{this.props.data.section}</Breadcrumb.Item>\n        </Breadcrumb>\n\t    </>\n\t);\n    }\n};\n\nexport default RBreadcrumb;\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":22},{"ruleId":"80","severity":1,"message":"84","line":8,"column":17,"nodeType":"82","messageId":"83","endLine":8,"endColumn":26},{"ruleId":"80","severity":1,"message":"85","line":14,"column":7,"nodeType":"82","messageId":"83","endLine":14,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":119,"column":17,"nodeType":"88","endLine":119,"endColumn":127},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"90","line":4,"column":9,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"80","severity":1,"message":"91","line":4,"column":14,"nodeType":"82","messageId":"83","endLine":4,"endColumn":17},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"90","line":4,"column":9,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"90","line":4,"column":9,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'OverlayTrigger' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'renderTooltip' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ReactDOM' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]