name: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    name: "${{ matrix.pymc-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pymc-version: ["pymc3==3.10", "pymc3==3.11"]
        starry-version: [""]
        include:
          - pymc-version: "https://github.com/pymc-devs/pymc3/archive/master.zip"
            starry-version: ""
          - pymc-version: "pymc3==3.9.3"
            starry-version: "starry@git+https://github.com/rodluger/starry@master"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/cache@v2
        with:
          path: ~/.theano
          key: ${{ runner.os }}-${{ matrix.pymc-version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.pymc-version }}-

      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: starry_process
          environment-file: environment.yml

      - name: Set up environment
        shell: bash -l {0}
        run: |
          jupyter nbextension enable --py widgetsnbextension
          sudo apt-get update
          sudo apt-get install ffmpeg

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip uninstall -y theano  # so that we know which version we're getting
          python -m pip install ${{ matrix.pymc-version }} ${{ matrix.starry-version }}
          python -m pip install -e ".[app,tests]"
          python -c 'import theano; print(theano.__version__)'

      - name: Run tests
        shell: bash -l {0}
        run: python -m pytest -v tests --junitxml=junit/test-results.xml

      - name: Get unique id
        id: unique-id
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: |
          export JOB_ID=`echo $STRATEGY_CONTEXT | md5sum`
          echo "::set-output name=id::$JOB_ID"

      - uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ steps.unique-id.outputs.id }}
          path: junit/test-*.xml
