# Regina - A Normal Surface Theory Calculator
# Python Test Suite Component
#
# Copyright (c) 2015-2021, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Provides tests for face numbering in high-dimensional triangulations.
#
# This file is a single component of Regina's python test suite.  To run
# the python test suite, move to the main python directory in the source
# tree and run "make check".
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.

from __future__ import print_function

for i in range(6):
    p = Face5_0.ordering(i)
    print(i, p, Face5_0.faceNumber(p))
print()
for i in range(15):
    p = Face5_1.ordering(i)
    print(i, p, Face5_1.faceNumber(p))
print()
for i in range(20):
    p = Face5_2.ordering(i)
    print(i, p, Face5_2.faceNumber(p))
print()
for i in range(15):
    p = Face5_3.ordering(i)
    print(i, p, Face5_3.faceNumber(p))
print()
for i in range(6):
    p = Face5_4.ordering(i)
    print(i, p, Face5_4.faceNumber(p))
print()

for i in range(7):
    p = Face6_0.ordering(i)
    print(i, p, Face6_0.faceNumber(p))
print()
for i in range(21):
    p = Face6_1.ordering(i)
    print(i, p, Face6_1.faceNumber(p))
print()
for i in range(35):
    p = Face6_2.ordering(i)
    print(i, p, Face6_2.faceNumber(p))
print()
for i in range(35):
    p = Face6_3.ordering(i)
    print(i, p, Face6_3.faceNumber(p))
print()
for i in range(21):
    p = Face6_4.ordering(i)
    print(i, p, Face6_4.faceNumber(p))
print()
for i in range(7):
    p = Face6_5.ordering(i)
    print(i, p, Face6_5.faceNumber(p))
print()
