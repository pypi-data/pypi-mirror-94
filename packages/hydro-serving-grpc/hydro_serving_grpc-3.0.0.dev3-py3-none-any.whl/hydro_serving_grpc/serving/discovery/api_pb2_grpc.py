# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from hydro_serving_grpc.serving.discovery import api_pb2 as hydro__serving__grpc_dot_serving_dot_discovery_dot_api__pb2


class ServingDiscoveryStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.WatchApplications = channel.stream_stream(
        '/hydrosphere.serving.discovery.ServingDiscovery/WatchApplications',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=hydro__serving__grpc_dot_serving_dot_discovery_dot_api__pb2.ApplicationDiscoveryEvent.FromString,
        )
    self.WatchServables = channel.stream_stream(
        '/hydrosphere.serving.discovery.ServingDiscovery/WatchServables',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=hydro__serving__grpc_dot_serving_dot_discovery_dot_api__pb2.ServableDiscoveryEvent.FromString,
        )
    self.WatchMetricSpec = channel.stream_stream(
        '/hydrosphere.serving.discovery.ServingDiscovery/WatchMetricSpec',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=hydro__serving__grpc_dot_serving_dot_discovery_dot_api__pb2.MetricSpecDiscoveryEvent.FromString,
        )


class ServingDiscoveryServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def WatchApplications(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WatchServables(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WatchMetricSpec(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServingDiscoveryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'WatchApplications': grpc.stream_stream_rpc_method_handler(
          servicer.WatchApplications,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=hydro__serving__grpc_dot_serving_dot_discovery_dot_api__pb2.ApplicationDiscoveryEvent.SerializeToString,
      ),
      'WatchServables': grpc.stream_stream_rpc_method_handler(
          servicer.WatchServables,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=hydro__serving__grpc_dot_serving_dot_discovery_dot_api__pb2.ServableDiscoveryEvent.SerializeToString,
      ),
      'WatchMetricSpec': grpc.stream_stream_rpc_method_handler(
          servicer.WatchMetricSpec,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=hydro__serving__grpc_dot_serving_dot_discovery_dot_api__pb2.MetricSpecDiscoveryEvent.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hydrosphere.serving.discovery.ServingDiscovery', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
