# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hydro_serving_grpc/serving/contract/tensor.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from hydro_serving_grpc.serving.contract import types_pb2 as hydro__serving__grpc_dot_serving_dot_contract_dot_types__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='hydro_serving_grpc/serving/contract/tensor.proto',
  package='hydrosphere.serving.contract',
  syntax='proto3',
  serialized_pb=_b('\n0hydro_serving_grpc/serving/contract/tensor.proto\x12\x1chydrosphere.serving.contract\x1a/hydro_serving_grpc/serving/contract/types.proto\"\xd1\x03\n\x06Tensor\x12\x35\n\x05\x64type\x18\x01 \x01(\x0e\x32&.hydrosphere.serving.contract.DataType\x12?\n\x0ctensor_shape\x18\x02 \x01(\x0b\x32).hydrosphere.serving.contract.TensorShape\x12\x12\n\nbinary_val\x18\x04 \x01(\x0c\x12\x14\n\x08half_val\x18\r \x03(\x05\x42\x02\x10\x01\x12\x15\n\tfloat_val\x18\x05 \x03(\x02\x42\x02\x10\x01\x12\x16\n\ndouble_val\x18\x06 \x03(\x01\x42\x02\x10\x01\x12\x13\n\x07int_val\x18\x07 \x03(\x05\x42\x02\x10\x01\x12\x12\n\nstring_val\x18\x08 \x03(\x0c\x12\x18\n\x0cscomplex_val\x18\t \x03(\x02\x42\x02\x10\x01\x12\x15\n\tint64_val\x18\n \x03(\x03\x42\x02\x10\x01\x12\x14\n\x08\x62ool_val\x18\x0b \x03(\x08\x42\x02\x10\x01\x12\x18\n\x0c\x64\x63omplex_val\x18\x0c \x03(\x01\x42\x02\x10\x01\x12\x16\n\nuint32_val\x18\x10 \x03(\rB\x02\x10\x01\x12\x16\n\nuint64_val\x18\x11 \x03(\x04\x42\x02\x10\x01\x12<\n\x07map_val\x18\x1b \x03(\x0b\x32+.hydrosphere.serving.contract.MapTensorData\"\x1b\n\x0bTensorShape\x12\x0c\n\x04\x64ims\x18\x01 \x03(\x03\"\xb9\x01\n\rMapTensorData\x12O\n\nsubtensors\x18\x01 \x03(\x0b\x32;.hydrosphere.serving.contract.MapTensorData.SubtensorsEntry\x1aW\n\x0fSubtensorsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32$.hydrosphere.serving.contract.Tensor:\x02\x38\x01\x42,\n%io.hydrosphere.serving.proto.contractP\x01\xf8\x01\x01\x62\x06proto3')
  ,
  dependencies=[hydro__serving__grpc_dot_serving_dot_contract_dot_types__pb2.DESCRIPTOR,])




_TENSOR = _descriptor.Descriptor(
  name='Tensor',
  full_name='hydrosphere.serving.contract.Tensor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dtype', full_name='hydrosphere.serving.contract.Tensor.dtype', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensor_shape', full_name='hydrosphere.serving.contract.Tensor.tensor_shape', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='binary_val', full_name='hydrosphere.serving.contract.Tensor.binary_val', index=2,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='half_val', full_name='hydrosphere.serving.contract.Tensor.half_val', index=3,
      number=13, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='float_val', full_name='hydrosphere.serving.contract.Tensor.float_val', index=4,
      number=5, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='double_val', full_name='hydrosphere.serving.contract.Tensor.double_val', index=5,
      number=6, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='int_val', full_name='hydrosphere.serving.contract.Tensor.int_val', index=6,
      number=7, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='string_val', full_name='hydrosphere.serving.contract.Tensor.string_val', index=7,
      number=8, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scomplex_val', full_name='hydrosphere.serving.contract.Tensor.scomplex_val', index=8,
      number=9, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='int64_val', full_name='hydrosphere.serving.contract.Tensor.int64_val', index=9,
      number=10, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='bool_val', full_name='hydrosphere.serving.contract.Tensor.bool_val', index=10,
      number=11, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='dcomplex_val', full_name='hydrosphere.serving.contract.Tensor.dcomplex_val', index=11,
      number=12, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='uint32_val', full_name='hydrosphere.serving.contract.Tensor.uint32_val', index=12,
      number=16, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='uint64_val', full_name='hydrosphere.serving.contract.Tensor.uint64_val', index=13,
      number=17, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='map_val', full_name='hydrosphere.serving.contract.Tensor.map_val', index=14,
      number=27, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=132,
  serialized_end=597,
)


_TENSORSHAPE = _descriptor.Descriptor(
  name='TensorShape',
  full_name='hydrosphere.serving.contract.TensorShape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dims', full_name='hydrosphere.serving.contract.TensorShape.dims', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=599,
  serialized_end=626,
)


_MAPTENSORDATA_SUBTENSORSENTRY = _descriptor.Descriptor(
  name='SubtensorsEntry',
  full_name='hydrosphere.serving.contract.MapTensorData.SubtensorsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='hydrosphere.serving.contract.MapTensorData.SubtensorsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='hydrosphere.serving.contract.MapTensorData.SubtensorsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=727,
  serialized_end=814,
)

_MAPTENSORDATA = _descriptor.Descriptor(
  name='MapTensorData',
  full_name='hydrosphere.serving.contract.MapTensorData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subtensors', full_name='hydrosphere.serving.contract.MapTensorData.subtensors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MAPTENSORDATA_SUBTENSORSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=629,
  serialized_end=814,
)

_TENSOR.fields_by_name['dtype'].enum_type = hydro__serving__grpc_dot_serving_dot_contract_dot_types__pb2._DATATYPE
_TENSOR.fields_by_name['tensor_shape'].message_type = _TENSORSHAPE
_TENSOR.fields_by_name['map_val'].message_type = _MAPTENSORDATA
_MAPTENSORDATA_SUBTENSORSENTRY.fields_by_name['value'].message_type = _TENSOR
_MAPTENSORDATA_SUBTENSORSENTRY.containing_type = _MAPTENSORDATA
_MAPTENSORDATA.fields_by_name['subtensors'].message_type = _MAPTENSORDATA_SUBTENSORSENTRY
DESCRIPTOR.message_types_by_name['Tensor'] = _TENSOR
DESCRIPTOR.message_types_by_name['TensorShape'] = _TENSORSHAPE
DESCRIPTOR.message_types_by_name['MapTensorData'] = _MAPTENSORDATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Tensor = _reflection.GeneratedProtocolMessageType('Tensor', (_message.Message,), dict(
  DESCRIPTOR = _TENSOR,
  __module__ = 'hydro_serving_grpc.serving.contract.tensor_pb2'
  # @@protoc_insertion_point(class_scope:hydrosphere.serving.contract.Tensor)
  ))
_sym_db.RegisterMessage(Tensor)

TensorShape = _reflection.GeneratedProtocolMessageType('TensorShape', (_message.Message,), dict(
  DESCRIPTOR = _TENSORSHAPE,
  __module__ = 'hydro_serving_grpc.serving.contract.tensor_pb2'
  # @@protoc_insertion_point(class_scope:hydrosphere.serving.contract.TensorShape)
  ))
_sym_db.RegisterMessage(TensorShape)

MapTensorData = _reflection.GeneratedProtocolMessageType('MapTensorData', (_message.Message,), dict(

  SubtensorsEntry = _reflection.GeneratedProtocolMessageType('SubtensorsEntry', (_message.Message,), dict(
    DESCRIPTOR = _MAPTENSORDATA_SUBTENSORSENTRY,
    __module__ = 'hydro_serving_grpc.serving.contract.tensor_pb2'
    # @@protoc_insertion_point(class_scope:hydrosphere.serving.contract.MapTensorData.SubtensorsEntry)
    ))
  ,
  DESCRIPTOR = _MAPTENSORDATA,
  __module__ = 'hydro_serving_grpc.serving.contract.tensor_pb2'
  # @@protoc_insertion_point(class_scope:hydrosphere.serving.contract.MapTensorData)
  ))
_sym_db.RegisterMessage(MapTensorData)
_sym_db.RegisterMessage(MapTensorData.SubtensorsEntry)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n%io.hydrosphere.serving.proto.contractP\001\370\001\001'))
_TENSOR.fields_by_name['half_val'].has_options = True
_TENSOR.fields_by_name['half_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['float_val'].has_options = True
_TENSOR.fields_by_name['float_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['double_val'].has_options = True
_TENSOR.fields_by_name['double_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['int_val'].has_options = True
_TENSOR.fields_by_name['int_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['scomplex_val'].has_options = True
_TENSOR.fields_by_name['scomplex_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['int64_val'].has_options = True
_TENSOR.fields_by_name['int64_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['bool_val'].has_options = True
_TENSOR.fields_by_name['bool_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['dcomplex_val'].has_options = True
_TENSOR.fields_by_name['dcomplex_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['uint32_val'].has_options = True
_TENSOR.fields_by_name['uint32_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_TENSOR.fields_by_name['uint64_val'].has_options = True
_TENSOR.fields_by_name['uint64_val']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_MAPTENSORDATA_SUBTENSORSENTRY.has_options = True
_MAPTENSORDATA_SUBTENSORSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
