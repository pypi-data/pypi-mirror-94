# coding: utf-8

"""
    Aliro Quantum App

    This is an api for the Aliro Quantum App  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: nick@aliroquantum.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import aliro_quantum
from aliro_quantum.models.device_details_gate_info import DeviceDetailsGateInfo  # noqa: E501
from aliro_quantum.rest import ApiException

class TestDeviceDetailsGateInfo(unittest.TestCase):
    """DeviceDetailsGateInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DeviceDetailsGateInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = aliro_quantum.models.device_details_gate_info.DeviceDetailsGateInfo()  # noqa: E501
        if include_optional :
            return DeviceDetailsGateInfo(
                averages = {
                    'key' : aliro_quantum.models.device_details_gate_info_averages.DeviceDetails_gateInfo_averages(
                        current = 1.337, 
                        fidelity_change_per_day = 1.337, )
                    }, 
                gate_list = [
                    aliro_quantum.models.gate.Gate(
                        aliro_computed = True, 
                        fidelity = 1.337, 
                        fidelity_change_per_day = 1.337, 
                        qubit_from = aliro_quantum.models.qubit.Qubit(
                            name = 56, 
                            pos_x = 1.337, 
                            pos_y = 1.337, 
                            real_qubit = 56, 
                            t1 = 1.337, 
                            t2 = 1.337, ), 
                        qubit_to = aliro_quantum.models.qubit.Qubit(
                            name = 56, 
                            pos_x = 1.337, 
                            pos_y = 1.337, 
                            real_qubit = 56, 
                            t1 = 1.337, 
                            t2 = 1.337, ), 
                        gate_type = '0', )
                    ]
            )
        else :
            return DeviceDetailsGateInfo(
        )

    def testDeviceDetailsGateInfo(self):
        """Test DeviceDetailsGateInfo"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
