# coding: utf-8

"""
    Aliro Quantum App

    This is an api for the Aliro Quantum App  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: nick@aliroquantum.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from aliro_quantum.configuration import Configuration


class Reservation(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'end_datetime': 'str',
        'id': 'str',
        'price': 'float',
        'start_datetime': 'str',
        'their_id': 'str'
    }

    attribute_map = {
        'end_datetime': 'endDatetime',
        'id': 'id',
        'price': 'price',
        'start_datetime': 'startDatetime',
        'their_id': 'theirId'
    }

    def __init__(self, end_datetime=None, id=None, price=None, start_datetime=None, their_id=None, local_vars_configuration=None):  # noqa: E501
        """Reservation - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._end_datetime = None
        self._id = None
        self._price = None
        self._start_datetime = None
        self._their_id = None
        self.discriminator = None

        if end_datetime is not None:
            self.end_datetime = end_datetime
        if id is not None:
            self.id = id
        if price is not None:
            self.price = price
        if start_datetime is not None:
            self.start_datetime = start_datetime
        if their_id is not None:
            self.their_id = their_id

    @property
    def end_datetime(self):
        """Gets the end_datetime of this Reservation.  # noqa: E501


        :return: The end_datetime of this Reservation.  # noqa: E501
        :rtype: str
        """
        return self._end_datetime

    @end_datetime.setter
    def end_datetime(self, end_datetime):
        """Sets the end_datetime of this Reservation.


        :param end_datetime: The end_datetime of this Reservation.  # noqa: E501
        :type: str
        """

        self._end_datetime = end_datetime

    @property
    def id(self):
        """Gets the id of this Reservation.  # noqa: E501


        :return: The id of this Reservation.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Reservation.


        :param id: The id of this Reservation.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def price(self):
        """Gets the price of this Reservation.  # noqa: E501


        :return: The price of this Reservation.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this Reservation.


        :param price: The price of this Reservation.  # noqa: E501
        :type: float
        """

        self._price = price

    @property
    def start_datetime(self):
        """Gets the start_datetime of this Reservation.  # noqa: E501


        :return: The start_datetime of this Reservation.  # noqa: E501
        :rtype: str
        """
        return self._start_datetime

    @start_datetime.setter
    def start_datetime(self, start_datetime):
        """Sets the start_datetime of this Reservation.


        :param start_datetime: The start_datetime of this Reservation.  # noqa: E501
        :type: str
        """

        self._start_datetime = start_datetime

    @property
    def their_id(self):
        """Gets the their_id of this Reservation.  # noqa: E501


        :return: The their_id of this Reservation.  # noqa: E501
        :rtype: str
        """
        return self._their_id

    @their_id.setter
    def their_id(self, their_id):
        """Sets the their_id of this Reservation.


        :param their_id: The their_id of this Reservation.  # noqa: E501
        :type: str
        """

        self._their_id = their_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Reservation):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Reservation):
            return True

        return self.to_dict() != other.to_dict()
