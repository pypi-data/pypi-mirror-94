Metadata-Version: 1.1
Name: git-wrapper
Version: 0.2.6
Summary: Python commodity wrapper around GitPython
Home-page: https://github.com/release-depot/git_wrapper
Author: Jason Joyce
Author-email: jjoyce@redhat.com
License: UNKNOWN
Description: ===========
        git_wrapper
        ===========
        
        
        .. image:: https://img.shields.io/pypi/v/git_wrapper.svg
                :target: https://pypi.python.org/pypi/git_wrapper
        
        .. image:: https://img.shields.io/travis/release-depot/git_wrapper.svg
                :target: https://travis-ci.org/release-depot/git_wrapper
        
        .. image:: https://readthedocs.org/projects/git-wrapper/badge/?version=latest
                :target: https://git-wrapper.readthedocs.io/en/latest/?badge=latest
                :alt: Documentation Status
        
        
        
        
        Python wrapper around GitPython
        
        
        * Free software: MIT license
        * Documentation: https://git-wrapper.readthedocs.io.
        
        
        Features
        --------
        
        * TODO
        
        Notes
        -----
        
        This library only supports python 3. Some features may still work with python 2.7 but not all of the
        syntax and features may be compatible.
        
        Development
        -----------
        
        There are several dependencies needed to build and work on git_wrapper.  Using
        your distribution's package manager, install these system packages::
        
          GitPython
        
        git_wrapper uses the upcoming standard of Pipfiles via pipenv.  This is integrated
        into our Makefile and once you have the above dependencies, you can simply run::
        
          make dev
        
        This will install our dev environment for the package via pipenv.  It is installed
        with --user, so it does not affect your site-packages.  Pipenv creates a unique virtualenv
        for us, which you can activate via::
        
          pipenv shell
        
        See the `pipenv documentation <https://docs.pipenv.org/>`_ for more detail.
        
        Documentation
        *************
        
        To build the documentation on your checkout, simply run::
        
          make docs
        
        We plan to get this published in the near future, and this README will be
        updated when that happens.
        
        Contributions
        *************
        
        All new code should include tests that excercise the code and prove that it
        works, or fixes the bug you are trying to fix.  Any Pull Request without tests
        will not be accepted.
        
        Pushing a new release
        *********************
        
        1. Prepare a patch to update the version number (`example`_)
        
           You may want to check the HISTORY.rst file renders correctly before
           committing, as the twine upload will fail later if it
           doesn't. Install one of these::
        
            # dnf install python3-readme-renderer
            $ pip install readme-renderer
        
           Then run the following command::
        
            $ python -m readme_renderer README.rst -o /tmp/README.html
        
        2. Once that's merged, tag that patch and push the new tag to the repo
        3. Run the following commands::
        
            $ rm dist/*
            $ python setup.py sdist bdist_wheel
            $ twine upload --verbose dist/*
        
        (You need to have a PyPI account with the right permissions for that last step.)
        
        .. _example: https://github.com/release-depot/git_wrapper/commit/fc88bcb3158187ba9566dad896e3c688d8bc5109
        
        Credits
        -------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        =======
        History
        =======
        
        0.0.1 (2018-06-25)
        ------------------
        
        * First release on PyPI.
        
        0.1.0 (2018-07-05)
        ------------------
        
        * Second release on PyPI.
        * Base functionality
        * git cherry support
        * Removing pipenv support.
        
        0.2.0 (2019-01-18)
        ------------------
        
        * Third release on PyPI.
        * Major refactor to better align the data model.
        * Added several new features
                * Log diff generation
                * Improved clone support including bare repos and destroy/reclone
                * Revert support
                * Support for rebasing to a branch or commit.
        
        0.2.1 (2019-04-15)
        ------------------
        
        * Fourth release on PyPI.
        * Added several new features
                * Add function to compare commit references
                * Add tagging functions
        
        0.2.2 (2020-07-20)
        ------------------
        
        * Fifth release on PyPI.
        * Added new function to check if a commit exists on a given remote branch
        
        0.2.3 (2020-12-15)
        ------------------
        
        * Added checkout parameter to branch creation and hard reset functions
        
        
        0.2.4 (2021-01-11)
        ------------------
        
        * Added new function to cherry-pick a given commit
        * New parameter added to apply_patch() to preserve square brackets in commit messages
        * Added new function to grep logs
        * Deprecated location of other log functions in GitBranch, they should now be called from GitLog
        
        0.2.5 (2021-01-12)
        ------------------
        
        * Fix RST formatting issue to unbreak Pypi uploads
        
        0.2.6 (2021-02-11)
        ------------------
        
        * Add new log function to get a single commit's information
        
        
Keywords: git_wrapper
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
