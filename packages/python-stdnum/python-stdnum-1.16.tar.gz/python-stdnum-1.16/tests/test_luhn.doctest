test_luhn.doctest - more detailed doctests for stdnum.luhn module

Copyright (C) 2010, 2011, 2013 Arthur de Jong

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301 USA


This file contains more detailed doctests for the stdnum.luhn module. It
tries to test more corner cases and detailed functionality that is not
really useful as module documentation.

>>> from stdnum import luhn


These are normal variations that should just work. Calculating checksums:

>>> luhn.checksum('4992739871')
9
>>> luhn.checksum('490154203237518')
0
>>> luhn.checksum('abcdefe', alphabet='abcdef')
0


The same numbers but now simply ask for validation:

>>> luhn.validate('4992739871')
Traceback (most recent call last):
    ...
InvalidChecksum: ...
>>> luhn.validate('490154203237518')
'490154203237518'
>>> luhn.validate('abcdefe', alphabet='abcdef')
'abcdefe'

Adding a check digit to the numbers so they are all valid:

>>> luhn.calc_check_digit('4992739871')
'6'
>>> luhn.validate('49927398716')
'49927398716'
>>> luhn.calc_check_digit('142857')
'2'
>>> luhn.validate('1428572')
'1428572'
>>> luhn.calc_check_digit('398438246238642378648236487236482734')
'7'
>>> luhn.validate('3984382462386423786482364872364827347')
'3984382462386423786482364872364827347'
