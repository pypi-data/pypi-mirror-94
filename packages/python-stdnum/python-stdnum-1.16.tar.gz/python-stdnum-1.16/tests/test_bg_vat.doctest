test_bg_vat.doctest - more detailed doctests for stdnum.bg.vat module

Copyright (C) 2012, 2013 Arthur de Jong

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301 USA


This file contains more detailed doctests for the stdnum.bg.vat module. It
tries to cover more corner cases and detailed functionality that is not
really useful as module documentation.

>>> from stdnum.bg import vat


Normal values that should just work.

>>> vat.validate('103873594')  # 9-digit legal entity
'103873594'
>>> vat.validate('131272009')  # legal entity with fallback checksum
'131272009'
>>> vat.validate('7501020018')  # physical person
'7501020018'
>>> vat.validate('8001010008')  # physical person
'8001010008'
>>> vat.validate('8032056031')  # physical person
'8032056031'
>>> vat.validate('7111042925')  # foreigners
'7111042925'
>>> vat.validate('7153849522')  # others
'7153849522'


Invalid checksum:

>>> vat.validate('175074751')  # invalid check digit
Traceback (most recent call last):
    ...
InvalidChecksum: ...


These have been found online and should all be valid numbers.

>>> numbers = '''
...
... 000565359
... 104453698
... 121817309
... 121887948
... 175015558
... 175223064
... 176040023
... 202322728
... 202342638
... 203445228
... 831919536
... 835014925
...
... '''
>>> [x for x in numbers.splitlines() if x and not vat.is_valid(x)]
[]
