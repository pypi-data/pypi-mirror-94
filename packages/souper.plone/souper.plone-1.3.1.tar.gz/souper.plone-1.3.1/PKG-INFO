Metadata-Version: 2.1
Name: souper.plone
Version: 1.3.1
Summary: Plone Souper Integration: Container for many lightweight queryable Records
Home-page: http://pypi.python.org/pypi/souper.plone
Author: BlueDynamics Alliance
Author-email: dev@bluedynamics.com
License: BSD
Description: Overview
        ========
        
        ``souper.plone`` integrates `souper <http://pypi.python.org/pypi/souper>`_
        with `Plone <http://plone.org>`_
        
        ``souper.plone`` helps developers who need to store many small data records,
        where heavy-weight Archetypes or Dexterity content types are too much effort
        and are too slow.  E.g. if you need a queryable container for non-CMSish
        content, like votes, data from a poll, orders in a webshop, measuring data,
        or the like.
        
        A Soup-container can be moved to an own ZODB mount-point and may be shared
        across multiple independent Plone instances!
        
        A control-panel provides actions to rebuild, reindex and move Soups around.
        
        
        Usage
        =====
        
        ``souper.plone`` adds some convenience for Plone Add-On developers. It
        provides a storage locator working like so:
        
        A ``souper.soup`` is looked up by ``id`` and needs a context.
        This context is some aquisition-aware object in the Plone site.
        From the context, souper tries to acquire an object implementing
        ``ISoupRoot`` (the *soup root*). By default, this will be the site root.
        At the soup root, the ``id`` maps to a path where the soup is actually
        stored as an annotation. This all happens fully transparently.
        So to get the soup, one simply needs to do::
        
            >>> from souper.soup import get_soup
            >>> soup = get_soup('my_soup_id', context)
            >>> soup
            <souper.soup.Soup at 0x...>
        
        If no soup was found for the given id, a new one is created as an annotation
        on the ``ISoupRoot``.
        
        It is important provide a ``CatalogFactory``.
        Consult the ``souper.plone`` documentation to learn how.
        Over there it's also documented how to add records, query and maintain them.
        
        For convenience ``souper.plone`` installs a control-panel where one can
        reindex and rebuild distinct soups.
        
        
        Source Code
        ===========
        
        The sources are in a GIT DVCS with its main branches at
        `github <http://github.com/bluedynamics/souper.plone>`_.
        
        We'd be happy to see many forks and pull-requests to make souper even better.
        
        Maintainers are Robert Niederreiter, Jens Klein and the BlueDynamics Alliance
        developer team. We appreciate any contribution and if a release is needed
        to be done on pypi, please just contact one of us
        `dev@bluedynamics dot com <mailto:dev@bluedynamics.com>`_
        
        
        Contributors
        ============
        
        - Robert Niederreiter
        - Jens W. Klein
        - Sven Plage
        - Jean Jordaan
        - Peter Mathis
        - Harald Friessnegger
        - Gil Forcada Codinachs
        
        History
        =======
        
        1.3.1 (2021-02-13)
        ------------------
        
        - Do not load dependecies using z3c.autoinclude, because we do not have any.
          [jensens]
        
        - Remove wrong character from uninstall profile.
          [erral]
        
        
        1.3.0 (2019-09-16)
        ------------------
        
        - Python 2/3 compatibility
          [agitator]
        
        - Convert links to forms in admin page.
          [erral]
        
        1.2.1 (2016-11-21)
        ------------------
        
        - Add entry point.
          [gforcada]
        
        - Depend on Products.CMFPlone rather than Plone
          [gforcada]
        
        - Add ZCML i18n domain.
          [rnixx]
        
        1.2
        ---
        
        - Add ``clear soup`` functionality to the controlpanel.
          [fRiSi]
        
        
        1.1
        ---
        
        - Plone conform status message markup
          [petschki]
        
        - Fix id in status message
          [petschki]
        
        - Fix tests
          [rnix]
        
        - Make ``get_soup`` consistent
          [jean]
        
        - Revise documentation
          [jean]
        
        
        1.0
        ---
        
        - Added missing MANIFEST.in
          [jensens]
        
        
        1.0-beta
        --------
        
        - Make it work
          [rnix, jensens, et al]
        
        License
        =======
        
        Copyright (c) 2008-2014, BlueDynamics Alliance, Austria, Germany, Switzerland
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice, this 
          list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright notice, this 
          list of conditions and the following disclaimer in the documentation and/or 
          other materials provided with the distribution.
        * Neither the name of the BlueDynamics Alliance nor the names of its 
          contributors may be used to endorse or promote products derived from this 
          software without specific prior written permission.
              
        THIS SOFTWARE IS PROVIDED BY BlueDynamics Alliance ``AS IS`` AND ANY
        EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
        WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL BlueDynamics Alliance BE LIABLE FOR ANY
        DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
        (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
        ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
        (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
        SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Keywords: container data record catalog
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Framework :: Zope :: 2
Classifier: Framework :: Zope :: 4
Classifier: Framework :: Plone :: 4.3
Classifier: Framework :: Plone :: 5.0
Classifier: Framework :: Plone :: 5.1
Classifier: Framework :: Plone :: 5.2
Classifier: Framework :: Plone :: Addon
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Provides-Extra: test
