Metadata-Version: 2.1
Name: web3data
Version: 0.1.7
Summary: A Python library for the Amberdata web3 API
Home-page: https://github.com/dmuhs/web3data-py
Author: Dominik Muhs
Author-email: dmuhs@protonmail.ch
License: MIT license
Description: ======================
        web3data-py Python API
        ======================
        
        .. image:: https://img.shields.io/pypi/v/web3data.svg
            :target: https://pypi.python.org/pypi/web3data
        
        .. image:: https://img.shields.io/travis/dmuhs/web3data-py.svg
            :target: https://travis-ci.org/github/dmuhs/web3data-py
        
        .. image:: https://readthedocs.org/projects/web3data-py/badge/?version=latest
            :target: https://web3data-py.readthedocs.io/?badge=latest
            :alt: Documentation Status
        
        .. image:: https://pyup.io/repos/github/dmuhs/web3data-py/shield.svg
            :target: https://pyup.io/repos/github/dmuhs/web3data-py/
            :alt: Updates
        
        .. image:: https://coveralls.io/repos/github/dmuhs/web3data-py/badge.svg?branch=master
            :target: https://coveralls.io/github/dmuhs/web3data-py?branch=master
        
        
        Obtaining an API Key
        --------------------
        
        Visit `Amberdata.io <https://amberdata.io/pricing>`_ and select the developer plan to get started!
        Pass your API key to the client instance, either has a hardcoded string, or through an environment
        variable:
        
        .. code-block:: python
        
            from web3data import Web3Data
            w3d = Web3Data("<your key>")
        
        ... and start querying!
        
        
        Installation
        ------------
        
        To install web3data-py, run this command in your terminal:
        
        .. code-block:: console
        
            $ pip install web3data
        
        For alternative ways to install the package, check out the
        `installation instructions <https://web3data-py.readthedocs.io/installation.html>`_
        
        
        Usage
        -----
        
        .. code-block:: python
        
            from web3data import Web3Data
        
            w3d = Web3Data("<your key>")
            print(w3d.eth.address.information("0x06012c8cf97bead5deae237070f9587f8e7a266d"))
        
        This will print the raw response, such as:
        
        .. code-block:: python
        
                {'status': 200,
                 'title': 'OK',
                 'description': 'Successful request',
                 'payload': {'balance': '5296672643815245964',
                  'balanceIn': '3.0894905437937322715551e+22',
                  'balanceOut': '3.0889608765293507469587e+22',
                  'addressType': 'contract',
                  'changeInPrice': None,
                  'contractTypes': ['ERC721'],
                  'decimals': '0',
                  'name': 'CryptoKitties',
                  'numHolders': '84753',
                  'numTokens': '1860119',
                  'numTransfers': '2723659',
                  'symbol': 'CK',
                  'totalSupply': '1860119.0000000000000000',
                  'totalValueUSD': None,
                  'unitValueUSD': None}}
        
        
        Development
        -----------
        
        Check out our `contribution guidelines <https://web3data-py.readthedocs.io/contributing.html>`_
        to see how to install the development version and run the test suite!
        
        Don't have the time to contribute? Open up an issue and we'll get it fixed!
        Simply like the project? Tip me some `BAT <https://brave.com/dmu968>`_ to sponsor development! :)
        
        
        Resources
        ---------
        
        * Free software: MIT license
        * Documentation: https://web3data-py.readthedocs.io.
        
        
        Credits
        -------
        
        The initial version of this package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        =======
        History
        =======
        
        0.1.6 (2021-01-25)
        ------------------
        
        - Add CSV format switch support
        - Various dependency upgrades
        
        
        0.1.5 (2020-05-22)
        ------------------
        
        - Include missing files in sdist
        - Update pip to 20.1.1
        - Update bumpversion to 0.6.0
        - Update flake8 to 3.8.1
        - Update pytest to 5.4.2
        - Update requests-mock to 1.8.0
        
        
        0.1.4 (2020-04-28)
        ------------------
        
        - add support for RPC endpoints
        - add support for websocket endpoints
        - add examples for rpc and websocket calls
        - update coverage to 5.1
        - update sphinx to 3.0.3
        
        
        0.1.3 (2020-03-16)
        ------------------
        
        - update coverage from 4.5.4 to 5.0.3
        - update flake8 from 3.7.8 to 3.7.9
        - update pip from 19.2.3 to 20.0.2
        - update pytest from 4.6.5 to 5.4.1
        - update pytest-runner from 5.1 to 5.2
        - update sphinx from 1.8.5 to 2.4.4
        - update twine from 1.14.0 to 3.1.1
        - update watchdog from 0.9.0 to 0.10.2
        - update wheel from 0.33.6 to 0.34.2
        
        
        0.1.1 + 0.1.2 (2020-03-15)
        --------------------------
        
        Add minor documentation, markup, and package publishing fixes
        
        
        0.1.0 (2020-03-15)
        ------------------
        
        First release on PyPI
        
        
        0.0.1 (2020-03-13)
        ------------------
        
        First implementation for the
        `Amberdata developer challenge <https://medium.com/amberdata/developer-challenge-scale-defi-digital-assets-d71015200325>`_
        
Keywords: web3data,web3data-py,amberdata,ethereum,bitcoin,stellar,rinkeby,aion,litecoin,zcash
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Topic :: Security
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: Implementation :: PyPy
Description-Content-Type: text/x-rst
