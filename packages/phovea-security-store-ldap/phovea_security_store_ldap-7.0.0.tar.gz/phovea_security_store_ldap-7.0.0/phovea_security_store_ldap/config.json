{
  "servers": [
    {
      "hostname": "${phovea_security_store_ldap.hostname}",
      "port": "${phovea_security_store_ldap.port}",
      "use_ssl": "${phovea_security_store_ldap.use_ssl}"
    }
  ],

  /*lowercase usernames which are denied access*/
  "blacklist": [],

  /*server settings*/
  "hostname": "",
  "port": 389,
  "use_ssl": false,
  "read_only": true,

 /*user name to login/bind at connection*/
  "bind_user_dn": null,
  /*password to login/bind at connection*/
  "bind_user_password": null,
  /*authentification type see LDAP3 connection authentification*/
  "bind_authentification_type": "SIMPLE",
  /**default netbios domain*/
  "default_netbios_domain": "",
  "use_who_am_i": true,


  //method to use: bind_direct, bind_guess_cn, search
  //bind_direct: username/password is directly used no groups
  //bind_guess_cn: the full cn is guessed and used to login and find ones groups
  //search: search the user and try out to login
  "method": "bind_guess_cn",
  "cache": false,

  //related to search fail if multiple found
  "fail_auth_on_multiple_found": false,

  /*Prepended to the Base DN to limit scope when searching for Users/Groups.*/
   /*default prefix for binding user*/
  "base_dn": "",
  "user_dn": "",
  "group_dn": "",
  "resolve_objects": "user", /* resolve objects via the bound user "user" or the generic login "generic"*/

  /*Ldap Filters*/
  "user": {
    "search_scope": "LEVEL",
    "object_filter": "(objectClass=person)", //base filter for users
    "login_attr": "dn", //name of the attribute for the username
    "alternative_login_attr": null,
    "rdn_attr": "dn", //name of the attribure for the guessing the fully cn
    "attributes": null, //limit the number of attributes
    "required_groups": [] //groups the user has to be part of
  },
  "group": {
    "search_scope": "LEVEL", //search scope: SUBTREE
    "object_filter": "(objectClass=group)",
    "members_attr": "member", //name of the attribute to check if a user is a member of a group
    "attributes": null,
    "match": null, //filter groups by dn
    "filter_manually": false, // filter groups by searching for them
    "prop": "dn" //the attribute to represent this group
  }
}
