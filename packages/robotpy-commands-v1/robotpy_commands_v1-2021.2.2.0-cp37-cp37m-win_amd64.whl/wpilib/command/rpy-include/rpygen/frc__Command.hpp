
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <frc\commands\Command.h>

#include <frc/smartdashboard/SendableBuilder.h>
#include <frc/commands/CommandGroup.h>




#include <rpygen/frc__ErrorBase.hpp>
#include <rpygen/frc__Sendable.hpp>

namespace rpygen {

using namespace frc;


template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
using PyBasefrc__Command = 
    Pyfrc__ErrorBase<
    Pyfrc__Sendable<
        PyTrampolineBase
    
    , CxxBase
    >
    
    , CxxBase
    >
;

template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
struct Pyfrc__Command : PyBasefrc__Command<PyTrampolineBase, CxxBase> {
    using PyBasefrc__Command<PyTrampolineBase, CxxBase>::PyBasefrc__Command;



#ifndef RPYGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(SendableBuilder& builder) override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "initSendable", InitSendable,builder);    }
#endif

#ifndef RPYGEN_DISABLE_Initialize_v
    void Initialize() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "initialize", Initialize,);    }
#endif

#ifndef RPYGEN_DISABLE_Execute_v
    void Execute() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "execute", Execute,);    }
#endif

#ifndef RPYGEN_DISABLE_IsFinished_v
    bool IsFinished() override {
RPYBUILD_OVERRIDE_PURE_NAME(Command,PYBIND11_TYPE(bool), CxxBase, "isFinished", IsFinished,);    }
#endif

#ifndef RPYGEN_DISABLE_End_v
    void End() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "end", End,);    }
#endif

#ifndef RPYGEN_DISABLE_Interrupted_v
    void Interrupted() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "interrupted", Interrupted,);    }
#endif

#ifndef RPYGEN_DISABLE__Initialize_v
    void _Initialize() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "_initialize", _Initialize,);    }
#endif

#ifndef RPYGEN_DISABLE__Interrupted_v
    void _Interrupted() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "_interrupted", _Interrupted,);    }
#endif

#ifndef RPYGEN_DISABLE__Execute_v
    void _Execute() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "_execute", _Execute,);    }
#endif

#ifndef RPYGEN_DISABLE__End_v
    void _End() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "_end", _End,);    }
#endif

#ifndef RPYGEN_DISABLE__Cancel_v
    void _Cancel() override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "_cancel", _Cancel,);    }
#endif


#ifndef RPYBLD_DISABLE_SetTimeout_d
  #ifndef RPYBLD_UDISABLE_frc__Command_SetTimeout
    using frc::Command::SetTimeout;
    #define RPYBLD_UDISABLE_frc__Command_SetTimeout
  #endif
#endif
#ifndef RPYBLD_DISABLE_KIsTimedOut_v
  #ifndef RPYBLD_UDISABLE_frc__Command_IsTimedOut
    using frc::Command::IsTimedOut;
    #define RPYBLD_UDISABLE_frc__Command_IsTimedOut
  #endif
#endif
#ifndef RPYBLD_DISABLE_AssertUnlocked_KRTstring
  #ifndef RPYBLD_UDISABLE_frc__Command_AssertUnlocked
    using frc::Command::AssertUnlocked;
    #define RPYBLD_UDISABLE_frc__Command_AssertUnlocked
  #endif
#endif
#ifndef RPYBLD_DISABLE_SetParent_PTCommandGroup
  #ifndef RPYBLD_UDISABLE_frc__Command_SetParent
    using frc::Command::SetParent;
    #define RPYBLD_UDISABLE_frc__Command_SetParent
  #endif
#endif
#ifndef RPYBLD_DISABLE_KIsParented_v
  #ifndef RPYBLD_UDISABLE_frc__Command_IsParented
    using frc::Command::IsParented;
    #define RPYBLD_UDISABLE_frc__Command_IsParented
  #endif
#endif
#ifndef RPYBLD_DISABLE_ClearRequirements_v
  #ifndef RPYBLD_UDISABLE_frc__Command_ClearRequirements
    using frc::Command::ClearRequirements;
    #define RPYBLD_UDISABLE_frc__Command_ClearRequirements
  #endif
#endif


};

}; // namespace rpygen
