<?xml version="1.0"?>
<!--
  Copyright (c) 2017 Massachusetts Institute of Technology (MIT)
  All rights reserved.

  Distributed under the terms of the BSD 3-clause license.

  The full license is in the LICENSE file, distributed with this software.
-->
<block>
    <name>Digital RF Sink</name>
    <key>gr_digital_rf_digital_rf_sink</key>
    <category>Digital RF</category>
    <import>import numpy as np; import gr_digital_rf</import>
    <make>\
    #set $allchannels = [$channel0(), $channel1(), $channel2(), $channel3(), $channel4(), $channel5(), $channel6(), $channel7(), $channel8(), $channel9(), $channel10(), $channel11(), $channel12(), $channel13(), $channel14(), $channel15(), $channel16(), $channel17(), $channel18(), $channel19(), $channel20(), $channel21(), $channel22(), $channel23(), $channel24(), $channel25(), $channel26(), $channel27(), $channel28(), $channel29(), $channel30(), $channel31()]
    #set $channels = $allchannels[:$nchan()]
    gr_digital_rf.digital_rf_sink(
        $top_level_dir,
        channels=$channels,
        dtype=$input.dtype,
        subdir_cadence_secs=$subdir_cadence_s,
        file_cadence_millisecs=$file_cadence_ms,
        sample_rate_numerator=$sample_rate_numerator,
        sample_rate_denominator=$sample_rate_denominator,
        start=$start, ignore_tags=$ignore_tags,
        is_complex=$input.complex, num_subchannels=$vlen,
        uuid_str=None if $uuid=='' else $uuid,
        center_frequencies=None if $center_freqs is () else $center_freqs,
        metadata=$metadata,
        is_continuous=$is_continuous, compression_level=$compression_level,
        checksum=$checksum, marching_periods=$marching_periods,
        stop_on_skipped=$stop_on_skipped, stop_on_time_tag=$stop_on_time_tag,
        debug=$debug,
        min_chunksize=None if $min_chunksize==0 else $min_chunksize,
    )
    </make>

    <callback>set_debug($debug)</callback>
    <callback>set_ignore_tags($ignore_tags)</callback>
    <callback>set_stop_on_skipped($stop_on_skipped)</callback>
    <callback>set_stop_on_time_tag($stop_on_time_tag)</callback>

    <param>
        <name>Directory</name>
        <key>top_level_dir</key>
        <type>string</type>
    </param>
    <param>
        <name>Number of channels</name>
        <key>nchan</key>
        <value>1</value>
        <type>int</type>
        <hide>part</hide>
        <option>
            <name>1</name>
            <key>1</key>
        </option>
        <option>
            <name>2</name>
            <key>2</key>
        </option>
        <option>
            <name>3</name>
            <key>3</key>
        </option>
        <option>
            <name>4</name>
            <key>4</key>
        </option>
        <option>
            <name>5</name>
            <key>5</key>
        </option>
        <option>
            <name>6</name>
            <key>6</key>
        </option>
        <option>
            <name>7</name>
            <key>7</key>
        </option>
        <option>
            <name>8</name>
            <key>8</key>
        </option>
        <option>
            <name>9</name>
            <key>9</key>
        </option>
        <option>
            <name>10</name>
            <key>10</key>
        </option>
        <option>
            <name>11</name>
            <key>11</key>
        </option>
        <option>
            <name>12</name>
            <key>12</key>
        </option>
        <option>
            <name>13</name>
            <key>13</key>
        </option>
        <option>
            <name>14</name>
            <key>14</key>
        </option>
        <option>
            <name>15</name>
            <key>15</key>
        </option>
        <option>
            <name>16</name>
            <key>16</key>
        </option>
        <option>
            <name>17</name>
            <key>17</key>
        </option>
        <option>
            <name>18</name>
            <key>18</key>
        </option>
        <option>
            <name>19</name>
            <key>19</key>
        </option>
        <option>
            <name>20</name>
            <key>20</key>
        </option>
        <option>
            <name>21</name>
            <key>21</key>
        </option>
        <option>
            <name>22</name>
            <key>22</key>
        </option>
        <option>
            <name>23</name>
            <key>23</key>
        </option>
        <option>
            <name>24</name>
            <key>24</key>
        </option>
        <option>
            <name>25</name>
            <key>25</key>
        </option>
        <option>
            <name>26</name>
            <key>26</key>
        </option>
        <option>
            <name>27</name>
            <key>27</key>
        </option>
        <option>
            <name>28</name>
            <key>28</key>
        </option>
        <option>
            <name>29</name>
            <key>29</key>
        </option>
        <option>
            <name>30</name>
            <key>30</key>
        </option>
        <option>
            <name>31</name>
            <key>31</key>
        </option>
        <option>
            <name>32</name>
            <key>32</key>
        </option>
    </param>
    <param>
        <name>Ch0</name>
        <key>channel0</key>
        <value>ch0</value>
        <type>string</type>
        <hide>#if $nchan() > 0 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch1</name>
        <key>channel1</key>
        <value>ch1</value>
        <type>string</type>
        <hide>#if $nchan() > 1 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch2</name>
        <key>channel2</key>
        <value>ch2</value>
        <type>string</type>
        <hide>#if $nchan() > 2 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch3</name>
        <key>channel3</key>
        <value>ch3</value>
        <type>string</type>
        <hide>#if $nchan() > 3 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch4</name>
        <key>channel4</key>
        <value>ch4</value>
        <type>string</type>
        <hide>#if $nchan() > 4 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch5</name>
        <key>channel5</key>
        <value>ch5</value>
        <type>string</type>
        <hide>#if $nchan() > 5 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch6</name>
        <key>channel6</key>
        <value>ch6</value>
        <type>string</type>
        <hide>#if $nchan() > 6 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch7</name>
        <key>channel7</key>
        <value>ch7</value>
        <type>string</type>
        <hide>#if $nchan() > 7 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch8</name>
        <key>channel8</key>
        <value>ch8</value>
        <type>string</type>
        <hide>#if $nchan() > 8 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch9</name>
        <key>channel9</key>
        <value>ch9</value>
        <type>string</type>
        <hide>#if $nchan() > 9 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch10</name>
        <key>channel10</key>
        <value>ch10</value>
        <type>string</type>
        <hide>#if $nchan() > 10 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch11</name>
        <key>channel11</key>
        <value>ch11</value>
        <type>string</type>
        <hide>#if $nchan() > 11 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch12</name>
        <key>channel12</key>
        <value>ch12</value>
        <type>string</type>
        <hide>#if $nchan() > 12 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch13</name>
        <key>channel13</key>
        <value>ch13</value>
        <type>string</type>
        <hide>#if $nchan() > 13 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch14</name>
        <key>channel14</key>
        <value>ch14</value>
        <type>string</type>
        <hide>#if $nchan() > 14 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch15</name>
        <key>channel15</key>
        <value>ch15</value>
        <type>string</type>
        <hide>#if $nchan() > 15 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch16</name>
        <key>channel16</key>
        <value>ch16</value>
        <type>string</type>
        <hide>#if $nchan() > 16 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch17</name>
        <key>channel17</key>
        <value>ch17</value>
        <type>string</type>
        <hide>#if $nchan() > 17 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch18</name>
        <key>channel18</key>
        <value>ch18</value>
        <type>string</type>
        <hide>#if $nchan() > 18 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch19</name>
        <key>channel19</key>
        <value>ch19</value>
        <type>string</type>
        <hide>#if $nchan() > 19 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch20</name>
        <key>channel20</key>
        <value>ch20</value>
        <type>string</type>
        <hide>#if $nchan() > 20 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch21</name>
        <key>channel21</key>
        <value>ch21</value>
        <type>string</type>
        <hide>#if $nchan() > 21 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch22</name>
        <key>channel22</key>
        <value>ch22</value>
        <type>string</type>
        <hide>#if $nchan() > 22 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch23</name>
        <key>channel23</key>
        <value>ch23</value>
        <type>string</type>
        <hide>#if $nchan() > 23 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch24</name>
        <key>channel24</key>
        <value>ch24</value>
        <type>string</type>
        <hide>#if $nchan() > 24 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch25</name>
        <key>channel25</key>
        <value>ch25</value>
        <type>string</type>
        <hide>#if $nchan() > 25 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch26</name>
        <key>channel26</key>
        <value>ch26</value>
        <type>string</type>
        <hide>#if $nchan() > 26 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch27</name>
        <key>channel27</key>
        <value>ch27</value>
        <type>string</type>
        <hide>#if $nchan() > 27 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch28</name>
        <key>channel28</key>
        <value>ch28</value>
        <type>string</type>
        <hide>#if $nchan() > 28 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch29</name>
        <key>channel29</key>
        <value>ch29</value>
        <type>string</type>
        <hide>#if $nchan() > 29 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch30</name>
        <key>channel30</key>
        <value>ch30</value>
        <type>string</type>
        <hide>#if $nchan() > 30 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Ch31</name>
        <key>channel31</key>
        <value>ch31</value>
        <type>string</type>
        <hide>#if $nchan() > 31 then 'none' else 'all'#</hide>
    </param>
    <param>
        <name>Input Type</name>
        <key>input</key>
        <value>sc16</value>
        <type>enum</type>
        <hide>part</hide>
        <option>
            <name>Complex int8</name>
            <key>sc8</key>
            <opt>type:sc8</opt>
            <opt>dtype:np.dtype([("r", "i1"), ("i", "i1")])</opt>
            <opt>complex:True</opt>
        </option>
        <option>
            <name>Complex int16</name>
            <key>sc16</key>
            <opt>type:sc16</opt>
            <opt>dtype:np.dtype([("r", "i2"), ("i", "i2")])</opt>
            <opt>complex:True</opt>
        </option>
        <option>
            <name>Complex float32</name>
            <key>fc32</key>
            <opt>type:fc32</opt>
            <opt>dtype:np.complex64</opt>
            <opt>complex:True</opt>
        </option>
        <option>
            <name>Complex float64</name>
            <key>fc64</key>
            <opt>type:fc64</opt>
            <opt>dtype:np.complex128</opt>
            <opt>complex:True</opt>
        </option>
        <option>
            <name>int8</name>
            <key>s8</key>
            <opt>type:s8</opt>
            <opt>dtype:np.int8</opt>
            <opt>complex:False</opt>
        </option>
        <option>
            <name>int16</name>
            <key>s16</key>
            <opt>type:s16</opt>
            <opt>dtype:np.int16</opt>
            <opt>complex:False</opt>
        </option>
        <option>
            <name>float32</name>
            <key>f32</key>
            <opt>type:f32</opt>
            <opt>dtype:np.float32</opt>
            <opt>complex:False</opt>
        </option>
        <option>
            <name>float64</name>
            <key>f64</key>
            <opt>type:f64</opt>
            <opt>dtype:np.float64</opt>
            <opt>complex:False</opt>
        </option>
    </param>
    <param>
        <name>Vector Length</name>
        <key>vlen</key>
        <value>1</value>
        <type>int</type>
        <hide>part</hide>
    </param>
    <param>
        <name>Subdir Cadence (s)</name>
        <key>subdir_cadence_s</key>
        <value>3600</value>
        <type>int</type>
        <hide>part</hide>
    </param>
    <param>
        <name>File Cadence (ms)</name>
        <key>file_cadence_ms</key>
        <value>1000</value>
        <type>int</type>
        <hide>part</hide>
    </param>
    <param>
        <name>Sample Rate (num)</name>
        <key>sample_rate_numerator</key>
        <value>int(samp_rate)</value>
        <type>int</type>
    </param>
    <param>
        <name>Sample Rate (den)</name>
        <key>sample_rate_denominator</key>
        <value>1</value>
        <type>int</type>
    </param>
    <param>
        <name>Start</name>
        <key>start</key>
        <value></value>
        <type>string</type>
        <hide>#if $start() then 'none' else 'part'#</hide>
    </param>
    <param>
        <name>UUID</name>
        <key>uuid</key>
        <value></value>
        <type>string</type>
        <hide>#if $uuid() then 'none' else 'part'#</hide>
    </param>
    <param>
        <name>Ignore Tags</name>
        <key>ignore_tags</key>
        <value>False</value>
        <type>bool</type>
        <hide>#if $ignore_tags() then 'none' else 'part'#</hide>
        <option>
            <name>Yes</name>
            <key>True</key>
        </option>
        <option>
            <name>No</name>
            <key>False</key>
        </option>
    </param>
    <param>
        <name>Center Frequencies</name>
        <key>center_freqs</key>
        <value></value>
        <type>real_vector</type>
        <hide>part</hide>
        <tab>Metadata</tab>
    </param>
    <param>
        <name>Additional Metadata</name>
        <key>metadata</key>
        <value>{}</value>
        <type>raw</type>
        <hide>part</hide>
        <tab>Metadata</tab>
    </param>
    <param>
        <name>Debug Printing</name>
        <key>debug</key>
        <value>False</value>
        <type>bool</type>
        <hide>part</hide>
        <option>
            <name>Yes</name>
            <key>True</key>
        </option>
        <option>
            <name>No</name>
            <key>False</key>
        </option>
        <tab>Advanced</tab>
    </param>
    <param>
        <name>Continuous Blocks</name>
        <key>is_continuous</key>
        <value>True</value>
        <type>bool</type>
        <hide>part</hide>
        <option>
            <name>Yes</name>
            <key>True</key>
        </option>
        <option>
            <name>No</name>
            <key>False</key>
        </option>
        <tab>Advanced</tab>
    </param>
    <param>
        <name>HDF5 Compression</name>
        <key>compression_level</key>
        <value>0</value>
        <type>int</type>
        <hide>part</hide>
        <tab>Advanced</tab>
    </param>
    <param>
        <name>HDF5 Checksum</name>
        <key>checksum</key>
        <value>False</value>
        <type>bool</type>
        <hide>part</hide>
        <option>
            <name>Yes</name>
            <key>True</key>
        </option>
        <option>
            <name>No</name>
            <key>False</key>
        </option>
        <tab>Advanced</tab>
    </param>
    <param>
        <name>Marching Periods</name>
        <key>marching_periods</key>
        <value>True</value>
        <type>bool</type>
        <hide>part</hide>
        <option>
            <name>Yes</name>
            <key>True</key>
        </option>
        <option>
            <name>No</name>
            <key>False</key>
        </option>
        <tab>Advanced</tab>
    </param>
    <param>
        <name>Stop on Skip</name>
        <key>stop_on_skipped</key>
        <value>False</value>
        <type>bool</type>
        <hide>part</hide>
        <option>
            <name>Yes</name>
            <key>True</key>
        </option>
        <option>
            <name>No</name>
            <key>False</key>
        </option>
        <tab>Advanced</tab>
    </param>
    <param>
        <name>Stop on Time Tag</name>
        <key>stop_on_time_tag</key>
        <value>False</value>
        <type>bool</type>
        <hide>part</hide>
        <option>
            <name>Yes</name>
            <key>True</key>
        </option>
        <option>
            <name>No</name>
            <key>False</key>
        </option>
        <tab>Advanced</tab>
    </param>
    <param>
        <name>Minimum Chunk Size</name>
        <key>min_chunksize</key>
        <value>0</value>
        <type>int</type>
        <hide>part</hide>
        <tab>Advanced</tab>
    </param>

    <check>$vlen > 0</check>
    <check>$subdir_cadence_s > 0</check>
    <check>$file_cadence_ms > 0</check>
    <check>$subdir_cadence_s*1000 % $file_cadence_ms == 0</check>
    <check>$sample_rate_numerator > 0</check>
    <check>$sample_rate_denominator > 0</check>
    <check>$compression_level >= 0 and 9 >= $compression_level</check>
    <check>$min_chunksize >= 0</check>

    <sink>
        <name>in</name>
        <type>$input.type</type>
        <vlen>$vlen</vlen>
        <nports>$nchan</nports>
    </sink>

    <doc>
Write data in Digital RF format.

This block is useful for writing multiple channels of data that have
the same parameters. If different parameters for each channel are
needed, use multiple `digital_rf_channel_sink` blocks.

In addition to storing the input samples in Digital RF format, this
block also populates the channel's accompanying Digital Metadata
at the sample indices when the metadata changes or a data skip occurs.
See the Notes section for details on what metadata is stored.


Parameters
----------

Directory : string
    The top-level directory in which Digital RF channel directories
    will be created. It will be created if it does not exist.

Number of channels : int
    Number of channels to output.

ChN : string
    Name for channel number N. Each channel name will be used as the directory
    name for the channel inside the top-level directory.

Input Type : enum
    Size and type of the input samples.

Vector Length : int
    Vector length of the input. Each sample of the vector will be written
    to a different subchannel.

Subdir Cadence (s) : int
    The number of seconds of data to store in one subdirectory. The
    timestamp of any subdirectory will be an integer multiple of this
    value.

File Cadence (s) : int
    The number of milliseconds of data to store in each file. Note that
    an integer number of files must exactly span a subdirectory,
    implying::

        (subdir_cadence_secs*1000 % file_cadence_millisecs) == 0

Sample Rate (num) : int
    Numerator of sample rate in Hz.

Sample Rate (den) : int
    Denominator of sample rate in Hz.

Start : None | int | float | string, optional
    A value giving the time/index of the channel's first sample. When
    `ignore_tags` is False, 'rx_time' tags will be used to identify
    data gaps and skip the sample index forward appropriately (tags
    that refer to an earlier time will be ignored).

    If None or '' and `ignore_tags` is False, a default value of 0
    is used (a ValueError is raised if `ignore_tags` is True).

    If an integer, it is interpreted as a sample index given in the
    number of samples since the epoch (time_since_epoch*sample_rate).

    If a float, it is interpreted as a timestamp (seconds since epoch).

    If a string, three forms are permitted:
        1) a string which can be evaluated to an integer/float and
            interpreted as above,
        2) a time in ISO8601 format, e.g. '2016-01-01T16:24:00Z'
        3) 'now' ('nowish'), indicating the current time (rounded up)

UUID : string, optional
    UUID string that will act as a unique identifier for the data and
    can be used to tie the data files to metadata. If empty, a random
    UUID will be generated.

Ignore Tags : bool, optional
    If True, do not use 'rx_time' tags to set the sample index and do
    not write other tags as Digital Metadata.


Other Parameters
----------------

Center Frequencies : None | array_like of floats, optional
    List of subchannel center frequencies to include in initial
    metadata. If empty, ``[0.0]*num_subchannels`` will be used.
    Subsequent center frequency metadata samples can be written using
    'rx_freq' stream tags.

Additional Metadata : dict, optional
    Dictionary of additional metadata to include in initial Digital
    Metadata sample. Subsequent metadata samples can be written
    using 'metadata' stream tags, but all keys intended to be included
    should be set here first even if their values are empty.

Continuous Blocks : bool, optional
    If True, data will be written in continuous blocks. If False data
    will be written with gapped blocks. Fastest read speed is achieved
    with is_continuous True, checksum False, and compression_level 0
    (all defaults).

HDF5 Compression : int, optional
    0 for no compression (default), 1-9 for varying levels of gzip
    compression (1 == least compression, least CPU; 9 == most
    compression, most CPU).

HDF5 Checksum : bool, optional
    If True, use HDF5 checksum capability. If False (default), no
    checksum.

Marching Periods : bool, optional
    If True, write a period to stdout for every subdirectory when
    writing.

Stop on Skip : bool, optional
    If True, stop writing when a sample would be skipped (such as from
    a dropped packet).

Stop on Time Tag : bool, optional
    If True, stop writing when any but an initial 'rx_time' tag is received.

Minimum Chunk Size : int, optional
    Minimum number of samples to consume at once. This value can be
    used to adjust the sink's performance to reduce processing time.
    If 0, a sensible default will be used.


Notes
-----

By convention, this block sets the following Digital Metadata fields:

    uuid_str : string
        Value provided by the `uuid_str` argument.

    sample_rate_numerator : int
        Value provided by the `sample_rate_numerator` argument.

    sample_rate_denominator : int
        Value provided by the `sample_rate_denominator` argument.

    center_frequencies : list of floats with length `num_subchannels`
        Subchannel center frequencies as specified by
        `center_frequencies` argument and 'rx_freq' stream tags.

Additional metadata fields can be set using the `metadata` argument and
stream tags. Nested dictionaries are permitted and are helpful for
grouping properties. For example, receiver-specific metadata is
typically specified with a sub-dictionary using the 'receiver' field.


This block acts on the following stream tags when `ignore_tags` is
False:

    rx_time : (int secs, float frac) tuple
        Used to set the sample index from the given time since epoch.

    rx_freq : float
        Used to set the 'center_frequencies' value in the channel's
        Digital Metadata as described above.

    metadata : dict
        Used to populate additional (key, value) pairs in the channel's
        Digital Metadata. Any keys passed in 'metadata' tags should be
        included in the `metadata` argument at initialization to ensure
        that they always exist in the Digital Metadata.

    </doc>
</block>
