<!DOCTYPE html>
<html>
<meta charset="UTF-8">
<head>
 <style>
  html, body {
  height: 100%;
  width: 100%;
  overflow: hidden;
 }
 </style>
    <title>Leaflet.draw drawing and editing tools</title>

    <link rel="stylesheet" href="leaflet/leaflet.css"/>
    <link rel="stylesheet" href="leaflet/draw/src/leaflet.draw.css"/>

    <!-- TODO(kyle): prune dependencies -->
    <script src="./leaflet/leaflet-src.js"></script>

    <script src="./leaflet/draw/src/Leaflet.draw.js"></script>
    <script src="./leaflet/draw/src/Leaflet.Draw.Event.js"></script>

    <script src="./leaflet/draw/src/edit/handler/Edit.Poly.js"></script>
    <script src="./leaflet/draw/src/edit/handler/Edit.SimpleShape.js"></script>
    <script src="./leaflet/draw/src/edit/handler/Edit.Rectangle.js"></script>
    <script src="./leaflet/draw/src/edit/handler/Edit.Marker.js"></script>
    <script src="./leaflet/draw/src/edit/handler/Edit.CircleMarker.js"></script>
    <script src="./leaflet/draw/src/edit/handler/Edit.Circle.js"></script>

    <script src="./leaflet/draw/src/draw/handler/Draw.Feature.js"></script>
    <script src="./leaflet/draw/src/draw/handler/Draw.Polyline.js"></script>
    <script src="./leaflet/draw/src/draw/handler/Draw.Polygon.js"></script>
    <script src="./leaflet/draw/src/draw/handler/Draw.SimpleShape.js"></script>
    <script src="./leaflet/draw/src/draw/handler/Draw.Rectangle.js"></script>
    <script src="./leaflet/draw/src/draw/handler/Draw.Circle.js"></script>
    <script src="./leaflet/draw/src/draw/handler/Draw.Marker.js"></script>
    <script src="./leaflet/draw/src/draw/handler/Draw.CircleMarker.js"></script>

    <script src="./leaflet/draw/src/ext/TouchEvents.js"></script>
    <script src="./leaflet/draw/src/ext/LatLngUtil.js"></script>
    <script src="./leaflet/draw/src/ext/GeometryUtil.js"></script>
    <script src="./leaflet/draw/src/ext/LineUtil.Intersect.js"></script>
    <script src="./leaflet/draw/src/ext/Polyline.Intersect.js"></script>
    <script src="./leaflet/draw/src/ext/Polygon.Intersect.js"></script>

    <script src="./leaflet/draw/src/Control.Draw.js"></script>
    <script src="./leaflet/draw/src/Tooltip.js"></script>
    <script src="./leaflet/draw/src/Toolbar.js"></script>

    <script src="./leaflet/draw/src/draw/DrawToolbar.js"></script>
    <script src="./leaflet/draw/src/edit/EditToolbar.js"></script>
    <script src="./leaflet/draw/src/edit/handler/EditToolbar.Edit.js"></script>
    <script src="./leaflet/draw/src/edit/handler/EditToolbar.Delete.js"></script>
</head>
<body>
 <div id="map" style="width: 100%; height: 100%; border: 1px solid #ccc"></div>
<script>
    // Get a valid key from our server
    var apiKey = "";
    function getKey() {
     // don't call this
     return
     xhr = new XMLHttpRequest();
     var url = "https://windninja.org/mapkey/";
     xhr.open("GET", url, true);
     xhr.onreadystatechange = function () {
     // readyState == HEADER_RECEIVED or DONE is fine (2 or 4)
     // We need to read the return on the api call, and report a valid
     // error.  These are worthless.
      if (xhr.readyState == 4 && xhr.status == 200) {
       apiKey = JSON.parse(xhr.responseText).key;
       alert(apiKey);
      } else {
       console.log("failed");
      }
     }
     xhr.send(null);
    }
    getKey();

    // invalidate the key, use this static one for now.
    apiKey = "pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw";

    mbAtt = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
     '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
     'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>'


    mbl = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
     tileSize: 512,
     maxZoom: 18,
     zoomOffset: -1,
     // attribution: mbAtt,
     id: 'mapbox/streets-v11'
    })
    var map = new L.Map('map', {layers: [mbl], center: new L.LatLng(43.62455, -113.2971), zoom: 8});
    var mbrLayer = new L.FeatureGroup();
    map.addLayer(mbrLayer);

    var drawControl = new L.Control.Draw({
        position: 'topright',
        draw: {
            polyline: false,
            polygon: false,
            circle: false,
            marker: false,
            circlemarker: false,
            rectangle: true
        },
        edit: {
         featureGroup: mbrLayer,
         remove: true
        }
    });
    map.addControl(drawControl);

    map.on(L.Draw.Event.DRAWSTART, function (e) {
        mbrLayer.clearLayers();
    });

    map.on(L.Draw.Event.CREATED, function (e) {
        mbrLayer.addLayer(e.layer);
        map.addLayer(mbrLayer);
        console.log(mbr());
    });
    function mbr() {
     if(mbrLayer.getLayers().length > 0){
      var b = mbrLayer.getLayers()[0]._bounds;
      b._southWest.lng = b._southWest.lng % 360;
      if(b._southWest.lng < -180) {
        b._southWest.lng += 360;
      }
      b._northEast.lng = b._northEast.lng % 360;
      if(b._northEast.lng < -180) {
        b._northEast.lng += 360;
      }
      // switch to negative longitudes if needed
      if(b._southWest.lng > 180){
        b._southWest.lng -= 360;
      }
      if(b._northEast.lng > 180){
        b._northEast.lng -= 360;
      }
      return [b._southWest.lng, b._northEast.lng, b._southWest.lat, b._northEast.lat];
     }
     return null;
    }
</script>
</body>
</html>
