Metadata-Version: 2.1
Name: git-glow
Version: 0.1.1
Summary: A new git extension to use git flow branching model automatically with Jira and Github
Home-page: https://github.com/nicolasramy/git-glow
Author: Nicolas RAMY
Author-email: nicolas.ramy@darkelda.com
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Terminals
Classifier: Topic :: Utilities
Requires-Dist: click (==8.0.0a1)
Requires-Dist: colorama (==0.4.4)
Requires-Dist: emoji (==1.2.0)
Requires-Dist: gitpython (==3.1.12)
Requires-Dist: idna (==2.10)
Requires-Dist: python-slugify (==4.0.1)
Requires-Dist: requests (==2.25.1)
Requires-Dist: semver (==2.13.0)
Requires-Dist: termcolor (==1.1.0)
Requires-Dist: urllib3[secure] (==1.26.3)

# Glow
A new git extension to use git flow branching model automatically with Jira and Github

## Requirements

- git
- Python 3.7+

In a git repository with a **develop** and **main** branch.

More information about [gitflow](http://nvie.com/posts/a-successful-git-branching-model/). 

## TODO

- [ ] Factorize `finish_release` and `finish_hotfix`
- [ ] Toggle project-key-id  
- [ ] Toggle github integration 
- [ ] Toggle jira integration 
- [ ] Implement cancel methods:
    - [ ] `cancel_feature` 
    - [ ] `cancel_release` 
    - [ ] `cancel_feature` 
- [ ] Better handling for changelog generation and tag
- [x] Improve slugify
- [x] Secure creation
    - [x] feature
    - [x] release
    - [x] hotfix
- [ ] Create an `init` command
- [ ] Update behavior if develop branch doesn't exists 



## How to setup

### Generate a Github token

1. Go to settings
2. Personal access token
3. Click on generate new token
4. Type a Token Description ex: *glow CLI*
5. Check repo checkbox *(repo Full control of private repositories)*
6. Generate token

### Install the application

If you want to use it on the entire system, prefix this command with sudo

```
python setup.py install
pip3 install --force-reinstall .
pip3 install .
```

OR

```
pip install git-glow
```

## Usage

To use this command, just type ```git glow``` in a git repository

### Feature

#### Start a feature

Development of new features starting from the **develop** branch.

```bash
git glow start feature 1234
```

#### Review a feature

To generate a Pull Request in order to merge your **feature** into **develop** branch.

```bash
git glow review feature 1234
```

### Release

#### Start a new release

To create a release from the last features merged on the **develop** branch.

```bash
git glow start release
```

#### Review a release

To generate a Pull Request in order to merge your **release** into **main** branch.

```bash
git glow review release
```

#### Finish a release

Close release branches and generate a tag for your release.
And merge the generated tag into **develop** branch.

```bash
git glow finish release
```


### Hotfix

#### Start a new hotfix

To create a hotfix from the last release merged on the **main** branch.

```bash
git glow start hotfix
```

#### Review a hotfix

To generate a Pull Request in order to merge your **hotfix** into **main** branch.

```bash
git glow review hotfix
```

#### Finish a hotfix

Close hotfix branches and generate a tag for your hotfix.
And merge the generated tag into **develop** branch.

```bash
git glow finish hotfix
```




