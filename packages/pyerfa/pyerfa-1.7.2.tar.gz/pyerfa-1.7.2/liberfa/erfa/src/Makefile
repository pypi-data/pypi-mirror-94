# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/erfa
pkgincludedir = $(includedir)/erfa
pkglibdir = $(libdir)/erfa
pkglibexecdir = $(libexecdir)/erfa
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
TESTS = t_erfa_c$(EXEEXT) t_erfa_c_extra$(EXEEXT)
check_PROGRAMS = t_erfa_c$(EXEEXT) t_erfa_c_extra$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/erfa-numver.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
liberfa_la_LIBADD =
am_liberfa_la_OBJECTS = a2af.lo a2tf.lo ab.lo ae2hd.lo af2a.lo anp.lo \
	anpm.lo apcg13.lo apcg.lo apci13.lo apci.lo apco13.lo apco.lo \
	apcs13.lo apcs.lo aper13.lo aper.lo apio13.lo apio.lo \
	atci13.lo atciq.lo atciqn.lo atciqz.lo atco13.lo atic13.lo \
	aticq.lo aticqn.lo atio13.lo atioq.lo atoc13.lo atoi13.lo \
	atoiq.lo bi00.lo bp00.lo bp06.lo bpn2xy.lo c2i00a.lo c2i00b.lo \
	c2i06a.lo c2ibpn.lo c2ixy.lo c2ixys.lo c2s.lo c2t00a.lo \
	c2t00b.lo c2t06a.lo c2tcio.lo c2teqx.lo c2tpe.lo c2txy.lo \
	cal2jd.lo cp.lo cpv.lo cr.lo d2dtf.lo d2tf.lo dat.lo dtdb.lo \
	dtf2d.lo eceq06.lo ee00a.lo ee00.lo eect00.lo eo06a.lo \
	epb2jd.lo epj2jd.lo epv00.lo eqeq94.lo ecm06.lo ee00b.lo \
	ee06a.lo eform.lo eors.lo epb.lo epj.lo eqec06.lo era00.lo \
	fad03.lo fae03.lo faf03.lo faju03.lo fal03.lo falp03.lo \
	fama03.lo fame03.lo fane03.lo faom03.lo fapa03.lo fasa03.lo \
	faur03.lo fave03.lo fk425.lo fk45z.lo fk524.lo fk54z.lo \
	fk52h.lo fk5hip.lo fk5hz.lo fw2m.lo fw2xy.lo g2icrs.lo \
	gc2gd.lo gc2gde.lo gd2gc.lo gd2gce.lo gmst00.lo gmst06.lo \
	gmst82.lo gst00a.lo gst00b.lo gst06a.lo gst06.lo gst94.lo \
	hd2ae.lo hd2pa.lo h2fk5.lo hfk5z.lo icrs2g.lo ir.lo jd2cal.lo \
	jdcalf.lo ld.lo ldn.lo ldsun.lo lteceq.lo ltecm.lo lteqec.lo \
	ltpb.lo ltp.lo ltpecl.lo ltpequ.lo num00a.lo num00b.lo \
	num06a.lo numat.lo nut00a.lo nut00b.lo nut06a.lo nut80.lo \
	nutm80.lo obl06.lo obl80.lo p06e.lo p2pv.lo p2s.lo pap.lo \
	pas.lo pb06.lo pdp.lo pfw06.lo plan94.lo pmat00.lo pmat06.lo \
	pmat76.lo pm.lo pmp.lo pmpx.lo pmsafe.lo pn00a.lo pn00b.lo \
	pn00.lo pn06a.lo pn06.lo pn.lo pnm00a.lo pnm00b.lo pnm06a.lo \
	pnm80.lo pom00.lo ppp.lo ppsp.lo pr00.lo prec76.lo pv2p.lo \
	pv2s.lo pvdpv.lo pvm.lo pvmpv.lo pvppv.lo pvstar.lo pvtob.lo \
	pvu.lo pvup.lo pvxpv.lo pxp.lo refco.lo rm2v.lo rv2m.lo rx.lo \
	rxp.lo rxpv.lo rxr.lo ry.lo rz.lo s00a.lo s00b.lo s00.lo \
	s06a.lo s06.lo s2c.lo s2p.lo s2pv.lo s2xpv.lo sepp.lo seps.lo \
	sp00.lo starpm.lo starpv.lo sxp.lo sxpv.lo taitt.lo taiut1.lo \
	taiutc.lo tcbtdb.lo tcgtt.lo tdbtcb.lo tdbtt.lo tf2a.lo \
	tf2d.lo tpors.lo tporv.lo tpsts.lo tpstv.lo tpxes.lo tpxev.lo \
	tr.lo trxp.lo trxpv.lo tttai.lo tttcg.lo tttdb.lo ttut1.lo \
	ut1tai.lo ut1tt.lo ut1utc.lo utctai.lo utcut1.lo xy06.lo \
	xys00a.lo xys00b.lo xys06a.lo zp.lo zpv.lo zr.lo \
	erfaversion.lo erfadatextra.lo
liberfa_la_OBJECTS = $(am_liberfa_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
liberfa_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(liberfa_la_LDFLAGS) $(LDFLAGS) -o $@
am_t_erfa_c_OBJECTS = t_erfa_c.$(OBJEXT)
t_erfa_c_OBJECTS = $(am_t_erfa_c_OBJECTS)
t_erfa_c_LDADD = $(LDADD)
t_erfa_c_DEPENDENCIES = $(top_builddir)/src/liberfa.la
am_t_erfa_c_extra_OBJECTS = t_erfa_c_extra.$(OBJEXT)
t_erfa_c_extra_OBJECTS = $(am_t_erfa_c_extra_OBJECTS)
t_erfa_c_extra_LDADD = $(LDADD)
t_erfa_c_extra_DEPENDENCIES = $(top_builddir)/src/liberfa.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(liberfa_la_SOURCES) $(t_erfa_c_SOURCES) \
	$(t_erfa_c_extra_SOURCES)
DIST_SOURCES = $(liberfa_la_SOURCES) $(t_erfa_c_SOURCES) \
	$(t_erfa_c_extra_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/vsts/work/1/s/liberfa/erfa/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/vsts/work/1/s/liberfa/erfa/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/vsts/work/1/s/liberfa/erfa/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/vsts/work/1/s/liberfa/erfa/build-aux/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/vsts/work/1/s/liberfa/erfa/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = erfa
PACKAGE_BUGREPORT = 
PACKAGE_NAME = erfa
PACKAGE_STRING = erfa 1.7.2
PACKAGE_TARNAME = erfa
PACKAGE_URL = 
PACKAGE_VERSION = 1.7.2
PATCH_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.7.2
VI_AGE = 7
VI_ALL = 8:2:7
VI_CURR = 8
VI_REL = 2
abs_builddir = /home/vsts/work/1/s/liberfa/erfa/src
abs_srcdir = /home/vsts/work/1/s/liberfa/erfa/src
abs_top_builddir = /home/vsts/work/1/s/liberfa/erfa
abs_top_srcdir = /home/vsts/work/1/s/liberfa/erfa
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/vsts/work/1/s/liberfa/erfa/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = liberfa.la
liberfa_la_SOURCES = a2af.c a2tf.c ab.c ae2hd.c af2a.c anp.c anpm.c apcg13.c \
apcg.c apci13.c apci.c apco13.c apco.c apcs13.c apcs.c aper13.c \
aper.c apio13.c apio.c atci13.c atciq.c atciqn.c atciqz.c atco13.c \
atic13.c aticq.c aticqn.c atio13.c atioq.c atoc13.c atoi13.c atoiq.c \
bi00.c bp00.c bp06.c bpn2xy.c c2i00a.c c2i00b.c c2i06a.c c2ibpn.c \
c2ixy.c c2ixys.c c2s.c c2t00a.c c2t00b.c c2t06a.c c2tcio.c c2teqx.c \
c2tpe.c c2txy.c cal2jd.c cp.c cpv.c cr.c d2dtf.c d2tf.c dat.c dtdb.c \
dtf2d.c eceq06.c ee00a.c ee00.c eect00.c eo06a.c epb2jd.c epj2jd.c epv00.c \
eqeq94.c ecm06.c ee00b.c ee06a.c eform.c eors.c epb.c epj.c eqec06.c \
era00.c fad03.c fae03.c faf03.c faju03.c fal03.c falp03.c fama03.c \
fame03.c fane03.c faom03.c fapa03.c fasa03.c faur03.c fave03.c \
fk425.c fk45z.c fk524.c fk54z.c \
fk52h.c fk5hip.c fk5hz.c fw2m.c fw2xy.c g2icrs.c gc2gd.c gc2gde.c gd2gc.c \
gd2gce.c gmst00.c gmst06.c gmst82.c gst00a.c gst00b.c gst06a.c \
gst06.c gst94.c hd2ae.c hd2pa.c h2fk5.c hfk5z.c icrs2g.c ir.c \
jd2cal.c jdcalf.c ld.c \
ldn.c ldsun.c lteceq.c ltecm.c lteqec.c ltpb.c ltp.c ltpecl.c ltpequ.c \
num00a.c num00b.c num06a.c numat.c nut00a.c nut00b.c \
nut06a.c nut80.c nutm80.c obl06.c obl80.c p06e.c p2pv.c p2s.c pap.c \
pas.c pb06.c pdp.c pfw06.c plan94.c pmat00.c pmat06.c pmat76.c \
pm.c pmp.c pmpx.c pmsafe.c pn00a.c pn00b.c pn00.c pn06a.c \
pn06.c pn.c pnm00a.c pnm00b.c pnm06a.c pnm80.c pom00.c ppp.c \
ppsp.c pr00.c prec76.c pv2p.c pv2s.c pvdpv.c pvm.c pvmpv.c pvppv.c \
pvstar.c pvtob.c pvu.c pvup.c pvxpv.c pxp.c refco.c rm2v.c rv2m.c \
rx.c rxp.c rxpv.c rxr.c ry.c rz.c s00a.c s00b.c s00.c \
s06a.c s06.c s2c.c s2p.c s2pv.c s2xpv.c sepp.c seps.c sp00.c \
starpm.c starpv.c sxp.c sxpv.c taitt.c taiut1.c taiutc.c tcbtdb.c \
tcgtt.c tdbtcb.c tdbtt.c tf2a.c tf2d.c tpors.c tporv.c tpsts.c \
tpstv.c tpxes.c tpxev.c tr.c trxp.c trxpv.c tttai.c \
tttcg.c tttdb.c ttut1.c ut1tai.c ut1tt.c ut1utc.c utctai.c utcut1.c \
xy06.c xys00a.c xys00b.c xys06a.c zp.c zpv.c zr.c \
erfaversion.c erfadatextra.c

include_HEADERS = erfa.h erfam.h erfaextra.h erfadatextra.h
liberfa_la_LDFLAGS = -version-info $(VI_ALL)
t_erfa_c_SOURCES = t_erfa_c.c
t_erfa_c_extra_SOURCES = t_erfa_c_extra.c
AM_CPPFLAGS = -I$(top_srcdir)
LDADD = $(top_builddir)/src/liberfa.la
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

liberfa.la: $(liberfa_la_OBJECTS) $(liberfa_la_DEPENDENCIES) $(EXTRA_liberfa_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(liberfa_la_LINK) -rpath $(libdir) $(liberfa_la_OBJECTS) $(liberfa_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

t_erfa_c$(EXEEXT): $(t_erfa_c_OBJECTS) $(t_erfa_c_DEPENDENCIES) $(EXTRA_t_erfa_c_DEPENDENCIES) 
	@rm -f t_erfa_c$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_erfa_c_OBJECTS) $(t_erfa_c_LDADD) $(LIBS)

t_erfa_c_extra$(EXEEXT): $(t_erfa_c_extra_OBJECTS) $(t_erfa_c_extra_DEPENDENCIES) $(EXTRA_t_erfa_c_extra_DEPENDENCIES) 
	@rm -f t_erfa_c_extra$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_erfa_c_extra_OBJECTS) $(t_erfa_c_extra_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/a2af.Plo
include ./$(DEPDIR)/a2tf.Plo
include ./$(DEPDIR)/ab.Plo
include ./$(DEPDIR)/ae2hd.Plo
include ./$(DEPDIR)/af2a.Plo
include ./$(DEPDIR)/anp.Plo
include ./$(DEPDIR)/anpm.Plo
include ./$(DEPDIR)/apcg.Plo
include ./$(DEPDIR)/apcg13.Plo
include ./$(DEPDIR)/apci.Plo
include ./$(DEPDIR)/apci13.Plo
include ./$(DEPDIR)/apco.Plo
include ./$(DEPDIR)/apco13.Plo
include ./$(DEPDIR)/apcs.Plo
include ./$(DEPDIR)/apcs13.Plo
include ./$(DEPDIR)/aper.Plo
include ./$(DEPDIR)/aper13.Plo
include ./$(DEPDIR)/apio.Plo
include ./$(DEPDIR)/apio13.Plo
include ./$(DEPDIR)/atci13.Plo
include ./$(DEPDIR)/atciq.Plo
include ./$(DEPDIR)/atciqn.Plo
include ./$(DEPDIR)/atciqz.Plo
include ./$(DEPDIR)/atco13.Plo
include ./$(DEPDIR)/atic13.Plo
include ./$(DEPDIR)/aticq.Plo
include ./$(DEPDIR)/aticqn.Plo
include ./$(DEPDIR)/atio13.Plo
include ./$(DEPDIR)/atioq.Plo
include ./$(DEPDIR)/atoc13.Plo
include ./$(DEPDIR)/atoi13.Plo
include ./$(DEPDIR)/atoiq.Plo
include ./$(DEPDIR)/bi00.Plo
include ./$(DEPDIR)/bp00.Plo
include ./$(DEPDIR)/bp06.Plo
include ./$(DEPDIR)/bpn2xy.Plo
include ./$(DEPDIR)/c2i00a.Plo
include ./$(DEPDIR)/c2i00b.Plo
include ./$(DEPDIR)/c2i06a.Plo
include ./$(DEPDIR)/c2ibpn.Plo
include ./$(DEPDIR)/c2ixy.Plo
include ./$(DEPDIR)/c2ixys.Plo
include ./$(DEPDIR)/c2s.Plo
include ./$(DEPDIR)/c2t00a.Plo
include ./$(DEPDIR)/c2t00b.Plo
include ./$(DEPDIR)/c2t06a.Plo
include ./$(DEPDIR)/c2tcio.Plo
include ./$(DEPDIR)/c2teqx.Plo
include ./$(DEPDIR)/c2tpe.Plo
include ./$(DEPDIR)/c2txy.Plo
include ./$(DEPDIR)/cal2jd.Plo
include ./$(DEPDIR)/cp.Plo
include ./$(DEPDIR)/cpv.Plo
include ./$(DEPDIR)/cr.Plo
include ./$(DEPDIR)/d2dtf.Plo
include ./$(DEPDIR)/d2tf.Plo
include ./$(DEPDIR)/dat.Plo
include ./$(DEPDIR)/dtdb.Plo
include ./$(DEPDIR)/dtf2d.Plo
include ./$(DEPDIR)/eceq06.Plo
include ./$(DEPDIR)/ecm06.Plo
include ./$(DEPDIR)/ee00.Plo
include ./$(DEPDIR)/ee00a.Plo
include ./$(DEPDIR)/ee00b.Plo
include ./$(DEPDIR)/ee06a.Plo
include ./$(DEPDIR)/eect00.Plo
include ./$(DEPDIR)/eform.Plo
include ./$(DEPDIR)/eo06a.Plo
include ./$(DEPDIR)/eors.Plo
include ./$(DEPDIR)/epb.Plo
include ./$(DEPDIR)/epb2jd.Plo
include ./$(DEPDIR)/epj.Plo
include ./$(DEPDIR)/epj2jd.Plo
include ./$(DEPDIR)/epv00.Plo
include ./$(DEPDIR)/eqec06.Plo
include ./$(DEPDIR)/eqeq94.Plo
include ./$(DEPDIR)/era00.Plo
include ./$(DEPDIR)/erfadatextra.Plo
include ./$(DEPDIR)/erfaversion.Plo
include ./$(DEPDIR)/fad03.Plo
include ./$(DEPDIR)/fae03.Plo
include ./$(DEPDIR)/faf03.Plo
include ./$(DEPDIR)/faju03.Plo
include ./$(DEPDIR)/fal03.Plo
include ./$(DEPDIR)/falp03.Plo
include ./$(DEPDIR)/fama03.Plo
include ./$(DEPDIR)/fame03.Plo
include ./$(DEPDIR)/fane03.Plo
include ./$(DEPDIR)/faom03.Plo
include ./$(DEPDIR)/fapa03.Plo
include ./$(DEPDIR)/fasa03.Plo
include ./$(DEPDIR)/faur03.Plo
include ./$(DEPDIR)/fave03.Plo
include ./$(DEPDIR)/fk425.Plo
include ./$(DEPDIR)/fk45z.Plo
include ./$(DEPDIR)/fk524.Plo
include ./$(DEPDIR)/fk52h.Plo
include ./$(DEPDIR)/fk54z.Plo
include ./$(DEPDIR)/fk5hip.Plo
include ./$(DEPDIR)/fk5hz.Plo
include ./$(DEPDIR)/fw2m.Plo
include ./$(DEPDIR)/fw2xy.Plo
include ./$(DEPDIR)/g2icrs.Plo
include ./$(DEPDIR)/gc2gd.Plo
include ./$(DEPDIR)/gc2gde.Plo
include ./$(DEPDIR)/gd2gc.Plo
include ./$(DEPDIR)/gd2gce.Plo
include ./$(DEPDIR)/gmst00.Plo
include ./$(DEPDIR)/gmst06.Plo
include ./$(DEPDIR)/gmst82.Plo
include ./$(DEPDIR)/gst00a.Plo
include ./$(DEPDIR)/gst00b.Plo
include ./$(DEPDIR)/gst06.Plo
include ./$(DEPDIR)/gst06a.Plo
include ./$(DEPDIR)/gst94.Plo
include ./$(DEPDIR)/h2fk5.Plo
include ./$(DEPDIR)/hd2ae.Plo
include ./$(DEPDIR)/hd2pa.Plo
include ./$(DEPDIR)/hfk5z.Plo
include ./$(DEPDIR)/icrs2g.Plo
include ./$(DEPDIR)/ir.Plo
include ./$(DEPDIR)/jd2cal.Plo
include ./$(DEPDIR)/jdcalf.Plo
include ./$(DEPDIR)/ld.Plo
include ./$(DEPDIR)/ldn.Plo
include ./$(DEPDIR)/ldsun.Plo
include ./$(DEPDIR)/lteceq.Plo
include ./$(DEPDIR)/ltecm.Plo
include ./$(DEPDIR)/lteqec.Plo
include ./$(DEPDIR)/ltp.Plo
include ./$(DEPDIR)/ltpb.Plo
include ./$(DEPDIR)/ltpecl.Plo
include ./$(DEPDIR)/ltpequ.Plo
include ./$(DEPDIR)/num00a.Plo
include ./$(DEPDIR)/num00b.Plo
include ./$(DEPDIR)/num06a.Plo
include ./$(DEPDIR)/numat.Plo
include ./$(DEPDIR)/nut00a.Plo
include ./$(DEPDIR)/nut00b.Plo
include ./$(DEPDIR)/nut06a.Plo
include ./$(DEPDIR)/nut80.Plo
include ./$(DEPDIR)/nutm80.Plo
include ./$(DEPDIR)/obl06.Plo
include ./$(DEPDIR)/obl80.Plo
include ./$(DEPDIR)/p06e.Plo
include ./$(DEPDIR)/p2pv.Plo
include ./$(DEPDIR)/p2s.Plo
include ./$(DEPDIR)/pap.Plo
include ./$(DEPDIR)/pas.Plo
include ./$(DEPDIR)/pb06.Plo
include ./$(DEPDIR)/pdp.Plo
include ./$(DEPDIR)/pfw06.Plo
include ./$(DEPDIR)/plan94.Plo
include ./$(DEPDIR)/pm.Plo
include ./$(DEPDIR)/pmat00.Plo
include ./$(DEPDIR)/pmat06.Plo
include ./$(DEPDIR)/pmat76.Plo
include ./$(DEPDIR)/pmp.Plo
include ./$(DEPDIR)/pmpx.Plo
include ./$(DEPDIR)/pmsafe.Plo
include ./$(DEPDIR)/pn.Plo
include ./$(DEPDIR)/pn00.Plo
include ./$(DEPDIR)/pn00a.Plo
include ./$(DEPDIR)/pn00b.Plo
include ./$(DEPDIR)/pn06.Plo
include ./$(DEPDIR)/pn06a.Plo
include ./$(DEPDIR)/pnm00a.Plo
include ./$(DEPDIR)/pnm00b.Plo
include ./$(DEPDIR)/pnm06a.Plo
include ./$(DEPDIR)/pnm80.Plo
include ./$(DEPDIR)/pom00.Plo
include ./$(DEPDIR)/ppp.Plo
include ./$(DEPDIR)/ppsp.Plo
include ./$(DEPDIR)/pr00.Plo
include ./$(DEPDIR)/prec76.Plo
include ./$(DEPDIR)/pv2p.Plo
include ./$(DEPDIR)/pv2s.Plo
include ./$(DEPDIR)/pvdpv.Plo
include ./$(DEPDIR)/pvm.Plo
include ./$(DEPDIR)/pvmpv.Plo
include ./$(DEPDIR)/pvppv.Plo
include ./$(DEPDIR)/pvstar.Plo
include ./$(DEPDIR)/pvtob.Plo
include ./$(DEPDIR)/pvu.Plo
include ./$(DEPDIR)/pvup.Plo
include ./$(DEPDIR)/pvxpv.Plo
include ./$(DEPDIR)/pxp.Plo
include ./$(DEPDIR)/refco.Plo
include ./$(DEPDIR)/rm2v.Plo
include ./$(DEPDIR)/rv2m.Plo
include ./$(DEPDIR)/rx.Plo
include ./$(DEPDIR)/rxp.Plo
include ./$(DEPDIR)/rxpv.Plo
include ./$(DEPDIR)/rxr.Plo
include ./$(DEPDIR)/ry.Plo
include ./$(DEPDIR)/rz.Plo
include ./$(DEPDIR)/s00.Plo
include ./$(DEPDIR)/s00a.Plo
include ./$(DEPDIR)/s00b.Plo
include ./$(DEPDIR)/s06.Plo
include ./$(DEPDIR)/s06a.Plo
include ./$(DEPDIR)/s2c.Plo
include ./$(DEPDIR)/s2p.Plo
include ./$(DEPDIR)/s2pv.Plo
include ./$(DEPDIR)/s2xpv.Plo
include ./$(DEPDIR)/sepp.Plo
include ./$(DEPDIR)/seps.Plo
include ./$(DEPDIR)/sp00.Plo
include ./$(DEPDIR)/starpm.Plo
include ./$(DEPDIR)/starpv.Plo
include ./$(DEPDIR)/sxp.Plo
include ./$(DEPDIR)/sxpv.Plo
include ./$(DEPDIR)/t_erfa_c.Po
include ./$(DEPDIR)/t_erfa_c_extra.Po
include ./$(DEPDIR)/taitt.Plo
include ./$(DEPDIR)/taiut1.Plo
include ./$(DEPDIR)/taiutc.Plo
include ./$(DEPDIR)/tcbtdb.Plo
include ./$(DEPDIR)/tcgtt.Plo
include ./$(DEPDIR)/tdbtcb.Plo
include ./$(DEPDIR)/tdbtt.Plo
include ./$(DEPDIR)/tf2a.Plo
include ./$(DEPDIR)/tf2d.Plo
include ./$(DEPDIR)/tpors.Plo
include ./$(DEPDIR)/tporv.Plo
include ./$(DEPDIR)/tpsts.Plo
include ./$(DEPDIR)/tpstv.Plo
include ./$(DEPDIR)/tpxes.Plo
include ./$(DEPDIR)/tpxev.Plo
include ./$(DEPDIR)/tr.Plo
include ./$(DEPDIR)/trxp.Plo
include ./$(DEPDIR)/trxpv.Plo
include ./$(DEPDIR)/tttai.Plo
include ./$(DEPDIR)/tttcg.Plo
include ./$(DEPDIR)/tttdb.Plo
include ./$(DEPDIR)/ttut1.Plo
include ./$(DEPDIR)/ut1tai.Plo
include ./$(DEPDIR)/ut1tt.Plo
include ./$(DEPDIR)/ut1utc.Plo
include ./$(DEPDIR)/utctai.Plo
include ./$(DEPDIR)/utcut1.Plo
include ./$(DEPDIR)/xy06.Plo
include ./$(DEPDIR)/xys00a.Plo
include ./$(DEPDIR)/xys00b.Plo
include ./$(DEPDIR)/xys06a.Plo
include ./$(DEPDIR)/zp.Plo
include ./$(DEPDIR)/zpv.Plo
include ./$(DEPDIR)/zr.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
t_erfa_c.log: t_erfa_c$(EXEEXT)
	@p='t_erfa_c$(EXEEXT)'; \
	b='t_erfa_c'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_erfa_c_extra.log: t_erfa_c_extra$(EXEEXT)
	@p='t_erfa_c_extra$(EXEEXT)'; \
	b='t_erfa_c_extra'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
