require.undef("wa_model"),define("wa_model",[],function(){const reduce=Function.bind.call(Function.call,Array.prototype.reduce),isEnumerable=Function.bind.call(Function.call,Object.prototype.propertyIsEnumerable),concat=Function.bind.call(Function.call,Array.prototype.concat),keys=Reflect.ownKeys;Object.values||(Object.values=function(O){return reduce(keys(O),(v,k)=>concat(v,"string"==typeof k&&isEnumerable(O,k)?[O[k]]:[]),[])}),Object.entries||(Object.entries=function(O){return reduce(keys(O),(e,k)=>concat(e,"string"==typeof k&&isEnumerable(O,k)?[[k,O[k]]]:[]),[])});class Turn{constructor(json){this.json=json,this.conv=void 0}setConversation(conv){this.conv=conv}get id(){return this.json["@metadata"].tx_id}get conversation(){return this.conv}get request(){return this.json.payload.request}get response(){return this.json.payload.response}get conversationMetadata(){return this.json.metadata.conversation}get conversationId(){return this.conversationMetadata.conversation_id}get workspaceId(){return this.conversationMetadata.workspace_id}get turnCounter(){return this.conversationMetadata.turn_counter}get startTime(){return this.request.timestamp}get inputText(){return this.request.input&&this.request.input.text}get requestContext(){return this.request.context}get visitedNodeIds(){const nodes_visited=[...this.response.output.nodes_visited],reqOutputs=Object.keys(_.get(this.requestContext,"system._node_output_map",{}));return Object.keys(_.get(this.responseContext,"system._node_output_map",{})).filter(key=>!reqOutputs.includes(key)).forEach(key=>{nodes_visited.includes(key)||nodes_visited.push(key)}),nodes_visited}get outputText(){return this.response.output.text}get responseContext(){return this.response.context}get intents(){return this.response.intents}get entities(){return this.response.entities}isLastTurn(node){return this.conversation.turns().length===this.turnCounter&&(arr=this.visitedNodeIds)[arr.length-1]===node.id;var arr}}class Workspace{constructor(json){this.json=json,this._nodeById={},this.json.dialog_nodes.forEach(n=>{this._nodeById[n.dialog_node]=new WsNode(n,this)}),this._nodes=this._sortNodes(Object.values(this._nodeById),void 0)}get id(){return this.json.workspace_id}get name(){return this.json.name}get description(){return this.json.description}nodes(){return this._nodes}_sortNodes(nodes,parent){const rs=[],ns=nodes.filter(n=>n.parentId===parent);let cur=ns.find(n=>!n.prevSiblingId);for(;cur;)rs.push(cur),rs.push(...this._sortNodes(nodes,cur.id)),cur=ns.find(n=>n.prevSiblingId===cur.id);return rs}nodeById(id){return this._nodeById[id]}}Workspace.NODE_TYPE_FOLDER="folder",Workspace.NODE_TYPE_FRAME="frame",Workspace.NODE_TYPE_RESPONSE_CONDITION="response_condition",Workspace.NODE_TYPE_STANDARD="standard",Workspace.NODE_TYPE_SLOT="slot",Workspace.NODE_TYPE_EVENT_HANDLER="event_handler",Workspace.JUMP_TO="jump_to",Workspace.SKIP_USER_INPUT="skip_user_input",Workspace.RESPONSE_CONDITION="response_condition";class WsNode{constructor(json,ws){this.json=json,this.ws=ws}get id(){return this.json.dialog_node}get type(){return this.json.type}get title(){switch(this.type){case Workspace.NODE_TYPE_SLOT:return this.json.variable;case Workspace.NODE_TYPE_EVENT_HANDLER:return this.json.event_name;default:return this.json.title}}get titleOrId(){return this.title||this.id}get context(){return this.json.context}get condition(){return this.json.conditions}get output(){return this.json.output}get outputLongText(){return(this.output&&this.output.text&&(this.output.text.values||[this.output.text])||[]).map(val=>JSON.stringify(val,null,2)).join(", ")}get nextStep(){return this.json.next_step}get prevSiblingId(){return this.json.previous_sibling}get parentId(){return this.json.parent}parent(){return this.ws.nodeById(this.parentId)}isParent(){return this.ws.nodes().find(n=>n.parentId===this.id)}isTop(){return!this.parentId}isEndOfTurn(){return!(this.isJumpTo()||this.isFolder()||this.isSwitch())}isFrame(){return Boolean(this.type===Workspace.NODE_TYPE_FRAME)}isJumpTo(){return Boolean(this.nextStep&&this.nextStep.behavior===Workspace.JUMP_TO)}isSwitch(){return Boolean(!this.isFrame()&&this.json.metadata&&this.json.metadata._customization&&this.json.metadata._customization.mcr)}isFolder(){return this.type===Workspace.NODE_TYPE_FOLDER}directChildren(){return this.ws.nodes().filter(n=>n.parentId===this.id)}depth(){return this.isTop()?0:this.parent().depth()+1}match(str){return stringContains(this.id,str)||stringContains(this.title,str)||stringContains(this.condition,str)||stringContains(this.type,str)||stringContains(JSON.stringify(this.json.metadata),str)||stringContains(JSON.stringify(this.output),str)}}function stringContains(bigStr,smallStr){return!(!bigStr||!smallStr)&&bigStr.toLowerCase().indexOf(smallStr.toLowerCase())>=0}return{Workspace:Workspace,Visits:class{constructor(visits){this._visits=visits}nodeVisits(node_id){return node_id in this._visits?this._visits[node_id].visits:"*"}},Conversation:class{constructor(wsId,convId,turns){this._convId=convId,this._wsId=wsId,this._turnsMap={},turns.sort((a,b)=>a.turnCounter-b.turnCounter),this._turns=turns,turns.forEach(turn=>{this._turnsMap[turn.turnCounter]=turn,turn.setConversation(this)})}get id(){return this._convId}get workspaceId(){return this._wsId}turns(){return this._turns}turnByCounter(counter){return this._turnsMap[counter]}get firstTurnStartTime(){return this.turns()[0].startTime}},Turn:class extends Turn{get request(){return this.json.request}get response(){return this.json.response}get conversationId(){return this.response.context.conversation_id}get workspaceId(){return this.json.workspace_id}get turnCounter(){return this.responseContext.system.dialog_request_counter}get startTime(){return this.json.request_timestamp}},EventPublisher:class{constructor(){this._handlers={}}on(eventName,callback){this._handlers[eventName]||(this._handlers[eventName]=[]),this._handlers[eventName].push(callback)}_publish(eventName,...args){const hs=this._handlers[eventName]||[];return Promise.all(hs.map(h=>h.call(this,...args)))}}}});